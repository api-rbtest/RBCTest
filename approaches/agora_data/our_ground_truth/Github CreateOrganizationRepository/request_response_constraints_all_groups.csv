operation,response resource,attribute,group,description,part,corresponding attribute,corresponding attribute description
post-/orgs/{org}/repos,repository,description,description,,requestBody,description,A short description of the repository
post-/orgs/{org}/repos,repository,homepage,homepage,,requestBody,homepage,A URL with more information about the repository
post-/orgs/{org}/repos,repository,visibility,visibility,"The repository visibility: public, private, or internal",requestBody,visibility,"Can be `public` or `private`. If your organization is associated with an enterprise account using GitHub Enterprise Cloud or GitHub Enterprise Server 2.20+, `visibility` can also be `internal`. Note: For GitHub Enterprise Server and GitHub AE, this endpoint will only list repositories available to all users on the enterprise. For more information, see ""[Creating an internal repository](https://help.github.com/en/github/creating-cloning-and-archiving-repositories/about-repository-visibility#about-internal-repositories)"" in the GitHub Help documentation.  
The `visibility` parameter overrides the `private` parameter when you use both parameters with the `nebula-preview` preview header"
post-/orgs/{org}/repos,repository,has_issues,has_issues,Whether issues are enabled,requestBody,has_issues,Either `true` to enable issues for this repository or `false` to disable them
post-/orgs/{org}/repos,repository,has_projects,has_projects,Whether projects are enabled,requestBody,has_projects,"Either `true` to enable projects for this repository or `false` to disable them. **Note:** If you're creating a repository in an organization that has disabled repository projects, the default is `false`, and if you pass `true`, the API returns an error"
post-/orgs/{org}/repos,repository,has_wiki,has_wiki,Whether the wiki is enabled,requestBody,has_wiki,Either `true` to enable the wiki for this repository or `false` to disable it
post-/orgs/{org}/repos,repository,is_template,is_template,Whether this repository acts as a template that can be used to generate new repositories,requestBody,is_template,Either `true` to make this repo available as a template repository or `false` to prevent it
post-/orgs/{org}/repos,repository,allow_squash_merge,allow_squash_merge,Whether to allow squash merges for pull requests,requestBody,allow_squash_merge,"Either `true` to allow squash-merging pull requests, or `false` to prevent squash-merging"
post-/orgs/{org}/repos,repository,allow_rebase_merge,allow_rebase_merge,Whether to allow rebase merges for pull requests,requestBody,allow_rebase_merge,"Either `true` to allow rebase-merging pull requests, or `false` to prevent rebase-merging"
post-/orgs/{org}/repos,repository,delete_branch_on_merge,delete_branch_on_merge,Whether to delete head branches when pull requests are merged,requestBody,delete_branch_on_merge,"Either `true` to allow automatically deleting head branches when pull requests are merged, or `false` to prevent automatic deletion"
