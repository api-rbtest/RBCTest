{
  "openapi": "3.0.3",
  "info": {
    "version": "1.1.4",
    "title": "Github CreateOrganizationRepository API",
    "description": "GitHub's v3 REST API.",
    "license": {
      "name": "MIT",
      "url": "https://spdx.org/licenses/MIT"
    },
    "termsOfService": "https://docs.github.com/articles/github-terms-of-service",
    "contact": {
      "name": "Support",
      "url": "https://support.github.com/contact"
    }
  },
  "tags": [{
      "name": "actions",
      "description": "Endpoints to manage GitHub Actions using the REST API."
    },
    {
      "name": "activity",
      "description": "Activity APIs provide access to notifications, subscriptions, and timelines."
    },
    {
      "name": "apps",
      "description": "Information for integrations and installations."
    },
    {
      "name": "billing",
      "description": "Monitor charges and usage from Actions and Packages."
    },
    {
      "name": "checks",
      "description": "Rich interactions with checks run by your integrations."
    },
    {
      "name": "code-scanning",
      "description": "Retrieve code scanning alerts from a repository."
    },
    {
      "name": "codes-of-conduct",
      "description": "Insight into codes of conduct for your communities."
    },
    {
      "name": "emojis",
      "description": "List emojis available to use on GitHub."
    },
    {
      "name": "gists",
      "description": "View, modify your gists."
    },
    {
      "name": "git",
      "description": "Raw Git functionality."
    },
    {
      "name": "gitignore",
      "description": "View gitignore templates"
    },
    {
      "name": "interactions",
      "description": "Owner or admin management of users interactons."
    },
    {
      "name": "issues",
      "description": "Interact with GitHub Issues."
    },
    {
      "name": "licenses",
      "description": "View various OSS licenses."
    },
    {
      "name": "markdown",
      "description": "Render Github flavored markdown"
    },
    {
      "name": "meta",
      "description": "Endpoints that give information about the API."
    },
    {
      "name": "migrations",
      "description": "Move projects to or from GitHub."
    },
    {
      "name": "oauth-authorizations",
      "description": "Manage access of OAuth applications"
    },
    {
      "name": "orgs",
      "description": "Interact with GitHub Orgs."
    },
    {
      "name": "projects",
      "description": "Interact with GitHub Projects."
    },
    {
      "name": "pulls",
      "description": "Interact with GitHub Pull Requests."
    },
    {
      "name": "rate-limit",
      "description": "Check your current rate limit status"
    },
    {
      "name": "reactions",
      "description": "Interact with reactions to various GitHub entities."
    },
    {
      "name": "repos",
      "description": "Interact with GitHub Repos."
    },
    {
      "name": "scim",
      "description": "Provisioning of GitHub organization membership for SCIM-enabled providers."
    },
    {
      "name": "search",
      "description": "Look for stuff on GitHub."
    },
    {
      "name": "secret-scanning",
      "description": "Retrieve secret scanning alerts from a repository."
    },
    {
      "name": "teams",
      "description": "Interact with GitHub Teams."
    },
    {
      "name": "users",
      "description": "Interact with and view information about users and also current user."
    }
  ],
  "servers": [{
    "url": "https://api.github.com"
  }],
  "paths": {
    "/orgs/{org}/repos": {
      "post": {
        "summary": "Create an organization repository",
        "description": "Creates a new repository in the specified organization. The authenticated user must be a member of the organization.\n\n**OAuth scope requirements**\n\nWhen using [OAuth](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/), authorizations must include:\n\n*   `public_repo` scope or `repo` scope to create a public repository. Note: For GitHub AE, use `repo` scope to create an internal repository.\n*   `repo` scope to create a private repository",
        "tags": [
          "repos"
        ],
        "operationId": "createOrganizationRepository",
        "parameters": [{
          "$ref": "#/components/parameters/org"
        }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the repository."
                  },
                  "description": {
                    "type": "string",
                    "description": "A short description of the repository."
                  },
                  "homepage": {
                    "type": "string",
                    "description": "A URL with more information about the repository."
                  },
                  "private": {
                    "type": "boolean",
                    "description": "Whether the repository is private.",
                    "default": false
                  },
                  "visibility": {
                    "type": "string",
                    "description": "Can be `public` or `private`. If your organization is associated with an enterprise account using GitHub Enterprise Cloud or GitHub Enterprise Server 2.20+, `visibility` can also be `internal`. Note: For GitHub Enterprise Server and GitHub AE, this endpoint will only list repositories available to all users on the enterprise. For more information, see \"[Creating an internal repository](https://help.github.com/en/github/creating-cloning-and-archiving-repositories/about-repository-visibility#about-internal-repositories)\" in the GitHub Help documentation.  \nThe `visibility` parameter overrides the `private` parameter when you use both parameters with the `nebula-preview` preview header.",
                    "enum": [
                      "public",
                      "private",
                      "visibility",
                      "internal"
                    ]
                  },
                  "has_issues": {
                    "type": "boolean",
                    "description": "Either `true` to enable issues for this repository or `false` to disable them.",
                    "default": true
                  },
                  "has_projects": {
                    "type": "boolean",
                    "description": "Either `true` to enable projects for this repository or `false` to disable them. **Note:** If you're creating a repository in an organization that has disabled repository projects, the default is `false`, and if you pass `true`, the API returns an error.",
                    "default": true
                  },
                  "has_wiki": {
                    "type": "boolean",
                    "description": "Either `true` to enable the wiki for this repository or `false` to disable it.",
                    "default": true
                  },
                  "is_template": {
                    "type": "boolean",
                    "description": "Either `true` to make this repo available as a template repository or `false` to prevent it.",
                    "default": false
                  },
                  "team_id": {
                    "type": "integer",
                    "description": "The id of the team that will be granted access to this repository. This is only valid when creating a repository in an organization."
                  },
                  "auto_init": {
                    "type": "boolean",
                    "description": "Pass `true` to create an initial commit with empty README.",
                    "default": false
                  },
                  "gitignore_template": {
                    "type": "string",
                    "description": "Desired language or platform [.gitignore template](https://github.com/github/gitignore) to apply. Use the name of the template without the extension. For example, \"Haskell\"."
                  },
                  "license_template": {
                    "type": "string",
                    "description": "Choose an [open source license template](https://choosealicense.com/) that best suits your needs, and then use the [license keyword](https://help.github.com/articles/licensing-a-repository/#searching-github-by-license-type) as the `license_template` string. For example, \"mit\" or \"mpl-2.0\"."
                  },
                  "allow_squash_merge": {
                    "type": "boolean",
                    "description": "Either `true` to allow squash-merging pull requests, or `false` to prevent squash-merging.",
                    "default": true
                  },
                  "allow_merge_commit": {
                    "type": "boolean",
                    "description": "Either `true` to allow merging pull requests with a merge commit, or `false` to prevent merging pull requests with merge commits.",
                    "default": true
                  },
                  "allow_rebase_merge": {
                    "type": "boolean",
                    "description": "Either `true` to allow rebase-merging pull requests, or `false` to prevent rebase-merging.",
                    "default": true
                  },
                  "delete_branch_on_merge": {
                    "type": "boolean",
                    "description": "Either `true` to allow automatically deleting head branches when pull requests are merged, or `false` to prevent automatic deletion.",
                    "default": false
                  },
                  "allow_auto_merge": {
                    "type": "boolean"
                  },
                  "use_squash_pr_title_as_default": {
                    "type": "boolean"
                  },
                  "squash_merge_commit_title": {
                    "type": "string"
                  },
                  "squash_merge_commit_message": {
                    "type": "string"
                  },
                  "merge_commit_title": {
                    "type": "string"
                  },
                  "merge_commit_message": {
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ]
              },
              "example": {
                "name": "Hello-World",
                "description": "This is your first repository",
                "homepage": "https://github.com",
                "private": false,
                "has_issues": true,
                "has_projects": true,
                "has_wiki": true
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/repository"
                }
              }
            }
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": true,
          "previews": [{
              "required": false,
              "name": "nebula",
              "note": "You can set the visibility of a repository using the new `visibility` parameter in the [Repositories API](https://docs.github.com/rest/reference/repos/), and get a repository's visibility with a new response key. For more information, see the [blog post](https://developer.github.com/changes/2019-12-03-internal-visibility-changes/).\n\nTo access repository visibility during the preview period, you must provide a custom [media type](https://docs.github.com/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.nebula-preview+json\n```"
            },
            {
              "required": false,
              "name": "baptiste",
              "note": "The `is_template` and `template_repository` keys are currently available for developer to preview. See [Create a repository using a template](https://docs.github.com/rest/reference/repos#create-a-repository-using-a-template) to learn how to create template repositories. To access these new response keys during the preview period, you must provide a custom [media type](https://docs.github.com/rest/overview/media-types) in the `Accept` header:\n\n```shell\napplication/vnd.github.baptiste-preview+json\n```"
            }
          ],
          "category": "repos"
        }
      }
    }
  },
  "components": {
    "schemas": {
      "simple-user": {
        "title": "Simple User",
        "description": "Simple User",
        "type": "object",
        "properties": {
          "login": {
            "type": "string",
            "example": "octocat"
          },
          "id": {
            "type": "integer",
            "example": 1
          },
          "node_id": {
            "type": "string",
            "example": "MDQ6VXNlcjE="
          },
          "avatar_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/images/error/octocat_happy.gif"
          },
          "gravatar_id": {
            "type": "string",
            "example": "41d064eb2195891e12d0413f63227ea7",
            "nullable": true
          },
          "url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat"
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/octocat"
          },
          "followers_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat/followers"
          },
          "following_url": {
            "type": "string",
            "example": "https://api.github.com/users/octocat/following{/other_user}"
          },
          "gists_url": {
            "type": "string",
            "example": "https://api.github.com/users/octocat/gists{/gist_id}"
          },
          "starred_url": {
            "type": "string",
            "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}"
          },
          "subscriptions_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat/subscriptions"
          },
          "organizations_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat/orgs"
          },
          "repos_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat/repos"
          },
          "events_url": {
            "type": "string",
            "example": "https://api.github.com/users/octocat/events{/privacy}"
          },
          "received_events_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat/received_events"
          },
          "type": {
            "type": "string",
            "example": "User"
          },
          "site_admin": {
            "type": "boolean"
          },
          "starred_at": {
            "type": "string",
            "example": "\"2020-07-09T00:17:55Z\""
          }
        },
        "required": [
          "avatar_url",
          "events_url",
          "followers_url",
          "following_url",
          "gists_url",
          "gravatar_id",
          "html_url",
          "id",
          "node_id",
          "login",
          "organizations_url",
          "received_events_url",
          "repos_url",
          "site_admin",
          "starred_url",
          "subscriptions_url",
          "type",
          "url"
        ],
        "nullable": true
      },
      "integration": {
        "title": "GitHub app",
        "description": "GitHub apps are a new way to extend GitHub. They can be installed directly on organizations and user accounts and granted access to specific repositories. They come with granular permissions and built-in webhooks. GitHub apps are first class actors within GitHub.",
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the GitHub app",
            "example": 37,
            "type": "integer"
          },
          "slug": {
            "description": "The slug name of the GitHub app",
            "example": "probot-owners",
            "type": "string"
          },
          "node_id": {
            "type": "string",
            "example": "MDExOkludGVncmF0aW9uMQ=="
          },
          "owner": {
            "nullable": true,
            "allOf": [{
              "$ref": "#/components/schemas/simple-user"
            }]
          },
          "name": {
            "description": "The name of the GitHub app",
            "example": "Probot Owners",
            "type": "string"
          },
          "description": {
            "type": "string",
            "example": "The description of the app.",
            "nullable": true
          },
          "external_url": {
            "type": "string",
            "format": "uri",
            "example": "https://example.com"
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/apps/super-ci"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2017-07-08T16:18:44-04:00"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2017-07-08T16:18:44-04:00"
          },
          "permissions": {
            "description": "The set of permissions for the GitHub app",
            "type": "object",
            "properties": {
              "issues": {
                "type": "string"
              },
              "checks": {
                "type": "string"
              },
              "metadata": {
                "type": "string"
              },
              "contents": {
                "type": "string"
              },
              "deployments": {
                "type": "string"
              }
            },
            "example": {
              "issues": "read",
              "deployments": "write"
            }
          },
          "events": {
            "description": "The list of events for the GitHub app",
            "example": [
              "label",
              "deployment"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "installations_count": {
            "description": "The number of installations associated with the GitHub app",
            "example": 5,
            "type": "integer"
          },
          "client_id": {
            "type": "string",
            "example": "\"Iv1.25b5d1e65ffc4022\""
          },
          "client_secret": {
            "type": "string",
            "example": "\"1d4b2097ac622ba702d19de498f005747a8b21d3\""
          },
          "webhook_secret": {
            "type": "string",
            "example": "\"6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b\""
          },
          "pem": {
            "type": "string",
            "example": "\"-----BEGIN RSA PRIVATE KEY-----\\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\\n-----END RSA PRIVATE KEY-----\\n\""
          }
        },
        "required": [
          "id",
          "node_id",
          "owner",
          "name",
          "description",
          "external_url",
          "html_url",
          "created_at",
          "updated_at",
          "permissions",
          "events"
        ],
        "additionalProperties": true
      },
      "basic-error": {
        "title": "Basic Error",
        "description": "Basic Error",
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "documentation_url": {
            "type": "string"
          }
        }
      },
      "validation-error-simple": {
        "title": "Validation Error Simple",
        "description": "Validation Error Simple",
        "type": "object",
        "required": [
          "message",
          "documentation_url"
        ],
        "properties": {
          "message": {
            "type": "string"
          },
          "documentation_url": {
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "webhook-config-url": {
        "type": "string",
        "description": "The URL to which the payloads will be delivered.",
        "example": "https://example.com/webhook",
        "format": "uri"
      },
      "webhook-config-content-type": {
        "type": "string",
        "description": "The media type used to serialize the payloads. Supported values include `json` and `form`. The default is `form`.",
        "example": "\"json\""
      },
      "webhook-config-secret": {
        "type": "string",
        "description": "If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value for [delivery signature headers](https://docs.github.com/webhooks/event-payloads/#delivery-headers).",
        "example": "\"********\""
      },
      "webhook-config-insecure-ssl": {
        "type": "string",
        "description": "Determines whether the SSL certificate of the host for `url` will be verified when delivering payloads. Supported values include `0` (verification is performed) and `1` (verification is not performed). The default is `0`. **We strongly recommend not setting this to `1` as you are subject to man-in-the-middle and other attacks.**",
        "example": "\"0\""
      },
      "webhook-config": {
        "title": "Webhook Configuration",
        "description": "Configuration object of the webhook",
        "type": "object",
        "properties": {
          "url": {
            "$ref": "#/components/schemas/webhook-config-url"
          },
          "content_type": {
            "$ref": "#/components/schemas/webhook-config-content-type"
          },
          "secret": {
            "$ref": "#/components/schemas/webhook-config-secret"
          },
          "insecure_ssl": {
            "$ref": "#/components/schemas/webhook-config-insecure-ssl"
          }
        }
      },
      "enterprise": {
        "title": "Enterprise",
        "description": "An enterprise account",
        "type": "object",
        "properties": {
          "description": {
            "description": "A short description of the enterprise.",
            "type": "string",
            "nullable": true
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/enterprises/octo-business"
          },
          "website_url": {
            "description": "The enterprise's website URL.",
            "type": "string",
            "nullable": true,
            "format": "uri"
          },
          "id": {
            "description": "Unique identifier of the enterprise",
            "example": 42,
            "type": "integer"
          },
          "node_id": {
            "type": "string",
            "example": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5"
          },
          "name": {
            "description": "The name of the enterprise.",
            "type": "string",
            "example": "Octo Business"
          },
          "slug": {
            "description": "The slug url identifier for the enterprise.",
            "type": "string",
            "example": "octo-business"
          },
          "created_at": {
            "type": "string",
            "nullable": true,
            "format": "date-time",
            "example": "2019-01-26T19:01:12Z"
          },
          "updated_at": {
            "type": "string",
            "nullable": true,
            "format": "date-time",
            "example": "2019-01-26T19:14:43Z"
          },
          "avatar_url": {
            "type": "string",
            "format": "uri"
          }
        },
        "required": [
          "id",
          "node_id",
          "name",
          "slug",
          "html_url",
          "created_at",
          "updated_at",
          "avatar_url"
        ]
      },
      "installation": {
        "title": "Installation",
        "description": "Installation",
        "type": "object",
        "properties": {
          "id": {
            "description": "The ID of the installation.",
            "type": "integer",
            "example": 1
          },
          "account": {
            "nullable": true,
            "anyOf": [{
                "$ref": "#/components/schemas/simple-user"
              },
              {
                "$ref": "#/components/schemas/enterprise"
              }
            ]
          },
          "repository_selection": {
            "description": "Describe whether all repositories have been selected or there's a selection involved",
            "type": "string",
            "enum": [
              "all",
              "selected"
            ]
          },
          "access_tokens_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/installations/1/access_tokens"
          },
          "repositories_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/installation/repositories"
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/organizations/github/settings/installations/1"
          },
          "app_id": {
            "type": "integer",
            "example": 1
          },
          "target_id": {
            "description": "The ID of the user or organization this token is being scoped to.",
            "type": "integer"
          },
          "target_type": {
            "type": "string",
            "example": "Organization"
          },
          "permissions": {
            "type": "object",
            "example": {
              "issues": "read",
              "deployments": "write"
            },
            "properties": {
              "deployments": {
                "type": "string"
              },
              "checks": {
                "type": "string"
              },
              "metadata": {
                "type": "string"
              },
              "contents": {
                "type": "string"
              },
              "pull_requests": {
                "type": "string"
              },
              "statuses": {
                "type": "string"
              },
              "issues": {
                "type": "string",
                "example": "\"read\""
              },
              "organization_administration": {
                "type": "string",
                "example": "\"read\""
              }
            }
          },
          "events": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "single_file_name": {
            "type": "string",
            "example": "config.yaml",
            "nullable": true
          },
          "has_multiple_single_files": {
            "type": "boolean",
            "example": true
          },
          "single_file_paths": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "config.yml",
              ".github/issue_TEMPLATE.md"
            ]
          },
          "app_slug": {
            "type": "string",
            "example": "github-actions"
          },
          "suspended_by": {
            "nullable": true,
            "allOf": [{
              "$ref": "#/components/schemas/simple-user"
            }]
          },
          "suspended_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "contact_email": {
            "type": "string",
            "example": "\"test_13f1e99741e3e004@d7e1eb0bc0a1ba12.com\"",
            "nullable": true
          }
        },
        "required": [
          "id",
          "app_id",
          "app_slug",
          "target_id",
          "target_type",
          "single_file_name",
          "repository_selection",
          "access_tokens_url",
          "html_url",
          "repositories_url",
          "events",
          "account",
          "permissions",
          "created_at",
          "updated_at"
        ]
      },
      "app-permissions": {
        "title": "App Permissions",
        "type": "object",
        "description": "The permissions granted to the user-to-server access token.",
        "properties": {
          "actions": {
            "type": "string",
            "description": "The level of permission to grant the access token for GitHub Actions workflows, workflow runs, and artifacts. Can be one of: `read` or `write`.",
            "enum": [
              "read",
              "write"
            ]
          },
          "administration": {
            "type": "string",
            "description": "The level of permission to grant the access token for repository creation, deletion, settings, teams, and collaborators creation. Can be one of: `read` or `write`.",
            "enum": [
              "read",
              "write"
            ]
          },
          "checks": {
            "type": "string",
            "description": "The level of permission to grant the access token for checks on code. Can be one of: `read` or `write`.",
            "enum": [
              "read",
              "write"
            ]
          },
          "content_references": {
            "type": "string",
            "description": "The level of permission to grant the access token for notification of content references and creation content attachments. Can be one of: `read` or `write`.",
            "enum": [
              "read",
              "write"
            ]
          },
          "contents": {
            "type": "string",
            "description": "The level of permission to grant the access token for repository contents, commits, branches, downloads, releases, and merges. Can be one of: `read` or `write`.",
            "enum": [
              "read",
              "write"
            ]
          },
          "deployments": {
            "type": "string",
            "description": "The level of permission to grant the access token for deployments and deployment statuses. Can be one of: `read` or `write`.",
            "enum": [
              "read",
              "write"
            ]
          },
          "environments": {
            "type": "string",
            "description": "The level of permission to grant the access token for managing repository environments. Can be one of: `read` or `write`.",
            "enum": [
              "read",
              "write"
            ]
          },
          "issues": {
            "type": "string",
            "description": "The level of permission to grant the access token for issues and related comments, assignees, labels, and milestones. Can be one of: `read` or `write`.",
            "enum": [
              "read",
              "write"
            ]
          },
          "metadata": {
            "type": "string",
            "description": "The level of permission to grant the access token to search repositories, list collaborators, and access repository metadata. Can be one of: `read` or `write`.",
            "enum": [
              "read",
              "write"
            ]
          },
          "packages": {
            "type": "string",
            "description": "The level of permission to grant the access token for packages published to GitHub Packages. Can be one of: `read` or `write`.",
            "enum": [
              "read",
              "write"
            ]
          },
          "pages": {
            "type": "string",
            "description": "The level of permission to grant the access token to retrieve Pages statuses, configuration, and builds, as well as create new builds. Can be one of: `read` or `write`.",
            "enum": [
              "read",
              "write"
            ]
          },
          "pull_requests": {
            "type": "string",
            "description": "The level of permission to grant the access token for pull requests and related comments, assignees, labels, milestones, and merges. Can be one of: `read` or `write`.",
            "enum": [
              "read",
              "write"
            ]
          },
          "repository_hooks": {
            "type": "string",
            "description": "The level of permission to grant the access token to manage the post-receive hooks for a repository. Can be one of: `read` or `write`.",
            "enum": [
              "read",
              "write"
            ]
          },
          "repository_projects": {
            "type": "string",
            "description": "The level of permission to grant the access token to manage repository projects, columns, and cards. Can be one of: `read`, `write`, or `admin`.",
            "enum": [
              "read",
              "write",
              "admin"
            ]
          },
          "secret_scanning_alerts": {
            "type": "string",
            "description": "The level of permission to grant the access token to view and manage secret scanning alerts. Can be one of: `read` or `write`.",
            "enum": [
              "read",
              "write"
            ]
          },
          "secrets": {
            "type": "string",
            "description": "The level of permission to grant the access token to manage repository secrets. Can be one of: `read` or `write`.",
            "enum": [
              "read",
              "write"
            ]
          },
          "security_events": {
            "type": "string",
            "description": "The level of permission to grant the access token to view and manage security events like code scanning alerts. Can be one of: `read` or `write`.",
            "enum": [
              "read",
              "write"
            ]
          },
          "single_file": {
            "type": "string",
            "description": "The level of permission to grant the access token to manage just a single file. Can be one of: `read` or `write`.",
            "enum": [
              "read",
              "write"
            ]
          },
          "statuses": {
            "type": "string",
            "description": "The level of permission to grant the access token for commit statuses. Can be one of: `read` or `write`.",
            "enum": [
              "read",
              "write"
            ]
          },
          "vulnerability_alerts": {
            "type": "string",
            "description": "The level of permission to grant the access token to retrieve Dependabot alerts. Can be one of: `read`.",
            "enum": [
              "read"
            ]
          },
          "workflows": {
            "type": "string",
            "description": "The level of permission to grant the access token to update GitHub Actions workflow files. Can be one of: `write`.",
            "enum": [
              "write"
            ]
          },
          "members": {
            "type": "string",
            "description": "The level of permission to grant the access token for organization teams and members. Can be one of: `read` or `write`.",
            "enum": [
              "read",
              "write"
            ]
          },
          "organization_administration": {
            "type": "string",
            "description": "The level of permission to grant the access token to manage access to an organization. Can be one of: `read` or `write`.",
            "enum": [
              "read",
              "write"
            ]
          },
          "organization_hooks": {
            "type": "string",
            "description": "The level of permission to grant the access token to manage the post-receive hooks for an organization. Can be one of: `read` or `write`.",
            "enum": [
              "read",
              "write"
            ]
          },
          "organization_plan": {
            "type": "string",
            "description": "The level of permission to grant the access token for viewing an organization's plan. Can be one of: `read`.",
            "enum": [
              "read"
            ]
          },
          "organization_projects": {
            "type": "string",
            "description": "The level of permission to grant the access token to manage organization projects, columns, and cards. Can be one of: `read`, `write`, or `admin`.",
            "enum": [
              "read",
              "write",
              "admin"
            ]
          },
          "organization_secrets": {
            "type": "string",
            "description": "The level of permission to grant the access token to manage organization secrets. Can be one of: `read` or `write`.",
            "enum": [
              "read",
              "write"
            ]
          },
          "organization_self_hosted_runners": {
            "type": "string",
            "description": "The level of permission to grant the access token to view and manage GitHub Actions self-hosted runners available to an organization. Can be one of: `read` or `write`.",
            "enum": [
              "read",
              "write"
            ]
          },
          "organization_user_blocking": {
            "type": "string",
            "description": "The level of permission to grant the access token to view and manage users blocked by the organization. Can be one of: `read` or `write`.",
            "enum": [
              "read",
              "write"
            ]
          },
          "team_discussions": {
            "type": "string",
            "description": "The level of permission to grant the access token to manage team discussions and related comments. Can be one of: `read` or `write`.",
            "enum": [
              "read",
              "write"
            ]
          }
        },
        "example": {
          "contents": "read",
          "issues": "read",
          "deployments": "write",
          "single_file": "read"
        }
      },
      "license-simple": {
        "title": "License Simple",
        "description": "License Simple",
        "nullable": true,
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "example": "mit"
          },
          "name": {
            "type": "string",
            "example": "MIT License"
          },
          "url": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "https://api.github.com/licenses/mit"
          },
          "spdx_id": {
            "type": "string",
            "nullable": true,
            "example": "MIT"
          },
          "node_id": {
            "type": "string",
            "example": "MDc6TGljZW5zZW1pdA=="
          },
          "html_url": {
            "type": "string",
            "format": "uri"
          }
        },
        "required": [
          "key",
          "name",
          "url",
          "spdx_id",
          "node_id"
        ]
      },
      "repository": {
        "title": "Repository",
        "description": "A git repository",
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the repository",
            "example": 42,
            "type": "integer"
          },
          "node_id": {
            "type": "string",
            "example": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5"
          },
          "name": {
            "description": "The name of the repository.",
            "type": "string",
            "example": "Team Environment"
          },
          "full_name": {
            "type": "string",
            "example": "octocat/Hello-World"
          },
          "license": {
            "nullable": true,
            "$ref": "#/components/schemas/license-simple"
          },
          "forks": {
            "type": "integer"
          },
          "permissions": {
            "type": "object",
            "properties": {
              "admin": {
                "type": "boolean"
              },
              "pull": {
                "type": "boolean"
              },
              "triage": {
                "type": "boolean"
              },
              "push": {
                "type": "boolean"
              },
              "maintain": {
                "type": "boolean"
              }
            },
            "required": [
              "admin",
              "pull",
              "push"
            ]
          },
          "owner": {
            "nullable": true,
            "$ref": "#/components/schemas/simple-user"
          },
          "organization": {
            "$ref": "#/components/schemas/simple-user"
          },
          "private": {
            "description": "Whether the repository is private or public.",
            "default": false,
            "type": "boolean"
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/octocat/Hello-World"
          },
          "description": {
            "type": "string",
            "example": "This your first repo!",
            "nullable": true
          },
          "fork": {
            "type": "boolean"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World"
          },
          "archive_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}"
          },
          "assignees_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}"
          },
          "blobs_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}"
          },
          "branches_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}"
          },
          "collaborators_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}"
          },
          "comments_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/comments{/number}"
          },
          "commits_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}"
          },
          "compare_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}"
          },
          "contents_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}"
          },
          "contributors_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/contributors"
          },
          "deployments_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/deployments"
          },
          "downloads_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/downloads"
          },
          "events_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/events"
          },
          "forks_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/forks"
          },
          "git_commits_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}"
          },
          "git_refs_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}"
          },
          "git_tags_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}"
          },
          "git_url": {
            "type": "string",
            "example": "git:github.com/octocat/Hello-World.git"
          },
          "issue_comment_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}"
          },
          "issue_events_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}"
          },
          "issues_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/issues{/number}"
          },
          "keys_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}"
          },
          "labels_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/labels{/name}"
          },
          "languages_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/languages"
          },
          "merges_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/merges"
          },
          "milestones_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}"
          },
          "notifications_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}"
          },
          "pulls_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}"
          },
          "releases_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/releases{/id}"
          },
          "ssh_url": {
            "type": "string",
            "example": "git@github.com:octocat/Hello-World.git"
          },
          "stargazers_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/stargazers"
          },
          "statuses_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}"
          },
          "subscribers_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/subscribers"
          },
          "subscription_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/subscription"
          },
          "tags_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/tags"
          },
          "teams_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/teams"
          },
          "trees_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}"
          },
          "clone_url": {
            "type": "string",
            "example": "https://github.com/octocat/Hello-World.git"
          },
          "mirror_url": {
            "type": "string",
            "format": "uri",
            "example": "git:git.example.com/octocat/Hello-World",
            "nullable": true
          },
          "hooks_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/hooks"
          },
          "svn_url": {
            "type": "string",
            "format": "uri",
            "example": "https://svn.github.com/octocat/Hello-World"
          },
          "homepage": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com",
            "nullable": true
          },
          "language": {
            "type": "string",
            "nullable": true
          },
          "forks_count": {
            "type": "integer",
            "example": 9
          },
          "stargazers_count": {
            "type": "integer",
            "example": 80
          },
          "watchers_count": {
            "type": "integer",
            "example": 80
          },
          "size": {
            "type": "integer",
            "example": 108
          },
          "default_branch": {
            "description": "The default branch of the repository.",
            "type": "string",
            "example": "master"
          },
          "open_issues_count": {
            "type": "integer",
            "example": 0
          },
          "is_template": {
            "description": "Whether this repository acts as a template that can be used to generate new repositories.",
            "default": false,
            "type": "boolean",
            "example": true
          },
          "topics": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "has_issues": {
            "description": "Whether issues are enabled.",
            "default": true,
            "type": "boolean",
            "example": true
          },
          "has_projects": {
            "description": "Whether projects are enabled.",
            "default": true,
            "type": "boolean",
            "example": true
          },
          "has_wiki": {
            "description": "Whether the wiki is enabled.",
            "default": true,
            "type": "boolean",
            "example": true
          },
          "has_pages": {
            "type": "boolean"
          },
          "has_downloads": {
            "description": "Whether downloads are enabled.",
            "default": true,
            "type": "boolean",
            "example": true
          },
          "archived": {
            "description": "Whether the repository is archived.",
            "default": false,
            "type": "boolean"
          },
          "disabled": {
            "type": "boolean",
            "description": "Returns whether or not this repository disabled."
          },
          "visibility": {
            "description": "The repository visibility: public, private, or internal.",
            "default": "public",
            "type": "string"
          },
          "pushed_at": {
            "type": "string",
            "format": "date-time",
            "example": "2011-01-26T19:06:43Z",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2011-01-26T19:01:12Z",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2011-01-26T19:14:43Z",
            "nullable": true
          },
          "allow_rebase_merge": {
            "description": "Whether to allow rebase merges for pull requests.",
            "default": true,
            "type": "boolean",
            "example": true
          },
          "template_repository": {
            "nullable": true,
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "node_id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "full_name": {
                "type": "string"
              },
              "owner": {
                "type": "object",
                "properties": {
                  "login": {
                    "type": "string"
                  },
                  "id": {
                    "type": "integer"
                  },
                  "node_id": {
                    "type": "string"
                  },
                  "avatar_url": {
                    "type": "string"
                  },
                  "gravatar_id": {
                    "type": "string"
                  },
                  "url": {
                    "type": "string"
                  },
                  "html_url": {
                    "type": "string"
                  },
                  "followers_url": {
                    "type": "string"
                  },
                  "following_url": {
                    "type": "string"
                  },
                  "gists_url": {
                    "type": "string"
                  },
                  "starred_url": {
                    "type": "string"
                  },
                  "subscriptions_url": {
                    "type": "string"
                  },
                  "organizations_url": {
                    "type": "string"
                  },
                  "repos_url": {
                    "type": "string"
                  },
                  "events_url": {
                    "type": "string"
                  },
                  "received_events_url": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  },
                  "site_admin": {
                    "type": "boolean"
                  }
                }
              },
              "private": {
                "type": "boolean"
              },
              "html_url": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "fork": {
                "type": "boolean"
              },
              "url": {
                "type": "string"
              },
              "archive_url": {
                "type": "string"
              },
              "assignees_url": {
                "type": "string"
              },
              "blobs_url": {
                "type": "string"
              },
              "branches_url": {
                "type": "string"
              },
              "collaborators_url": {
                "type": "string"
              },
              "comments_url": {
                "type": "string"
              },
              "commits_url": {
                "type": "string"
              },
              "compare_url": {
                "type": "string"
              },
              "contents_url": {
                "type": "string"
              },
              "contributors_url": {
                "type": "string"
              },
              "deployments_url": {
                "type": "string"
              },
              "downloads_url": {
                "type": "string"
              },
              "events_url": {
                "type": "string"
              },
              "forks_url": {
                "type": "string"
              },
              "git_commits_url": {
                "type": "string"
              },
              "git_refs_url": {
                "type": "string"
              },
              "git_tags_url": {
                "type": "string"
              },
              "git_url": {
                "type": "string"
              },
              "issue_comment_url": {
                "type": "string"
              },
              "issue_events_url": {
                "type": "string"
              },
              "issues_url": {
                "type": "string"
              },
              "keys_url": {
                "type": "string"
              },
              "labels_url": {
                "type": "string"
              },
              "languages_url": {
                "type": "string"
              },
              "merges_url": {
                "type": "string"
              },
              "milestones_url": {
                "type": "string"
              },
              "notifications_url": {
                "type": "string"
              },
              "pulls_url": {
                "type": "string"
              },
              "releases_url": {
                "type": "string"
              },
              "ssh_url": {
                "type": "string"
              },
              "stargazers_url": {
                "type": "string"
              },
              "statuses_url": {
                "type": "string"
              },
              "subscribers_url": {
                "type": "string"
              },
              "subscription_url": {
                "type": "string"
              },
              "tags_url": {
                "type": "string"
              },
              "teams_url": {
                "type": "string"
              },
              "trees_url": {
                "type": "string"
              },
              "clone_url": {
                "type": "string"
              },
              "mirror_url": {
                "type": "string"
              },
              "hooks_url": {
                "type": "string"
              },
              "svn_url": {
                "type": "string"
              },
              "homepage": {
                "type": "string"
              },
              "language": {
                "type": "string"
              },
              "forks_count": {
                "type": "integer"
              },
              "stargazers_count": {
                "type": "integer"
              },
              "watchers_count": {
                "type": "integer"
              },
              "size": {
                "type": "integer"
              },
              "default_branch": {
                "type": "string"
              },
              "open_issues_count": {
                "type": "integer"
              },
              "is_template": {
                "type": "boolean"
              },
              "topics": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "has_issues": {
                "type": "boolean"
              },
              "has_projects": {
                "type": "boolean"
              },
              "has_wiki": {
                "type": "boolean"
              },
              "has_pages": {
                "type": "boolean"
              },
              "has_downloads": {
                "type": "boolean"
              },
              "archived": {
                "type": "boolean"
              },
              "disabled": {
                "type": "boolean"
              },
              "visibility": {
                "type": "string"
              },
              "pushed_at": {
                "type": "string"
              },
              "created_at": {
                "type": "string"
              },
              "updated_at": {
                "type": "string"
              },
              "permissions": {
                "type": "object",
                "properties": {
                  "admin": {
                    "type": "boolean"
                  },
                  "push": {
                    "type": "boolean"
                  },
                  "pull": {
                    "type": "boolean"
                  }
                }
              },
              "allow_rebase_merge": {
                "type": "boolean"
              },
              "temp_clone_token": {
                "type": "string"
              },
              "allow_squash_merge": {
                "type": "boolean"
              },
              "delete_branch_on_merge": {
                "type": "boolean"
              },
              "allow_merge_commit": {
                "type": "boolean"
              },
              "subscribers_count": {
                "type": "integer"
              },
              "network_count": {
                "type": "integer"
              }
            }
          },
          "temp_clone_token": {
            "type": "string"
          },
          "allow_squash_merge": {
            "description": "Whether to allow squash merges for pull requests.",
            "default": true,
            "type": "boolean",
            "example": true
          },
          "delete_branch_on_merge": {
            "description": "Whether to delete head branches when pull requests are merged",
            "default": false,
            "type": "boolean",
            "example": false
          },
          "allow_merge_commit": {
            "description": "Whether to allow merge commits for pull requests.",
            "default": true,
            "type": "boolean",
            "example": true
          },
          "subscribers_count": {
            "type": "integer"
          },
          "network_count": {
            "type": "integer"
          },
          "open_issues": {
            "type": "integer"
          },
          "watchers": {
            "type": "integer"
          },
          "master_branch": {
            "type": "string"
          },
          "starred_at": {
            "type": "string",
            "example": "\"2020-07-09T00:17:42Z\""
          },
          "allow_auto_merge": {
            "type": "boolean"
          },
          "allow_forking": {
            "type": "boolean"
          },
          "allow_update_branch": {
            "type": "boolean"
          },
          "merge_commit_message": {
            "type": "string"
          },
          "merge_commit_title": {
            "type": "string"
          },
          "squash_merge_commit_message": {
            "type": "string"
          },
          "squash_merge_commit_title": {
            "type": "string"
          },
          "use_squash_pr_title_as_default": {
            "type": "boolean"
          },
          "web_commit_signoff_required": {
            "type": "boolean"
          }
        },
        "required": [
          "archive_url",
          "assignees_url",
          "blobs_url",
          "branches_url",
          "collaborators_url",
          "comments_url",
          "commits_url",
          "compare_url",
          "contents_url",
          "contributors_url",
          "deployments_url",
          "description",
          "downloads_url",
          "events_url",
          "fork",
          "forks_url",
          "full_name",
          "git_commits_url",
          "git_refs_url",
          "git_tags_url",
          "hooks_url",
          "html_url",
          "id",
          "node_id",
          "issue_comment_url",
          "issue_events_url",
          "issues_url",
          "keys_url",
          "labels_url",
          "languages_url",
          "merges_url",
          "milestones_url",
          "name",
          "notifications_url",
          "owner",
          "private",
          "pulls_url",
          "releases_url",
          "stargazers_url",
          "statuses_url",
          "subscribers_url",
          "subscription_url",
          "tags_url",
          "teams_url",
          "trees_url",
          "url",
          "clone_url",
          "default_branch",
          "forks",
          "forks_count",
          "git_url",
          "has_downloads",
          "has_issues",
          "has_projects",
          "has_wiki",
          "has_pages",
          "homepage",
          "language",
          "archived",
          "disabled",
          "mirror_url",
          "open_issues",
          "open_issues_count",
          "license",
          "pushed_at",
          "size",
          "ssh_url",
          "stargazers_count",
          "svn_url",
          "watchers",
          "watchers_count",
          "created_at",
          "updated_at"
        ]
      },
      "installation-token": {
        "title": "Installation Token",
        "description": "Authentication token for a GitHub App installed on a user or org.",
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          },
          "expires_at": {
            "type": "string"
          },
          "permissions": {
            "type": "object",
            "properties": {
              "issues": {
                "type": "string"
              },
              "contents": {
                "type": "string"
              },
              "metadata": {
                "type": "string",
                "example": "read"
              },
              "single_file": {
                "type": "string",
                "example": "read"
              }
            }
          },
          "repository_selection": {
            "type": "string",
            "enum": [
              "all",
              "selected"
            ]
          },
          "repositories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/repository"
            }
          },
          "single_file": {
            "type": "string",
            "example": "README.md"
          },
          "has_multiple_single_files": {
            "type": "boolean",
            "example": true
          },
          "single_file_paths": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "config.yml",
              ".github/issue_TEMPLATE.md"
            ]
          }
        },
        "required": [
          "token",
          "expires_at"
        ]
      },
      "validation-error": {
        "title": "Validation Error",
        "description": "Validation Error",
        "type": "object",
        "required": [
          "message",
          "documentation_url"
        ],
        "properties": {
          "message": {
            "type": "string"
          },
          "documentation_url": {
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "code"
              ],
              "properties": {
                "resource": {
                  "type": "string"
                },
                "field": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                },
                "code": {
                  "type": "string"
                },
                "index": {
                  "type": "integer"
                },
                "value": {
                  "oneOf": [{
                      "type": "string",
                      "nullable": true
                    },
                    {
                      "type": "integer",
                      "nullable": true
                    },
                    {
                      "type": "array",
                      "nullable": true,
                      "items": {
                        "type": "string"
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "application-grant": {
        "title": "Application Grant",
        "description": "The authorization associated with an OAuth Access.",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/applications/grants/1"
          },
          "app": {
            "type": "object",
            "properties": {
              "client_id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "url": {
                "type": "string",
                "format": "uri"
              }
            },
            "required": [
              "client_id",
              "name",
              "url"
            ]
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2011-09-06T17:26:27Z"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2011-09-06T20:39:23Z"
          },
          "scopes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "public_repo"
            ]
          },
          "user": {
            "nullable": true,
            "allOf": [{
              "$ref": "#/components/schemas/simple-user"
            }]
          }
        },
        "required": [
          "app",
          "id",
          "scopes",
          "url",
          "created_at",
          "updated_at"
        ]
      },
      "scoped-installation": {
        "title": "Scoped Installation",
        "type": "object",
        "properties": {
          "permissions": {
            "$ref": "#/components/schemas/app-permissions"
          },
          "repository_selection": {
            "description": "Describe whether all repositories have been selected or there's a selection involved",
            "type": "string",
            "enum": [
              "all",
              "selected"
            ]
          },
          "single_file_name": {
            "type": "string",
            "example": "config.yaml",
            "nullable": true
          },
          "has_multiple_single_files": {
            "type": "boolean",
            "example": true
          },
          "single_file_paths": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "config.yml",
              ".github/issue_TEMPLATE.md"
            ]
          },
          "repositories_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat/repos"
          },
          "account": {
            "$ref": "#/components/schemas/simple-user"
          }
        },
        "required": [
          "permissions",
          "repository_selection",
          "single_file_name",
          "repositories_url",
          "account"
        ]
      },
      "authorization": {
        "title": "Authorization",
        "description": "The authorization for an OAuth app, GitHub App, or a Personal Access Token.",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "url": {
            "type": "string",
            "format": "uri"
          },
          "scopes": {
            "description": "A list of scopes that this authorization is in.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "token": {
            "type": "string"
          },
          "token_last_eight": {
            "type": "string",
            "nullable": true
          },
          "hashed_token": {
            "type": "string",
            "nullable": true
          },
          "app": {
            "type": "object",
            "properties": {
              "client_id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "url": {
                "type": "string",
                "format": "uri"
              }
            },
            "required": [
              "client_id",
              "name",
              "url"
            ]
          },
          "note": {
            "type": "string",
            "nullable": true
          },
          "note_url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "fingerprint": {
            "type": "string",
            "nullable": true
          },
          "user": {
            "nullable": true,
            "allOf": [{
              "$ref": "#/components/schemas/simple-user"
            }]
          },
          "installation": {
            "nullable": true,
            "allOf": [{
              "$ref": "#/components/schemas/scoped-installation"
            }]
          }
        },
        "required": [
          "app",
          "id",
          "note",
          "note_url",
          "scopes",
          "token",
          "hashed_token",
          "token_last_eight",
          "fingerprint",
          "url",
          "created_at",
          "updated_at"
        ]
      },
      "code-of-conduct": {
        "title": "Code Of Conduct",
        "description": "Code Of Conduct",
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "example": "contributor_covenant"
          },
          "name": {
            "type": "string",
            "example": "Contributor Covenant"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/codes_of_conduct/contributor_covenant"
          },
          "body": {
            "type": "string",
            "example": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment include:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response\n                  to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,\n                  posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [EMAIL]. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n"
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          }
        },
        "required": [
          "url",
          "html_url",
          "key",
          "name"
        ]
      },
      "content-reference-attachment": {
        "title": "ContentReferenceAttachment",
        "description": "Content Reference attachments allow you to provide context around URLs posted in comments",
        "type": "object",
        "properties": {
          "id": {
            "description": "The ID of the attachment",
            "example": 21,
            "type": "integer"
          },
          "title": {
            "description": "The title of the attachment",
            "example": "Title of the attachment",
            "type": "string",
            "maxLength": 1024
          },
          "body": {
            "description": "The body of the attachment",
            "example": "Body of the attachment",
            "type": "string",
            "maxLength": 262144
          },
          "node_id": {
            "description": "The node_id of the content attachment",
            "example": "MDE3OkNvbnRlbnRBdHRhY2htZW50MjE=",
            "type": "string"
          }
        },
        "required": [
          "id",
          "title",
          "body"
        ]
      },
      "enabled-organizations": {
        "type": "string",
        "description": "The policy that controls the organizations in the enterprise that are allowed to run GitHub Actions. Can be one of: `all`, `none`, or `selected`.",
        "enum": [
          "all",
          "none",
          "selected"
        ]
      },
      "allowed-actions": {
        "type": "string",
        "description": "The permissions policy that controls the actions that are allowed to run. Can be one of: `all`, `local_only`, or `selected`.",
        "enum": [
          "all",
          "local_only",
          "selected"
        ]
      },
      "selected-actions-url": {
        "type": "string",
        "description": "The API URL to use to get or set the actions that are allowed to run, when `allowed_actions` is set to `selected`."
      },
      "actions-enterprise-permissions": {
        "type": "object",
        "properties": {
          "enabled_organizations": {
            "$ref": "#/components/schemas/enabled-organizations"
          },
          "selected_organizations_url": {
            "type": "string",
            "description": "The API URL to use to get or set the selected organizations that are allowed to run GitHub Actions, when `enabled_organizations` is set to `selected`."
          },
          "allowed_actions": {
            "$ref": "#/components/schemas/allowed-actions"
          },
          "selected_actions_url": {
            "$ref": "#/components/schemas/selected-actions-url"
          }
        },
        "required": [
          "enabled_organizations",
          "allowed_actions"
        ]
      },
      "organization-simple": {
        "title": "Organization Simple",
        "description": "Organization Simple",
        "type": "object",
        "properties": {
          "login": {
            "type": "string",
            "example": "github"
          },
          "id": {
            "type": "integer",
            "example": 1
          },
          "node_id": {
            "type": "string",
            "example": "MDEyOk9yZ2FuaXphdGlvbjE="
          },
          "url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/orgs/github"
          },
          "repos_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/orgs/github/repos"
          },
          "events_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/orgs/github/events"
          },
          "hooks_url": {
            "type": "string",
            "example": "https://api.github.com/orgs/github/hooks"
          },
          "issues_url": {
            "type": "string",
            "example": "https://api.github.com/orgs/github/issues"
          },
          "members_url": {
            "type": "string",
            "example": "https://api.github.com/orgs/github/members{/member}"
          },
          "public_members_url": {
            "type": "string",
            "example": "https://api.github.com/orgs/github/public_members{/member}"
          },
          "avatar_url": {
            "type": "string",
            "example": "https://github.com/images/error/octocat_happy.gif"
          },
          "description": {
            "type": "string",
            "example": "A great organization",
            "nullable": true
          }
        },
        "required": [
          "login",
          "url",
          "id",
          "node_id",
          "repos_url",
          "events_url",
          "hooks_url",
          "issues_url",
          "members_url",
          "public_members_url",
          "avatar_url",
          "description"
        ]
      },
      "selected-actions": {
        "type": "object",
        "properties": {
          "github_owned_allowed": {
            "type": "boolean",
            "description": "Whether GitHub-owned actions are allowed. For example, this includes the actions in the `actions` organization."
          },
          "verified_allowed": {
            "type": "boolean",
            "description": "Whether actions in GitHub Marketplace from verified creators are allowed. Set to `true` to allow all GitHub Marketplace actions by verified creators."
          },
          "patterns_allowed": {
            "type": "array",
            "description": "Specifies a list of string-matching patterns to allow specific action(s). Wildcards, tags, and SHAs are allowed. For example, `monalisa/octocat@*`, `monalisa/octocat@v2`, `monalisa/*`.\"",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "github_owned_allowed",
          "patterns_allowed",
          "verified_allowed"
        ]
      },
      "runner-groups-enterprise": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "visibility": {
            "type": "string"
          },
          "default": {
            "type": "boolean"
          },
          "selected_organizations_url": {
            "type": "string"
          },
          "runners_url": {
            "type": "string"
          },
          "allows_public_repositories": {
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "name",
          "visibility",
          "allows_public_repositories",
          "default",
          "runners_url"
        ]
      },
      "runner": {
        "title": "Self hosted runners",
        "description": "A self hosted runner",
        "type": "object",
        "properties": {
          "id": {
            "description": "The id of the runner.",
            "type": "integer",
            "example": 5
          },
          "name": {
            "description": "The name of the runner.",
            "type": "string",
            "example": "iMac"
          },
          "os": {
            "description": "The Operating System of the runner.",
            "type": "string",
            "example": "macos"
          },
          "status": {
            "description": "The status of the runner.",
            "type": "string",
            "example": "online"
          },
          "busy": {
            "type": "boolean"
          },
          "labels": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Unique identifier of the label."
                },
                "name": {
                  "type": "string",
                  "description": "Name of the label."
                },
                "type": {
                  "type": "string",
                  "description": "The type of label. Read-only labels are applied automatically when the runner is configured.",
                  "enum": [
                    "read-only",
                    "custom"
                  ]
                }
              }
            }
          }
        },
        "required": [
          "id",
          "name",
          "os",
          "status",
          "busy",
          "labels"
        ]
      },
      "runner-application": {
        "title": "Runner Application",
        "description": "Runner Application",
        "type": "object",
        "properties": {
          "os": {
            "type": "string"
          },
          "architecture": {
            "type": "string"
          },
          "download_url": {
            "type": "string"
          },
          "filename": {
            "type": "string"
          }
        },
        "required": [
          "os",
          "architecture",
          "download_url",
          "filename"
        ]
      },
      "authentication-token": {
        "title": "Authentication Token",
        "description": "Authentication Token",
        "type": "object",
        "properties": {
          "token": {
            "description": "The token used for authentication",
            "type": "string",
            "example": "v1.1f699f1069f60xxx"
          },
          "expires_at": {
            "description": "The time this token expires",
            "type": "string",
            "format": "date-time",
            "example": "2016-07-11T22:14:10Z"
          },
          "permissions": {
            "type": "object",
            "example": {
              "issues": "read",
              "deployments": "write"
            }
          },
          "repositories": {
            "description": "The repositories this token has access to",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/repository"
            }
          },
          "single_file": {
            "type": "string",
            "example": "config.yaml",
            "nullable": true
          },
          "repository_selection": {
            "description": "Describe whether all repositories have been selected or there's a selection involved",
            "type": "string",
            "enum": [
              "all",
              "selected"
            ]
          }
        },
        "required": [
          "token",
          "expires_at"
        ]
      },
      "audit-log-event": {
        "type": "object",
        "properties": {
          "@timestamp": {
            "type": "integer",
            "description": "The time the audit log event occurred, given as a [Unix timestamp](http://en.wikipedia.org/wiki/Unix_time)."
          },
          "action": {
            "type": "string",
            "description": "The name of the action that was performed, for example `user.login` or `repo.create`."
          },
          "active": {
            "type": "boolean"
          },
          "active_was": {
            "type": "boolean"
          },
          "actor": {
            "type": "string",
            "description": "The actor who performed the action."
          },
          "blocked_user": {
            "type": "string",
            "description": "The username of the account being blocked."
          },
          "business": {
            "type": "string"
          },
          "config": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "config_was": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "content_type": {
            "type": "string"
          },
          "created_at": {
            "type": "integer",
            "description": "The time the audit log event was recorded, given as a [Unix timestamp](http://en.wikipedia.org/wiki/Unix_time)."
          },
          "deploy_key_fingerprint": {
            "type": "string"
          },
          "emoji": {
            "type": "string"
          },
          "events": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "events_were": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "explanation": {
            "type": "string"
          },
          "fingerprint": {
            "type": "string"
          },
          "hook_id": {
            "type": "integer"
          },
          "limited_availability": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "old_user": {
            "type": "string"
          },
          "openssh_public_key": {
            "type": "string"
          },
          "org": {
            "type": "string"
          },
          "previous_visibility": {
            "type": "string"
          },
          "read_only": {
            "type": "boolean"
          },
          "repo": {
            "type": "string",
            "description": "The name of the repository."
          },
          "repository": {
            "type": "string",
            "description": "The name of the repository."
          },
          "repository_public": {
            "type": "boolean"
          },
          "target_login": {
            "type": "string"
          },
          "team": {
            "type": "string"
          },
          "transport_protocol": {
            "type": "integer",
            "description": "The type of protocol (for example, HTTP or SSH) used to transfer Git data."
          },
          "transport_protocol_name": {
            "type": "string",
            "description": "A human readable name for the protocol (for example, HTTP or SSH) used to transfer Git data."
          },
          "user": {
            "type": "string",
            "description": "The user that was affected by the action performed (if available)."
          },
          "visibility": {
            "type": "string",
            "description": "The repository visibility, for example `public` or `private`."
          }
        }
      },
      "actions-billing-usage": {
        "type": "object",
        "properties": {
          "total_minutes_used": {
            "type": "integer",
            "description": "The sum of the free and paid GitHub Actions minutes used."
          },
          "total_paid_minutes_used": {
            "type": "integer",
            "description": "The total paid GitHub Actions minutes used."
          },
          "included_minutes": {
            "type": "integer",
            "description": "The amount of free GitHub Actions minutes available."
          },
          "minutes_used_breakdown": {
            "type": "object",
            "properties": {
              "UBUNTU": {
                "type": "integer",
                "description": "Total minutes used on Ubuntu runner machines."
              },
              "MACOS": {
                "type": "integer",
                "description": "Total minutes used on macOS runner machines."
              },
              "WINDOWS": {
                "type": "integer",
                "description": "Total minutes used on Windows runner machines."
              }
            }
          }
        },
        "required": [
          "total_minutes_used",
          "total_paid_minutes_used",
          "included_minutes",
          "minutes_used_breakdown"
        ]
      },
      "packages-billing-usage": {
        "type": "object",
        "properties": {
          "total_gigabytes_bandwidth_used": {
            "type": "integer",
            "description": "Sum of the free and paid storage space (GB) for GitHuub Packages."
          },
          "total_paid_gigabytes_bandwidth_used": {
            "type": "integer",
            "description": "Total paid storage space (GB) for GitHuub Packages."
          },
          "included_gigabytes_bandwidth": {
            "type": "integer",
            "description": "Free storage space (GB) for GitHub Packages."
          }
        },
        "required": [
          "total_gigabytes_bandwidth_used",
          "total_paid_gigabytes_bandwidth_used",
          "included_gigabytes_bandwidth"
        ]
      },
      "combined-billing-usage": {
        "type": "object",
        "properties": {
          "days_left_in_billing_cycle": {
            "type": "integer",
            "description": "Numbers of days left in billing cycle."
          },
          "estimated_paid_storage_for_month": {
            "type": "integer",
            "description": "Estimated storage space (GB) used in billing cycle."
          },
          "estimated_storage_for_month": {
            "type": "integer",
            "description": "Estimated sum of free and paid storage space (GB) used in billing cycle."
          }
        },
        "required": [
          "days_left_in_billing_cycle",
          "estimated_paid_storage_for_month",
          "estimated_storage_for_month"
        ]
      },
      "actor": {
        "title": "Actor",
        "description": "Actor",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "login": {
            "type": "string"
          },
          "display_login": {
            "type": "string"
          },
          "gravatar_id": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "format": "uri"
          },
          "avatar_url": {
            "type": "string",
            "format": "uri"
          }
        },
        "required": [
          "id",
          "login",
          "gravatar_id",
          "url",
          "avatar_url"
        ]
      },
      "label": {
        "title": "Label",
        "description": "Color-coded labels help you categorize and filter your issues (just like labels in Gmail).",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 208045946
          },
          "node_id": {
            "type": "string",
            "example": "MDU6TGFiZWwyMDgwNDU5NDY="
          },
          "url": {
            "description": "URL for the label",
            "example": "https://api.github.com/repositories/42/labels/bug",
            "type": "string",
            "format": "uri"
          },
          "name": {
            "description": "The name of the label.",
            "example": "bug",
            "type": "string"
          },
          "description": {
            "type": "string",
            "example": "Something isn't working",
            "nullable": true
          },
          "color": {
            "description": "6-character hex code, without the leading #, identifying the color",
            "example": "FFFFFF",
            "type": "string"
          },
          "default": {
            "type": "boolean",
            "example": true
          }
        },
        "required": [
          "id",
          "node_id",
          "url",
          "name",
          "description",
          "color",
          "default"
        ]
      },
      "milestone": {
        "title": "Milestone",
        "description": "A collection of related issues and pull requests.",
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World/milestones/1"
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/octocat/Hello-World/milestones/v1.0"
          },
          "labels_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World/milestones/1/labels"
          },
          "id": {
            "type": "integer",
            "example": 1002604
          },
          "node_id": {
            "type": "string",
            "example": "MDk6TWlsZXN0b25lMTAwMjYwNA=="
          },
          "number": {
            "description": "The number of the milestone.",
            "type": "integer",
            "example": 42
          },
          "state": {
            "description": "The state of the milestone.",
            "example": "open",
            "type": "string",
            "enum": [
              "open",
              "closed"
            ],
            "default": "open"
          },
          "title": {
            "description": "The title of the milestone.",
            "example": "v1.0",
            "type": "string"
          },
          "description": {
            "type": "string",
            "example": "Tracking milestone for version 1.0",
            "nullable": true
          },
          "creator": {
            "nullable": true,
            "allOf": [{
              "$ref": "#/components/schemas/simple-user"
            }]
          },
          "open_issues": {
            "type": "integer",
            "example": 4
          },
          "closed_issues": {
            "type": "integer",
            "example": 8
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2011-04-10T20:09:31Z"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2014-03-03T18:58:10Z"
          },
          "closed_at": {
            "type": "string",
            "format": "date-time",
            "example": "2013-02-12T13:22:01Z",
            "nullable": true
          },
          "due_on": {
            "type": "string",
            "format": "date-time",
            "example": "2012-10-09T23:39:01Z",
            "nullable": true
          }
        },
        "required": [
          "closed_issues",
          "creator",
          "description",
          "due_on",
          "closed_at",
          "id",
          "node_id",
          "labels_url",
          "html_url",
          "number",
          "open_issues",
          "state",
          "title",
          "url",
          "created_at",
          "updated_at"
        ]
      },
      "author_association": {
        "title": "author_association",
        "type": "string",
        "example": "OWNER",
        "description": "How the author is associated with the repository.",
        "enum": [
          "COLLABORATOR",
          "CONTRIBUTOR",
          "FIRST_TIMER",
          "FIRST_TIME_CONTRIBUTOR",
          "MANNEQUIN",
          "MEMBER",
          "NONE",
          "OWNER"
        ]
      },
      "issue-simple": {
        "title": "Issue Simple",
        "description": "Issue Simple",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "node_id": {
            "type": "string",
            "example": "MDU6SXNzdWUx"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World/issues/1347"
          },
          "repository_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World"
          },
          "labels_url": {
            "type": "string",
            "example": "https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}"
          },
          "comments_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments"
          },
          "events_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World/issues/1347/events"
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/octocat/Hello-World/issues/1347"
          },
          "number": {
            "type": "integer",
            "example": 1347
          },
          "state": {
            "type": "string",
            "example": "open"
          },
          "title": {
            "type": "string",
            "example": "Found a bug"
          },
          "body": {
            "type": "string",
            "example": "I'm having a problem with this."
          },
          "user": {
            "nullable": true,
            "allOf": [{
              "$ref": "#/components/schemas/simple-user"
            }]
          },
          "labels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/label"
            }
          },
          "assignee": {
            "nullable": true,
            "allOf": [{
              "$ref": "#/components/schemas/simple-user"
            }]
          },
          "assignees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/simple-user"
            },
            "nullable": true
          },
          "milestone": {
            "nullable": true,
            "allOf": [{
              "$ref": "#/components/schemas/milestone"
            }]
          },
          "locked": {
            "type": "boolean",
            "example": true
          },
          "active_lock_reason": {
            "type": "string",
            "example": "too heated",
            "nullable": true
          },
          "comments": {
            "type": "integer",
            "example": 0
          },
          "pull_request": {
            "type": "object",
            "properties": {
              "merged_at": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "diff_url": {
                "type": "string",
                "format": "uri",
                "nullable": true
              },
              "html_url": {
                "type": "string",
                "format": "uri",
                "nullable": true
              },
              "patch_url": {
                "type": "string",
                "format": "uri",
                "nullable": true
              },
              "url": {
                "type": "string",
                "format": "uri",
                "nullable": true
              }
            },
            "required": [
              "diff_url",
              "html_url",
              "patch_url",
              "url"
            ]
          },
          "closed_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2011-04-22T13:33:48Z"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2011-04-22T13:33:48Z"
          },
          "author_association": {
            "$ref": "#/components/schemas/author_association"
          },
          "body_html": {
            "type": "string"
          },
          "body_text": {
            "type": "string"
          },
          "timeline_url": {
            "type": "string",
            "format": "uri"
          },
          "repository": {
            "$ref": "#/components/schemas/repository"
          },
          "performed_via_github_app": {
            "nullable": true,
            "allOf": [{
              "$ref": "#/components/schemas/integration"
            }]
          }
        },
        "required": [
          "assignee",
          "closed_at",
          "comments",
          "comments_url",
          "events_url",
          "html_url",
          "id",
          "node_id",
          "labels",
          "labels_url",
          "milestone",
          "number",
          "repository_url",
          "state",
          "locked",
          "title",
          "url",
          "user",
          "author_association",
          "created_at",
          "updated_at"
        ]
      },
      "reaction-rollup": {
        "title": "Reaction Rollup",
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "format": "uri"
          },
          "total_count": {
            "type": "integer"
          },
          "+1": {
            "type": "integer"
          },
          "-1": {
            "type": "integer"
          },
          "laugh": {
            "type": "integer"
          },
          "confused": {
            "type": "integer"
          },
          "heart": {
            "type": "integer"
          },
          "hooray": {
            "type": "integer"
          },
          "eyes": {
            "type": "integer"
          },
          "rocket": {
            "type": "integer"
          }
        },
        "required": [
          "url",
          "total_count",
          "+1",
          "-1",
          "laugh",
          "confused",
          "heart",
          "hooray",
          "eyes",
          "rocket"
        ]
      },
      "issue-comment": {
        "title": "Issue Comment",
        "description": "Comments provide a way for people to collaborate on an issue.",
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the issue comment",
            "example": 42,
            "type": "integer"
          },
          "node_id": {
            "type": "string"
          },
          "url": {
            "description": "URL for the issue comment",
            "example": "https://api.github.com/repositories/42/issues/comments/1",
            "type": "string",
            "format": "uri"
          },
          "body": {
            "description": "Contents of the issue comment",
            "example": "What version of Safari were you using when you observed this bug?",
            "type": "string"
          },
          "body_text": {
            "type": "string"
          },
          "body_html": {
            "type": "string"
          },
          "html_url": {
            "type": "string",
            "format": "uri"
          },
          "user": {
            "nullable": true,
            "allOf": [{
              "$ref": "#/components/schemas/simple-user"
            }]
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2011-04-14T16:00:49Z"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2011-04-14T16:00:49Z"
          },
          "issue_url": {
            "type": "string",
            "format": "uri"
          },
          "author_association": {
            "$ref": "#/components/schemas/author_association"
          },
          "performed_via_github_app": {
            "nullable": true,
            "allOf": [{
              "$ref": "#/components/schemas/integration"
            }]
          },
          "reactions": {
            "$ref": "#/components/schemas/reaction-rollup"
          }
        },
        "required": [
          "id",
          "node_id",
          "html_url",
          "issue_url",
          "author_association",
          "user",
          "url",
          "created_at",
          "updated_at"
        ]
      },
      "event": {
        "title": "Event",
        "description": "Event",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "actor": {
            "$ref": "#/components/schemas/actor"
          },
          "repo": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "url": {
                "type": "string",
                "format": "uri"
              }
            },
            "required": [
              "id",
              "name",
              "url"
            ]
          },
          "org": {
            "$ref": "#/components/schemas/actor"
          },
          "payload": {
            "type": "object",
            "properties": {
              "action": {
                "type": "string"
              },
              "issue": {
                "$ref": "#/components/schemas/issue-simple"
              },
              "comment": {
                "$ref": "#/components/schemas/issue-comment"
              },
              "pages": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "page_name": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "summary": {
                      "type": "string",
                      "nullable": true
                    },
                    "action": {
                      "type": "string"
                    },
                    "sha": {
                      "type": "string"
                    },
                    "html_url": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "required": [
              "action"
            ]
          },
          "public": {
            "type": "boolean"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "required": [
          "id",
          "type",
          "actor",
          "repo",
          "payload",
          "public",
          "created_at"
        ]
      },
      "link-with-type": {
        "title": "Link With Type",
        "description": "Hypermedia Link with Type",
        "type": "object",
        "properties": {
          "href": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "required": [
          "href",
          "type"
        ]
      },
      "feed": {
        "title": "Feed",
        "description": "Feed",
        "type": "object",
        "properties": {
          "timeline_url": {
            "type": "string",
            "example": "https://github.com/timeline"
          },
          "user_url": {
            "type": "string",
            "example": "https://github.com/{user}"
          },
          "current_user_public_url": {
            "type": "string",
            "example": "https://github.com/octocat"
          },
          "current_user_url": {
            "type": "string",
            "example": "https://github.com/octocat.private?token=abc123"
          },
          "current_user_actor_url": {
            "type": "string",
            "example": "https://github.com/octocat.private.actor?token=abc123"
          },
          "current_user_organization_url": {
            "type": "string",
            "example": "https://github.com/octocat-org"
          },
          "current_user_organization_urls": {
            "type": "array",
            "example": [
              "https://github.com/organizations/github/octocat.private.atom?token=abc123"
            ],
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "security_advisories_url": {
            "type": "string",
            "example": "https://github.com/security-advisories"
          },
          "_links": {
            "type": "object",
            "properties": {
              "timeline": {
                "$ref": "#/components/schemas/link-with-type"
              },
              "user": {
                "$ref": "#/components/schemas/link-with-type"
              },
              "security_advisories": {
                "$ref": "#/components/schemas/link-with-type"
              },
              "current_user": {
                "$ref": "#/components/schemas/link-with-type"
              },
              "current_user_public": {
                "$ref": "#/components/schemas/link-with-type"
              },
              "current_user_actor": {
                "$ref": "#/components/schemas/link-with-type"
              },
              "current_user_organization": {
                "$ref": "#/components/schemas/link-with-type"
              },
              "current_user_organizations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/link-with-type"
                }
              }
            },
            "required": [
              "timeline",
              "user"
            ]
          }
        },
        "required": [
          "_links",
          "timeline_url",
          "user_url"
        ]
      },
      "base-gist": {
        "title": "Base Gist",
        "description": "Base Gist",
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "format": "uri"
          },
          "forks_url": {
            "type": "string",
            "format": "uri"
          },
          "commits_url": {
            "type": "string",
            "format": "uri"
          },
          "id": {
            "type": "string"
          },
          "node_id": {
            "type": "string"
          },
          "git_pull_url": {
            "type": "string",
            "format": "uri"
          },
          "git_push_url": {
            "type": "string",
            "format": "uri"
          },
          "html_url": {
            "type": "string",
            "format": "uri"
          },
          "files": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "properties": {
                "filename": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "language": {
                  "type": "string"
                },
                "raw_url": {
                  "type": "string"
                },
                "size": {
                  "type": "integer"
                }
              }
            }
          },
          "public": {
            "type": "boolean"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "comments": {
            "type": "integer"
          },
          "user": {
            "nullable": true,
            "allOf": [{
              "$ref": "#/components/schemas/simple-user"
            }]
          },
          "comments_url": {
            "type": "string",
            "format": "uri"
          },
          "owner": {
            "nullable": true,
            "allOf": [{
              "$ref": "#/components/schemas/simple-user"
            }]
          },
          "truncated": {
            "type": "boolean"
          },
          "forks": {
            "type": "array",
            "items": {}
          },
          "history": {
            "type": "array",
            "items": {}
          }
        },
        "required": [
          "id",
          "node_id",
          "url",
          "forks_url",
          "commits_url",
          "git_pull_url",
          "git_push_url",
          "html_url",
          "comments_url",
          "public",
          "description",
          "comments",
          "user",
          "files",
          "created_at",
          "updated_at"
        ]
      },
      "gist-simple": {
        "title": "Gist Simple",
        "description": "Gist Simple",
        "type": "object",
        "properties": {
          "url": {
            "type": "string"
          },
          "forks_url": {
            "type": "string"
          },
          "commits_url": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "node_id": {
            "type": "string"
          },
          "git_pull_url": {
            "type": "string"
          },
          "git_push_url": {
            "type": "string"
          },
          "html_url": {
            "type": "string"
          },
          "files": {
            "type": "object",
            "additionalProperties": {
              "nullable": true,
              "type": "object",
              "properties": {
                "filename": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "language": {
                  "type": "string"
                },
                "raw_url": {
                  "type": "string"
                },
                "size": {
                  "type": "integer"
                },
                "truncated": {
                  "type": "boolean"
                },
                "content": {
                  "type": "string"
                }
              }
            }
          },
          "public": {
            "type": "boolean"
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "comments": {
            "type": "integer"
          },
          "user": {
            "type": "string",
            "nullable": true
          },
          "comments_url": {
            "type": "string"
          },
          "owner": {
            "$ref": "#/components/schemas/simple-user"
          },
          "truncated": {
            "type": "boolean"
          }
        }
      },
      "gist-comment": {
        "title": "Gist Comment",
        "description": "A comment made to a gist.",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "node_id": {
            "type": "string",
            "example": "MDExOkdpc3RDb21tZW50MQ=="
          },
          "url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/gists/a6db0bec360bb87e9418/comments/1"
          },
          "body": {
            "description": "The comment text.",
            "type": "string",
            "maxLength": 65535,
            "example": "Body of the attachment"
          },
          "user": {
            "nullable": true,
            "allOf": [{
              "$ref": "#/components/schemas/simple-user"
            }]
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2011-04-18T23:23:56Z"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2011-04-18T23:23:56Z"
          },
          "author_association": {
            "$ref": "#/components/schemas/author_association"
          }
        },
        "required": [
          "url",
          "id",
          "node_id",
          "user",
          "body",
          "author_association",
          "created_at",
          "updated_at"
        ]
      },
      "gist-commit": {
        "title": "Gist Commit",
        "description": "Gist Commit",
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/gists/aa5a315d61ae9438b18d/57a7f021a713b1c5a6a199b54cc514735d2d462f"
          },
          "version": {
            "type": "string",
            "example": "57a7f021a713b1c5a6a199b54cc514735d2d462f"
          },
          "user": {
            "nullable": true,
            "allOf": [{
              "$ref": "#/components/schemas/simple-user"
            }]
          },
          "change_status": {
            "type": "object",
            "properties": {
              "total": {
                "type": "integer"
              },
              "additions": {
                "type": "integer"
              },
              "deletions": {
                "type": "integer"
              }
            }
          },
          "committed_at": {
            "type": "string",
            "format": "date-time",
            "example": "2010-04-14T02:15:15Z"
          }
        },
        "required": [
          "url",
          "user",
          "version",
          "committed_at",
          "change_status"
        ]
      },
      "gitignore-template": {
        "title": "Gitignore Template",
        "description": "Gitignore Template",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "C"
          },
          "source": {
            "type": "string",
            "example": "# Object files\n*.o\n\n# Libraries\n*.lib\n*.a\n\n# Shared objects (inc. Windows DLLs)\n*.dll\n*.so\n*.so.*\n*.dylib\n\n# Executables\n*.exe\n*.out\n*.app\n"
          }
        },
        "required": [
          "name",
          "source"
        ]
      },
      "issue": {
        "title": "Issue",
        "description": "Issues are a great way to keep track of tasks, enhancements, and bugs for your projects.",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "node_id": {
            "type": "string"
          },
          "url": {
            "description": "URL for the issue",
            "example": "https://api.github.com/repositories/42/issues/1",
            "type": "string",
            "format": "uri"
          },
          "repository_url": {
            "type": "string",
            "format": "uri"
          },
          "labels_url": {
            "type": "string"
          },
          "comments_url": {
            "type": "string",
            "format": "uri"
          },
          "events_url": {
            "type": "string",
            "format": "uri"
          },
          "html_url": {
            "type": "string",
            "format": "uri"
          },
          "number": {
            "description": "Number uniquely identifying the issue within its repository",
            "example": 42,
            "type": "integer"
          },
          "state": {
            "description": "State of the issue; either 'open' or 'closed'",
            "example": "open",
            "type": "string"
          },
          "title": {
            "description": "Title of the issue",
            "example": "Widget creation fails in Safari on OS X 10.8",
            "type": "string"
          },
          "body": {
            "description": "Contents of the issue",
            "example": "It looks like the new widget form is broken on Safari. When I try and create the widget, Safari crashes. This is reproducible on 10.8, but not 10.9. Maybe a browser bug?",
            "type": "string"
          },
          "user": {
            "nullable": true,
            "allOf": [{
              "$ref": "#/components/schemas/simple-user"
            }]
          },
          "labels": {
            "description": "Labels to associate with this issue; pass one or more label names to replace the set of labels on this issue; send an empty array to clear all labels from the issue; note that the labels are silently dropped for users without push access to the repository",
            "example": [
              "bug",
              "registration"
            ],
            "type": "array",
            "items": {
              "oneOf": [{
                  "type": "string"
                },
                {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "node_id": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string",
                      "format": "uri"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string",
                      "nullable": true
                    },
                    "color": {
                      "type": "string",
                      "nullable": true
                    },
                    "default": {
                      "type": "boolean"
                    }
                  }
                }
              ]
            }
          },
          "assignee": {
            "nullable": true,
            "allOf": [{
              "$ref": "#/components/schemas/simple-user"
            }]
          },
          "assignees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/simple-user"
            },
            "nullable": true
          },
          "milestone": {
            "nullable": true,
            "allOf": [{
              "$ref": "#/components/schemas/milestone"
            }]
          },
          "locked": {
            "type": "boolean"
          },
          "active_lock_reason": {
            "type": "string",
            "nullable": true
          },
          "comments": {
            "type": "integer"
          },
          "pull_request": {
            "type": "object",
            "properties": {
              "merged_at": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "diff_url": {
                "type": "string",
                "format": "uri",
                "nullable": true
              },
              "html_url": {
                "type": "string",
                "format": "uri",
                "nullable": true
              },
              "patch_url": {
                "type": "string",
                "format": "uri",
                "nullable": true
              },
              "url": {
                "type": "string",
                "format": "uri",
                "nullable": true
              }
            },
            "required": [
              "diff_url",
              "html_url",
              "patch_url",
              "url"
            ]
          },
          "closed_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "closed_by": {
            "nullable": true,
            "allOf": [{
              "$ref": "#/components/schemas/simple-user"
            }]
          },
          "body_html": {
            "type": "string"
          },
          "body_text": {
            "type": "string"
          },
          "timeline_url": {
            "type": "string",
            "format": "uri"
          },
          "repository": {
            "$ref": "#/components/schemas/repository"
          },
          "performed_via_github_app": {
            "nullable": true,
            "allOf": [{
              "$ref": "#/components/schemas/integration"
            }]
          },
          "author_association": {
            "$ref": "#/components/schemas/author_association"
          },
          "reactions": {
            "$ref": "#/components/schemas/reaction-rollup"
          }
        },
        "required": [
          "assignee",
          "closed_at",
          "comments",
          "comments_url",
          "events_url",
          "html_url",
          "id",
          "node_id",
          "labels",
          "labels_url",
          "milestone",
          "number",
          "repository_url",
          "state",
          "locked",
          "title",
          "url",
          "user",
          "author_association",
          "created_at",
          "updated_at"
        ]
      },
      "license": {
        "title": "License",
        "description": "License",
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "example": "mit"
          },
          "name": {
            "type": "string",
            "example": "MIT License"
          },
          "spdx_id": {
            "type": "string",
            "example": "MIT",
            "nullable": true
          },
          "url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/licenses/mit",
            "nullable": true
          },
          "node_id": {
            "type": "string",
            "example": "MDc6TGljZW5zZW1pdA=="
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "example": "http://choosealicense.com/licenses/mit/"
          },
          "description": {
            "type": "string",
            "example": "A permissive license that is short and to the point. It lets people do anything with your code with proper attribution and without warranty."
          },
          "implementation": {
            "type": "string",
            "example": "Create a text file (typically named LICENSE or LICENSE.txt) in the root of your source code and copy the text of the license into the file. Replace [year] with the current year and [fullname] with the name (or names) of the copyright holders."
          },
          "permissions": {
            "type": "array",
            "example": [
              "commercial-use",
              "modifications",
              "distribution",
              "sublicense",
              "private-use"
            ],
            "items": {
              "type": "string"
            }
          },
          "conditions": {
            "type": "array",
            "example": [
              "include-copyright"
            ],
            "items": {
              "type": "string"
            }
          },
          "limitations": {
            "type": "array",
            "example": [
              "no-liability"
            ],
            "items": {
              "type": "string"
            }
          },
          "body": {
            "type": "string",
            "example": "\n\nThe MIT License (MIT)\n\nCopyright (c) [year] [fullname]\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
          },
          "featured": {
            "type": "boolean",
            "example": true
          }
        },
        "required": [
          "key",
          "name",
          "url",
          "spdx_id",
          "node_id",
          "html_url",
          "description",
          "implementation",
          "permissions",
          "conditions",
          "limitations",
          "body",
          "featured"
        ]
      },
      "marketplace-listing-plan": {
        "title": "Marketplace Listing Plan",
        "description": "Marketplace Listing Plan",
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/marketplace_listing/plans/1313"
          },
          "accounts_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/marketplace_listing/plans/1313/accounts"
          },
          "id": {
            "type": "integer",
            "example": 1313
          },
          "number": {
            "type": "integer",
            "example": 3
          },
          "name": {
            "type": "string",
            "example": "Pro"
          },
          "description": {
            "type": "string",
            "example": "A professional-grade CI solution"
          },
          "monthly_price_in_cents": {
            "type": "integer",
            "example": 1099
          },
          "yearly_price_in_cents": {
            "type": "integer",
            "example": 11870
          },
          "price_model": {
            "type": "string",
            "example": "flat-rate"
          },
          "has_free_trial": {
            "type": "boolean",
            "example": true
          },
          "unit_name": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "example": "published"
          },
          "bullets": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "Up to 25 private repositories",
              "11 concurrent builds"
            ]
          }
        },
        "required": [
          "url",
          "accounts_url",
          "id",
          "number",
          "name",
          "description",
          "has_free_trial",
          "price_model",
          "unit_name",
          "monthly_price_in_cents",
          "state",
          "yearly_price_in_cents",
          "bullets"
        ]
      },
      "marketplace-purchase": {
        "title": "Marketplace Purchase",
        "description": "Marketplace Purchase",
        "type": "object",
        "properties": {
          "url": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "login": {
            "type": "string"
          },
          "organization_billing_email": {
            "type": "string"
          },
          "marketplace_pending_change": {
            "type": "object",
            "properties": {
              "is_installed": {
                "type": "boolean"
              },
              "effective_date": {
                "type": "string"
              },
              "unit_count": {
                "type": "integer",
                "nullable": true
              },
              "id": {
                "type": "integer"
              },
              "plan": {
                "$ref": "#/components/schemas/marketplace-listing-plan"
              }
            },
            "nullable": true
          },
          "marketplace_purchase": {
            "type": "object",
            "properties": {
              "billing_cycle": {
                "type": "string"
              },
              "next_billing_date": {
                "type": "string",
                "nullable": true
              },
              "is_installed": {
                "type": "boolean"
              },
              "unit_count": {
                "type": "integer",
                "nullable": true
              },
              "on_free_trial": {
                "type": "boolean"
              },
              "free_trial_ends_on": {
                "type": "string",
                "nullable": true
              },
              "updated_at": {
                "type": "string"
              },
              "plan": {
                "$ref": "#/components/schemas/marketplace-listing-plan"
              }
            }
          }
        },
        "required": [
          "url",
          "id",
          "type",
          "login",
          "marketplace_purchase"
        ]
      },
      "api-overview": {
        "title": "Api Overview",
        "description": "Api Overview",
        "type": "object",
        "properties": {
          "verifiable_password_authentication": {
            "type": "boolean",
            "example": true
          },
          "ssh_key_fingerprints": {
            "type": "object",
            "properties": {
              "SHA256_RSA": {
                "type": "string"
              },
              "SHA256_DSA": {
                "type": "string"
              }
            }
          },
          "hooks": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "127.0.0.1/32"
            ]
          },
          "web": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "127.0.0.1/32"
            ]
          },
          "api": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "127.0.0.1/32"
            ]
          },
          "git": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "127.0.0.1/32"
            ]
          },
          "pages": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "192.30.252.153/32",
              "192.30.252.154/32"
            ]
          },
          "importer": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "54.158.161.132",
              "54.226.70.38"
            ]
          },
          "actions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "13.64.0.0/16",
              "13.65.0.0/16"
            ]
          }
        },
        "required": [
          "verifiable_password_authentication"
        ]
      },
      "minimal-repository": {
        "title": "Minimal Repository",
        "description": "Minimal Repository",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1296269
          },
          "node_id": {
            "type": "string",
            "example": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5"
          },
          "name": {
            "type": "string",
            "example": "Hello-World"
          },
          "full_name": {
            "type": "string",
            "example": "octocat/Hello-World"
          },
          "owner": {
            "type": "object",
            "nullable": true,
            "allOf": [{
              "$ref": "#/components/schemas/simple-user"
            }]
          },
          "private": {
            "type": "boolean"
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/octocat/Hello-World"
          },
          "description": {
            "type": "string",
            "example": "This your first repo!",
            "nullable": true
          },
          "fork": {
            "type": "boolean"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World"
          },
          "archive_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}"
          },
          "assignees_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}"
          },
          "blobs_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}"
          },
          "branches_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}"
          },
          "collaborators_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}"
          },
          "comments_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/comments{/number}"
          },
          "commits_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}"
          },
          "compare_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}"
          },
          "contents_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}"
          },
          "contributors_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/contributors"
          },
          "deployments_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/deployments"
          },
          "downloads_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/downloads"
          },
          "events_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/events"
          },
          "forks_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/forks"
          },
          "git_commits_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}"
          },
          "git_refs_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}"
          },
          "git_tags_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}"
          },
          "git_url": {
            "type": "string"
          },
          "issue_comment_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}"
          },
          "issue_events_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}"
          },
          "issues_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/issues{/number}"
          },
          "keys_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}"
          },
          "labels_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/labels{/name}"
          },
          "languages_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/languages"
          },
          "merges_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/merges"
          },
          "milestones_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}"
          },
          "notifications_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}"
          },
          "pulls_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}"
          },
          "releases_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/releases{/id}"
          },
          "ssh_url": {
            "type": "string"
          },
          "stargazers_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/stargazers"
          },
          "statuses_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}"
          },
          "subscribers_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/subscribers"
          },
          "subscription_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/subscription"
          },
          "tags_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/tags"
          },
          "teams_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/teams"
          },
          "trees_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}"
          },
          "clone_url": {
            "type": "string"
          },
          "mirror_url": {
            "type": "string",
            "nullable": true
          },
          "hooks_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/hooks"
          },
          "svn_url": {
            "type": "string"
          },
          "homepage": {
            "type": "string",
            "nullable": true
          },
          "language": {
            "type": "string",
            "nullable": true
          },
          "forks_count": {
            "type": "integer"
          },
          "stargazers_count": {
            "type": "integer"
          },
          "watchers_count": {
            "type": "integer"
          },
          "size": {
            "type": "integer"
          },
          "default_branch": {
            "type": "string"
          },
          "open_issues_count": {
            "type": "integer"
          },
          "is_template": {
            "type": "boolean"
          },
          "topics": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "has_issues": {
            "type": "boolean"
          },
          "has_projects": {
            "type": "boolean"
          },
          "has_wiki": {
            "type": "boolean"
          },
          "has_pages": {
            "type": "boolean"
          },
          "has_downloads": {
            "type": "boolean"
          },
          "archived": {
            "type": "boolean"
          },
          "disabled": {
            "type": "boolean"
          },
          "visibility": {
            "type": "string"
          },
          "pushed_at": {
            "type": "string",
            "format": "date-time",
            "example": "2011-01-26T19:06:43Z",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2011-01-26T19:01:12Z",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2011-01-26T19:14:43Z",
            "nullable": true
          },
          "permissions": {
            "type": "object",
            "properties": {
              "admin": {
                "type": "boolean"
              },
              "push": {
                "type": "boolean"
              },
              "pull": {
                "type": "boolean"
              }
            }
          },
          "template_repository": {
            "nullable": true,
            "type": "object",
            "allOf": [{
              "$ref": "#/components/schemas/repository"
            }]
          },
          "temp_clone_token": {
            "type": "string"
          },
          "delete_branch_on_merge": {
            "type": "boolean"
          },
          "subscribers_count": {
            "type": "integer"
          },
          "network_count": {
            "type": "integer"
          },
          "license": {
            "type": "object",
            "properties": {
              "key": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "spdx_id": {
                "type": "string"
              },
              "url": {
                "type": "string"
              },
              "node_id": {
                "type": "string"
              }
            },
            "nullable": true
          },
          "forks": {
            "type": "integer",
            "example": 0
          },
          "open_issues": {
            "type": "integer",
            "example": 0
          },
          "watchers": {
            "type": "integer",
            "example": 0
          }
        },
        "required": [
          "archive_url",
          "assignees_url",
          "blobs_url",
          "branches_url",
          "collaborators_url",
          "comments_url",
          "commits_url",
          "compare_url",
          "contents_url",
          "contributors_url",
          "deployments_url",
          "description",
          "downloads_url",
          "events_url",
          "fork",
          "forks_url",
          "full_name",
          "git_commits_url",
          "git_refs_url",
          "git_tags_url",
          "hooks_url",
          "html_url",
          "id",
          "node_id",
          "issue_comment_url",
          "issue_events_url",
          "issues_url",
          "keys_url",
          "labels_url",
          "languages_url",
          "merges_url",
          "milestones_url",
          "name",
          "notifications_url",
          "owner",
          "private",
          "pulls_url",
          "releases_url",
          "stargazers_url",
          "statuses_url",
          "subscribers_url",
          "subscription_url",
          "tags_url",
          "teams_url",
          "trees_url",
          "url"
        ]
      },
      "thread": {
        "title": "Thread",
        "description": "Thread",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "repository": {
            "$ref": "#/components/schemas/minimal-repository"
          },
          "subject": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string"
              },
              "url": {
                "type": "string"
              },
              "latest_comment_url": {
                "type": "string"
              },
              "type": {
                "type": "string"
              }
            },
            "required": [
              "title",
              "url",
              "latest_comment_url",
              "type"
            ]
          },
          "reason": {
            "type": "string"
          },
          "unread": {
            "type": "boolean"
          },
          "updated_at": {
            "type": "string"
          },
          "last_read_at": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string"
          },
          "subscription_url": {
            "type": "string",
            "example": "https://api.github.com/notifications/threads/2/subscription"
          }
        },
        "required": [
          "id",
          "unread",
          "reason",
          "updated_at",
          "last_read_at",
          "subject",
          "repository",
          "url",
          "subscription_url"
        ]
      },
      "thread-subscription": {
        "title": "Thread Subscription",
        "description": "Thread Subscription",
        "type": "object",
        "properties": {
          "subscribed": {
            "type": "boolean",
            "example": true
          },
          "ignored": {
            "type": "boolean"
          },
          "reason": {
            "type": "string",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2012-10-06T21:34:12Z",
            "nullable": true
          },
          "url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/notifications/threads/1/subscription"
          },
          "thread_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/notifications/threads/1"
          },
          "repository_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/1"
          }
        },
        "required": [
          "created_at",
          "ignored",
          "reason",
          "url",
          "subscribed"
        ]
      },
      "organization-full": {
        "title": "Organization Full",
        "description": "Organization Full",
        "type": "object",
        "properties": {
          "login": {
            "type": "string",
            "example": "github"
          },
          "id": {
            "type": "integer",
            "example": 1
          },
          "node_id": {
            "type": "string",
            "example": "MDEyOk9yZ2FuaXphdGlvbjE="
          },
          "url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/orgs/github"
          },
          "repos_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/orgs/github/repos"
          },
          "events_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/orgs/github/events"
          },
          "hooks_url": {
            "type": "string",
            "example": "https://api.github.com/orgs/github/hooks"
          },
          "issues_url": {
            "type": "string",
            "example": "https://api.github.com/orgs/github/issues"
          },
          "members_url": {
            "type": "string",
            "example": "https://api.github.com/orgs/github/members{/member}"
          },
          "public_members_url": {
            "type": "string",
            "example": "https://api.github.com/orgs/github/public_members{/member}"
          },
          "avatar_url": {
            "type": "string",
            "example": "https://github.com/images/error/octocat_happy.gif"
          },
          "description": {
            "type": "string",
            "example": "A great organization",
            "nullable": true
          },
          "name": {
            "type": "string",
            "example": "github"
          },
          "company": {
            "type": "string",
            "example": "GitHub"
          },
          "blog": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/blog"
          },
          "location": {
            "type": "string",
            "example": "San Francisco"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "octocat@github.com"
          },
          "twitter_username": {
            "type": "string",
            "example": "github",
            "nullable": true
          },
          "is_verified": {
            "type": "boolean",
            "example": true
          },
          "has_organization_projects": {
            "type": "boolean",
            "example": true
          },
          "has_repository_projects": {
            "type": "boolean",
            "example": true
          },
          "public_repos": {
            "type": "integer",
            "example": 2
          },
          "public_gists": {
            "type": "integer",
            "example": 1
          },
          "followers": {
            "type": "integer",
            "example": 20
          },
          "following": {
            "type": "integer",
            "example": 0
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/octocat"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2008-01-14T04:33:35Z"
          },
          "type": {
            "type": "string",
            "example": "Organization"
          },
          "total_private_repos": {
            "type": "integer",
            "example": 100
          },
          "owned_private_repos": {
            "type": "integer",
            "example": 100
          },
          "private_gists": {
            "type": "integer",
            "example": 81,
            "nullable": true
          },
          "disk_usage": {
            "type": "integer",
            "example": 10000,
            "nullable": true
          },
          "collaborators": {
            "type": "integer",
            "example": 8,
            "nullable": true
          },
          "billing_email": {
            "type": "string",
            "format": "email",
            "example": "org@example.com",
            "nullable": true
          },
          "plan": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "space": {
                "type": "integer"
              },
              "private_repos": {
                "type": "integer"
              },
              "filled_seats": {
                "type": "integer"
              },
              "seats": {
                "type": "integer"
              }
            },
            "required": [
              "name",
              "space",
              "private_repos"
            ]
          },
          "default_repository_permission": {
            "type": "string",
            "nullable": true
          },
          "members_can_create_repositories": {
            "type": "boolean",
            "example": true,
            "nullable": true
          },
          "two_factor_requirement_enabled": {
            "type": "boolean",
            "example": true,
            "nullable": true
          },
          "members_allowed_repository_creation_type": {
            "type": "string",
            "example": "all"
          },
          "members_can_create_public_repositories": {
            "type": "boolean",
            "example": true
          },
          "members_can_create_private_repositories": {
            "type": "boolean",
            "example": true
          },
          "members_can_create_internal_repositories": {
            "type": "boolean",
            "example": true
          },
          "members_can_create_pages": {
            "type": "boolean",
            "example": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "login",
          "url",
          "id",
          "node_id",
          "repos_url",
          "events_url",
          "hooks_url",
          "issues_url",
          "members_url",
          "public_members_url",
          "avatar_url",
          "description",
          "html_url",
          "has_organization_projects",
          "has_repository_projects",
          "public_repos",
          "public_gists",
          "followers",
          "following",
          "type",
          "created_at",
          "updated_at"
        ]
      },
      "enabled-repositories": {
        "type": "string",
        "description": "The policy that controls the repositories in the organization that are allowed to run GitHub Actions. Can be one of: `all`, `none`, or `selected`.",
        "enum": [
          "all",
          "none",
          "selected"
        ]
      },
      "actions-organization-permissions": {
        "type": "object",
        "properties": {
          "enabled_repositories": {
            "$ref": "#/components/schemas/enabled-repositories"
          },
          "selected_repositories_url": {
            "type": "string",
            "description": "The API URL to use to get or set the selected repositories that are allowed to run GitHub Actions, when `enabled_repositories` is set to `selected`."
          },
          "allowed_actions": {
            "$ref": "#/components/schemas/allowed-actions"
          },
          "selected_actions_url": {
            "$ref": "#/components/schemas/selected-actions-url"
          }
        },
        "required": [
          "enabled_repositories",
          "allowed_actions"
        ]
      },
      "runner-groups-org": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "visibility": {
            "type": "string"
          },
          "default": {
            "type": "boolean"
          },
          "selected_repositories_url": {
            "description": "Link to the selected repositories resource for this runner group. Not present unless visibility was set to `selected`",
            "type": "string"
          },
          "runners_url": {
            "type": "string"
          },
          "inherited": {
            "type": "boolean"
          },
          "inherited_allows_public_repositories": {
            "type": "boolean"
          },
          "allows_public_repositories": {
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "name",
          "visibility",
          "default",
          "runners_url",
          "inherited",
          "allows_public_repositories"
        ]
      },
      "organization-actions-secret": {
        "title": "Actions Secret for an Organization",
        "description": "Secrets for GitHub Actions for an organization.",
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of the secret.",
            "example": "SECRET_TOKEN",
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "visibility": {
            "description": "Visibility of a secret",
            "enum": [
              "all",
              "private",
              "selected"
            ],
            "type": "string"
          },
          "selected_repositories_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/organizations/org/secrets/my_secret/repositories"
          }
        },
        "required": [
          "name",
          "created_at",
          "updated_at",
          "visibility"
        ]
      },
      "actions-public-key": {
        "title": "ActionsPublicKey",
        "description": "The public key used for setting Actions Secrets.",
        "type": "object",
        "properties": {
          "key_id": {
            "description": "The identifier for the key.",
            "type": "string",
            "example": "1234567"
          },
          "key": {
            "description": "The Base64 encoded public key.",
            "type": "string",
            "example": "hBT5WZEj8ZoOv6TYJsfWq7MxTEQopZO5/IT3ZCVQPzs="
          },
          "id": {
            "type": "integer",
            "example": 2
          },
          "url": {
            "type": "string",
            "example": "https://api.github.com/user/keys/2"
          },
          "title": {
            "type": "string",
            "example": "ssh-rsa AAAAB3NzaC1yc2EAAA"
          },
          "created_at": {
            "type": "string",
            "example": "2011-01-26T19:01:12Z"
          }
        },
        "required": [
          "key_id",
          "key"
        ]
      },
      "credential-authorization": {
        "title": "Credential Authorization",
        "description": "Credential Authorization",
        "type": "object",
        "properties": {
          "login": {
            "type": "string",
            "example": "monalisa",
            "description": "User login that owns the underlying credential."
          },
          "credential_id": {
            "type": "integer",
            "example": 1,
            "description": "Unique identifier for the credential."
          },
          "credential_type": {
            "type": "string",
            "example": "SSH Key",
            "description": "Human-readable description of the credential type."
          },
          "token_last_eight": {
            "type": "string",
            "example": "12345678",
            "description": "Last eight characters of the credential. Only included in responses with credential_type of personal access token."
          },
          "credential_authorized_at": {
            "type": "string",
            "format": "date-time",
            "example": "2011-01-26T19:06:43Z",
            "description": "Date when the credential was authorized for use."
          },
          "scopes": {
            "type": "array",
            "example": [
              "user",
              "repo"
            ],
            "description": "List of oauth scopes the token has been granted.",
            "items": {
              "type": "string"
            }
          },
          "fingerprint": {
            "type": "string",
            "example": "jklmnop12345678",
            "description": "Unique string to distinguish the credential. Only included in responses with credential_type of SSH Key."
          },
          "credential_accessed_at": {
            "type": "string",
            "format": "date-time",
            "example": "2011-01-26T19:06:43Z",
            "description": "Date when the credential was last accessed. May be null if it was never accessed",
            "nullable": true
          },
          "authorized_credential_id": {
            "type": "integer",
            "nullable": true,
            "example": 12345678
          },
          "authorized_credential_title": {
            "type": "string",
            "nullable": true,
            "example": "my ssh key",
            "description": "The title given to the ssh key. This will only be present when the credential is an ssh key."
          },
          "authorized_credential_note": {
            "type": "string",
            "nullable": true,
            "example": "my token",
            "description": "The note given to the token. This will only be present when the credential is a token."
          }
        },
        "required": [
          "login",
          "credential_id",
          "credential_type",
          "credential_authorized_at"
        ]
      },
      "organization-invitation": {
        "title": "Organization Invitation",
        "description": "Organization Invitation",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "login": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "role": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "failed_at": {
            "type": "string"
          },
          "failed_reason": {
            "type": "string"
          },
          "inviter": {
            "$ref": "#/components/schemas/simple-user"
          },
          "team_count": {
            "type": "integer"
          },
          "invitation_team_url": {
            "type": "string"
          },
          "node_id": {
            "type": "string",
            "example": "\"MDIyOk9yZ2FuaXphdGlvbkludml0YXRpb24x\""
          },
          "invitation_teams_url": {
            "type": "string",
            "example": "\"https://api.github.com/organizations/16/invitations/1/teams\""
          }
        },
        "required": [
          "id",
          "login",
          "email",
          "role",
          "created_at",
          "inviter",
          "team_count",
          "invitation_team_url",
          "node_id"
        ]
      },
      "org-hook": {
        "title": "Org Hook",
        "description": "Org Hook",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/orgs/octocat/hooks/1"
          },
          "ping_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/orgs/octocat/hooks/1/pings"
          },
          "name": {
            "type": "string",
            "example": "web"
          },
          "events": {
            "type": "array",
            "example": [
              "push",
              "pull_request"
            ],
            "items": {
              "type": "string"
            }
          },
          "active": {
            "type": "boolean",
            "example": true
          },
          "config": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "example": "\"http://example.com/2\""
              },
              "insecure_ssl": {
                "type": "string",
                "example": "\"0\""
              },
              "content_type": {
                "type": "string",
                "example": "\"form\""
              },
              "secret": {
                "type": "string",
                "example": "\"********\""
              }
            }
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2011-09-06T20:39:23Z"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2011-09-06T17:26:27Z"
          },
          "type": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "url",
          "type",
          "name",
          "active",
          "events",
          "config",
          "ping_url",
          "created_at",
          "updated_at"
        ]
      },
      "interaction-group": {
        "type": "string",
        "description": "The type of GitHub user that can comment, open issues, or create pull requests while the interaction limit is in effect. Can be one of: `existing_users`, `contributors_only`, `collaborators_only`.",
        "example": "collaborators_only",
        "enum": [
          "existing_users",
          "contributors_only",
          "collaborators_only"
        ]
      },
      "interaction-limit-response": {
        "title": "Interaction Limits",
        "description": "Interaction limit settings.",
        "type": "object",
        "properties": {
          "limit": {
            "$ref": "#/components/schemas/interaction-group"
          },
          "origin": {
            "type": "string",
            "example": "repository"
          },
          "expires_at": {
            "type": "string",
            "format": "date-time",
            "example": "2018-08-17T04:18:39Z"
          }
        },
        "required": [
          "limit",
          "origin",
          "expires_at"
        ]
      },
      "interaction-expiry": {
        "type": "string",
        "description": "The duration of the interaction restriction. Can be one of: `one_day`, `three_days`, `one_week`, `one_month`, `six_months`. Default: `one_day`.",
        "example": "one_month",
        "enum": [
          "one_day",
          "three_days",
          "one_week",
          "one_month",
          "six_months"
        ]
      },
      "interaction-limit": {
        "title": "Interaction Restrictions",
        "description": "Limit interactions to a specific type of user for a specified duration",
        "type": "object",
        "properties": {
          "limit": {
            "$ref": "#/components/schemas/interaction-group"
          },
          "expiry": {
            "$ref": "#/components/schemas/interaction-expiry"
          }
        },
        "required": [
          "limit"
        ]
      },
      "team-simple": {
        "title": "Team Simple",
        "description": "Groups of organization members that gives permissions on specified repositories.",
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the team",
            "type": "integer",
            "example": 1
          },
          "node_id": {
            "type": "string",
            "example": "MDQ6VGVhbTE="
          },
          "url": {
            "description": "URL for the team",
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/organizations/1/team/1"
          },
          "members_url": {
            "type": "string",
            "example": "https://api.github.com/organizations/1/team/1/members{/member}"
          },
          "name": {
            "description": "Name of the team",
            "type": "string",
            "example": "Justice League"
          },
          "description": {
            "description": "Description of the team",
            "type": "string",
            "nullable": true,
            "example": "A great team."
          },
          "permission": {
            "description": "Permission that the team will have for its repositories",
            "type": "string",
            "example": "admin"
          },
          "privacy": {
            "description": "The level of privacy this team should have",
            "type": "string",
            "example": "closed"
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/orgs/rails/teams/core"
          },
          "repositories_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/organizations/1/team/1/repos"
          },
          "slug": {
            "type": "string",
            "example": "justice-league"
          },
          "ldap_dn": {
            "description": "Distinguished Name (DN) that team maps to within LDAP environment",
            "example": "uid=example,ou=users,dc=github,dc=com",
            "type": "string"
          }
        },
        "required": [
          "id",
          "node_id",
          "url",
          "members_url",
          "name",
          "description",
          "permission",
          "html_url",
          "repositories_url",
          "slug"
        ],
        "nullable": true
      },
      "team": {
        "title": "Team",
        "description": "Groups of organization members that gives permissions on specified repositories.",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "node_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "privacy": {
            "type": "string"
          },
          "permission": {
            "type": "string"
          },
          "url": {
            "type": "string",
            "format": "uri"
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/orgs/rails/teams/core"
          },
          "members_url": {
            "type": "string"
          },
          "repositories_url": {
            "type": "string",
            "format": "uri"
          },
          "parent": {
            "nullable": true,
            "allOf": [{
              "$ref": "#/components/schemas/team-simple"
            }]
          }
        },
        "required": [
          "id",
          "node_id",
          "url",
          "members_url",
          "name",
          "description",
          "permission",
          "html_url",
          "repositories_url",
          "slug"
        ]
      },
      "org-membership": {
        "title": "Org Membership",
        "description": "Org Membership",
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/orgs/octocat/memberships/defunkt"
          },
          "state": {
            "type": "string",
            "example": "active"
          },
          "role": {
            "type": "string",
            "example": "admin"
          },
          "organization_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/orgs/octocat"
          },
          "organization": {
            "$ref": "#/components/schemas/organization-simple"
          },
          "user": {
            "nullable": true,
            "allOf": [{
              "$ref": "#/components/schemas/simple-user"
            }]
          },
          "permissions": {
            "type": "object",
            "properties": {
              "can_create_repository": {
                "type": "boolean"
              }
            },
            "required": [
              "can_create_repository"
            ]
          }
        },
        "required": [
          "state",
          "role",
          "organization_url",
          "url",
          "organization",
          "user"
        ]
      },
      "migration": {
        "title": "Migration",
        "description": "A migration.",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 79
          },
          "owner": {
            "nullable": true,
            "allOf": [{
              "$ref": "#/components/schemas/simple-user"
            }]
          },
          "guid": {
            "type": "string",
            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516"
          },
          "state": {
            "type": "string",
            "example": "pending"
          },
          "lock_repositories": {
            "type": "boolean",
            "example": true
          },
          "exclude_attachments": {
            "type": "boolean"
          },
          "repositories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/repository"
            }
          },
          "url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/orgs/octo-org/migrations/79"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2015-07-06T15:33:38-07:00"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2015-07-06T15:33:38-07:00"
          },
          "node_id": {
            "type": "string"
          },
          "archive_url": {
            "type": "string",
            "format": "uri"
          },
          "exclude": {
            "type": "array",
            "items": {}
          }
        },
        "required": [
          "id",
          "node_id",
          "owner",
          "guid",
          "state",
          "lock_repositories",
          "exclude_attachments",
          "repositories",
          "url",
          "created_at",
          "updated_at"
        ]
      },
      "package": {
        "title": "Package",
        "description": "A software package",
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the package.",
            "type": "integer",
            "example": 1
          },
          "name": {
            "description": "The name of the package.",
            "type": "string",
            "example": "super-linter"
          },
          "package_type": {
            "type": "string",
            "example": "docker",
            "enum": [
              "npm",
              "maven",
              "rubygems",
              "docker",
              "nuget",
              "container"
            ]
          },
          "url": {
            "type": "string",
            "example": "https://api.github.com/orgs/github/packages/container/super-linter"
          },
          "html_url": {
            "type": "string",
            "example": "https://github.com/orgs/github/packages/container/package/super-linter"
          },
          "version_count": {
            "description": "The number of versions of the package.",
            "type": "integer",
            "example": 1
          },
          "visibility": {
            "type": "string",
            "example": "private",
            "enum": [
              "private",
              "public"
            ]
          },
          "owner": {
            "nullable": true,
            "allOf": [{
              "$ref": "#/components/schemas/simple-user"
            }]
          },
          "repository": {
            "nullable": true,
            "allOf": [{
              "$ref": "#/components/schemas/minimal-repository"
            }]
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "name",
          "package_type",
          "visibility",
          "url",
          "html_url",
          "version_count",
          "created_at",
          "updated_at"
        ]
      },
      "package-version": {
        "title": "Package Version",
        "description": "A version of a software package",
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the package version.",
            "type": "integer",
            "example": 1
          },
          "name": {
            "description": "The name of the package version.",
            "type": "string",
            "example": "latest"
          },
          "url": {
            "type": "string",
            "example": "https://api.github.com/orgs/github/packages/container/super-linter/versions/786068"
          },
          "package_html_url": {
            "type": "string",
            "example": "https://github.com/orgs/github/packages/container/package/super-linter"
          },
          "html_url": {
            "type": "string",
            "example": "https://github.com/orgs/github/packages/container/super-linter/786068"
          },
          "license": {
            "type": "string",
            "example": "MIT"
          },
          "description": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2011-04-10T20:09:31Z"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2014-03-03T18:58:10Z"
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time",
            "example": "2014-03-03T18:58:10Z"
          },
          "metadata": {
            "type": "object",
            "title": "Package Version Metadata",
            "properties": {
              "package_type": {
                "type": "string",
                "example": "docker",
                "enum": [
                  "npm",
                  "maven",
                  "rubygems",
                  "docker",
                  "nuget",
                  "container"
                ]
              },
              "container": {
                "type": "object",
                "title": "Container Metadata",
                "properties": {
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "tags"
                ]
              },
              "docker": {
                "type": "object",
                "title": "Docker Metadata",
                "properties": {
                  "tag": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "tags"
                ]
              }
            },
            "required": [
              "package_type"
            ]
          }
        },
        "required": [
          "id",
          "name",
          "url",
          "package_html_url",
          "created_at",
          "updated_at"
        ]
      },
      "project": {
        "title": "Project",
        "description": "Projects are a way to organize columns and cards of work.",
        "type": "object",
        "properties": {
          "owner_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/api-playground/projects-test"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/projects/1002604"
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/api-playground/projects-test/projects/12"
          },
          "columns_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/projects/1002604/columns"
          },
          "id": {
            "type": "integer",
            "example": 1002604
          },
          "node_id": {
            "type": "string",
            "example": "MDc6UHJvamVjdDEwMDI2MDQ="
          },
          "name": {
            "description": "Name of the project",
            "example": "Week One Sprint",
            "type": "string"
          },
          "body": {
            "description": "Body of the project",
            "example": "This project represents the sprint of the first week in January",
            "type": "string",
            "nullable": true
          },
          "number": {
            "type": "integer",
            "example": 1
          },
          "state": {
            "description": "State of the project; either 'open' or 'closed'",
            "example": "open",
            "type": "string"
          },
          "creator": {
            "nullable": true,
            "allOf": [{
              "$ref": "#/components/schemas/simple-user"
            }]
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2011-04-10T20:09:31Z"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2014-03-03T18:58:10Z"
          },
          "organization_permission": {
            "description": "The baseline permission that all organization members have on this project. Only present if owner is an organization.",
            "type": "string",
            "enum": [
              "read",
              "write",
              "admin",
              "none"
            ]
          },
          "private": {
            "description": "Whether or not this project can be seen by everyone. Only present if owner is an organization.",
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "node_id",
          "number",
          "name",
          "body",
          "state",
          "url",
          "html_url",
          "owner_url",
          "creator",
          "columns_url",
          "created_at",
          "updated_at"
        ]
      },
      "group-mapping": {
        "title": "GroupMapping",
        "description": "External Groups to be mapped to a team for membership",
        "type": "object",
        "properties": {
          "groups": {
            "description": "Array of groups to be mapped to this team",
            "example": [{
                "group_id": "111a1a11-aaa1-1aaa-11a1-a1a1a1a1a1aa",
                "group_name": "saml-azuread-test",
                "group_description": "A group of Developers working on AzureAD SAML SSO"
              },
              {
                "group_id": "2bb2bb2b-bb22-22bb-2bb2-bb2bbb2bb2b2",
                "group_name": "saml-azuread-test2",
                "group_description": "Another group of Developers working on AzureAD SAML SSO"
              }
            ],
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "group_id",
                "group_name",
                "group_description"
              ],
              "properties": {
                "group_id": {
                  "description": "The ID of the group",
                  "example": "111a1a11-aaa1-1aaa-11a1-a1a1a1a1a1aa",
                  "type": "string"
                },
                "group_name": {
                  "description": "The name of the group",
                  "example": "saml-azuread-test",
                  "type": "string"
                },
                "group_description": {
                  "description": "a description of the group",
                  "example": "A group of Developers working on AzureAD SAML SSO",
                  "type": "string"
                },
                "status": {
                  "description": "synchronization status for this group mapping",
                  "example": "unsynced",
                  "type": "string"
                },
                "synced_at": {
                  "description": "the time of the last sync for this group-mapping",
                  "example": "2019-06-03 22:27:15:000 -700",
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "team-full": {
        "title": "Full Team",
        "description": "Groups of organization members that gives permissions on specified repositories.",
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the team",
            "example": 42,
            "type": "integer"
          },
          "node_id": {
            "type": "string",
            "example": "MDQ6VGVhbTE="
          },
          "url": {
            "description": "URL for the team",
            "example": "https://api.github.com/organizations/1/team/1",
            "type": "string",
            "format": "uri"
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/orgs/rails/teams/core"
          },
          "name": {
            "description": "Name of the team",
            "example": "Developers",
            "type": "string"
          },
          "slug": {
            "type": "string",
            "example": "justice-league"
          },
          "description": {
            "type": "string",
            "example": "A great team.",
            "nullable": true
          },
          "privacy": {
            "description": "The level of privacy this team should have",
            "type": "string",
            "enum": [
              "closed",
              "secret"
            ],
            "example": "closed"
          },
          "permission": {
            "description": "Permission that the team will have for its repositories",
            "example": "push",
            "type": "string"
          },
          "members_url": {
            "type": "string",
            "example": "https://api.github.com/organizations/1/team/1/members{/member}"
          },
          "repositories_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/organizations/1/team/1/repos"
          },
          "parent": {
            "nullable": true,
            "allOf": [{
              "$ref": "#/components/schemas/team-simple"
            }]
          },
          "members_count": {
            "type": "integer",
            "example": 3
          },
          "repos_count": {
            "type": "integer",
            "example": 10
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2017-07-14T16:53:42Z"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2017-08-17T12:37:15Z"
          },
          "organization": {
            "$ref": "#/components/schemas/organization-full"
          },
          "ldap_dn": {
            "description": "Distinguished Name (DN) that team maps to within LDAP environment",
            "example": "uid=example,ou=users,dc=github,dc=com",
            "type": "string"
          }
        },
        "required": [
          "id",
          "node_id",
          "url",
          "members_url",
          "name",
          "description",
          "permission",
          "html_url",
          "repositories_url",
          "slug",
          "created_at",
          "updated_at",
          "members_count",
          "repos_count",
          "organization"
        ]
      },
      "team-discussion": {
        "title": "Team Discussion",
        "description": "A team discussion is a persistent record of a free-form conversation within a team.",
        "type": "object",
        "properties": {
          "author": {
            "nullable": true,
            "allOf": [{
              "$ref": "#/components/schemas/simple-user"
            }]
          },
          "body": {
            "description": "The main text of the discussion.",
            "example": "Please suggest improvements to our workflow in comments.",
            "type": "string"
          },
          "body_html": {
            "type": "string",
            "example": "<p>Hi! This is an area for us to collaborate as a team</p>"
          },
          "body_version": {
            "description": "The current version of the body content. If provided, this update operation will be rejected if the given version does not match the latest version on the server.",
            "example": "0307116bbf7ced493b8d8a346c650b71",
            "type": "string"
          },
          "comments_count": {
            "type": "integer",
            "example": 0
          },
          "comments_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/organizations/1/team/2343027/discussions/1/comments"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2018-01-25T18:56:31Z"
          },
          "last_edited_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/orgs/github/teams/justice-league/discussions/1"
          },
          "node_id": {
            "type": "string",
            "example": "MDE0OlRlYW1EaXNjdXNzaW9uMQ=="
          },
          "number": {
            "description": "The unique sequence number of a team discussion.",
            "example": 42,
            "type": "integer"
          },
          "pinned": {
            "description": "Whether or not this discussion should be pinned for easy retrieval.",
            "example": true,
            "type": "boolean"
          },
          "private": {
            "description": "Whether or not this discussion should be restricted to team members and organization administrators.",
            "example": true,
            "type": "boolean"
          },
          "team_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/organizations/1/team/2343027"
          },
          "title": {
            "description": "The title of the discussion.",
            "example": "How can we improve our workflow?",
            "type": "string"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2018-01-25T18:56:31Z"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/organizations/1/team/2343027/discussions/1"
          },
          "reactions": {
            "$ref": "#/components/schemas/reaction-rollup"
          }
        },
        "required": [
          "author",
          "body",
          "body_html",
          "body_version",
          "comments_count",
          "comments_url",
          "created_at",
          "last_edited_at",
          "html_url",
          "pinned",
          "private",
          "node_id",
          "number",
          "team_url",
          "title",
          "updated_at",
          "url"
        ]
      },
      "team-discussion-comment": {
        "title": "Team Discussion Comment",
        "description": "A reply to a discussion within a team.",
        "type": "object",
        "properties": {
          "author": {
            "nullable": true,
            "allOf": [{
              "$ref": "#/components/schemas/simple-user"
            }]
          },
          "body": {
            "description": "The main text of the comment.",
            "example": "I agree with this suggestion.",
            "type": "string"
          },
          "body_html": {
            "type": "string",
            "example": "<p>Do you like apples?</p>"
          },
          "body_version": {
            "description": "The current version of the body content. If provided, this update operation will be rejected if the given version does not match the latest version on the server.",
            "example": "0307116bbf7ced493b8d8a346c650b71",
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2018-01-15T23:53:58Z"
          },
          "last_edited_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "discussion_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/organizations/1/team/2403582/discussions/1"
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/orgs/github/teams/justice-league/discussions/1/comments/1"
          },
          "node_id": {
            "type": "string",
            "example": "MDIxOlRlYW1EaXNjdXNzaW9uQ29tbWVudDE="
          },
          "number": {
            "description": "The unique sequence number of a team discussion comment.",
            "example": 42,
            "type": "integer"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2018-01-15T23:53:58Z"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/organizations/1/team/2403582/discussions/1/comments/1"
          },
          "reactions": {
            "$ref": "#/components/schemas/reaction-rollup"
          }
        },
        "required": [
          "author",
          "body",
          "body_html",
          "body_version",
          "created_at",
          "last_edited_at",
          "discussion_url",
          "html_url",
          "node_id",
          "number",
          "updated_at",
          "url"
        ]
      },
      "reaction": {
        "title": "Reaction",
        "description": "Reactions to conversations provide a way to help people express their feelings more simply and effectively.",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "node_id": {
            "type": "string",
            "example": "MDg6UmVhY3Rpb24x"
          },
          "user": {
            "nullable": true,
            "allOf": [{
              "$ref": "#/components/schemas/simple-user"
            }]
          },
          "content": {
            "description": "The reaction to use",
            "example": "heart",
            "type": "string",
            "enum": [
              "+1",
              "-1",
              "laugh",
              "confused",
              "heart",
              "hooray",
              "rocket",
              "eyes"
            ]
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2016-05-20T20:09:31Z"
          }
        },
        "required": [
          "id",
          "node_id",
          "user",
          "content",
          "created_at"
        ]
      },
      "team-membership": {
        "title": "Team Membership",
        "description": "Team Membership",
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "format": "uri"
          },
          "role": {
            "description": "The role of the user in the team.",
            "enum": [
              "member",
              "maintainer"
            ],
            "default": "member",
            "example": "member",
            "type": "string"
          },
          "state": {
            "type": "string"
          }
        },
        "required": [
          "role",
          "state",
          "url"
        ]
      },
      "team-project": {
        "title": "Team Project",
        "description": "A team's access to a project.",
        "type": "object",
        "properties": {
          "owner_url": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "html_url": {
            "type": "string"
          },
          "columns_url": {
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "node_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "body": {
            "type": "string",
            "nullable": true
          },
          "number": {
            "type": "integer"
          },
          "state": {
            "type": "string"
          },
          "creator": {
            "$ref": "#/components/schemas/simple-user"
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          },
          "organization_permission": {
            "description": "The organization permission for this project. Only present when owner is an organization.",
            "type": "string"
          },
          "private": {
            "description": "Whether the project is private or not. Only present when owner is an organization.",
            "type": "boolean"
          },
          "permissions": {
            "type": "object",
            "properties": {
              "read": {
                "type": "boolean"
              },
              "write": {
                "type": "boolean"
              },
              "admin": {
                "type": "boolean"
              }
            },
            "required": [
              "read",
              "write",
              "admin"
            ]
          }
        },
        "required": [
          "owner_url",
          "url",
          "html_url",
          "columns_url",
          "id",
          "node_id",
          "name",
          "body",
          "number",
          "state",
          "creator",
          "created_at",
          "updated_at",
          "permissions"
        ]
      },
      "team-repository": {
        "title": "Team Repository",
        "description": "A team's access to a repository.",
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the repository",
            "example": 42,
            "type": "integer"
          },
          "node_id": {
            "type": "string",
            "example": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5"
          },
          "name": {
            "description": "The name of the repository.",
            "type": "string",
            "example": "Team Environment"
          },
          "full_name": {
            "type": "string",
            "example": "octocat/Hello-World"
          },
          "license": {
            "nullable": true,
            "allOf": [{
              "$ref": "#/components/schemas/license-simple"
            }]
          },
          "forks": {
            "type": "integer"
          },
          "permissions": {
            "type": "object",
            "properties": {
              "admin": {
                "type": "boolean"
              },
              "pull": {
                "type": "boolean"
              },
              "triage": {
                "type": "boolean"
              },
              "push": {
                "type": "boolean"
              },
              "maintain": {
                "type": "boolean"
              }
            },
            "required": [
              "admin",
              "pull",
              "push"
            ]
          },
          "owner": {
            "nullable": true,
            "allOf": [{
              "$ref": "#/components/schemas/simple-user"
            }]
          },
          "private": {
            "description": "Whether the repository is private or public.",
            "default": false,
            "type": "boolean"
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/octocat/Hello-World"
          },
          "description": {
            "type": "string",
            "example": "This your first repo!",
            "nullable": true
          },
          "fork": {
            "type": "boolean"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World"
          },
          "archive_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}"
          },
          "assignees_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}"
          },
          "blobs_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}"
          },
          "branches_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}"
          },
          "collaborators_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}"
          },
          "comments_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/comments{/number}"
          },
          "commits_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}"
          },
          "compare_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}"
          },
          "contents_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}"
          },
          "contributors_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/contributors"
          },
          "deployments_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/deployments"
          },
          "downloads_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/downloads"
          },
          "events_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/events"
          },
          "forks_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/forks"
          },
          "git_commits_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}"
          },
          "git_refs_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}"
          },
          "git_tags_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}"
          },
          "git_url": {
            "type": "string",
            "example": "git:github.com/octocat/Hello-World.git"
          },
          "issue_comment_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}"
          },
          "issue_events_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}"
          },
          "issues_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/issues{/number}"
          },
          "keys_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}"
          },
          "labels_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/labels{/name}"
          },
          "languages_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/languages"
          },
          "merges_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/merges"
          },
          "milestones_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}"
          },
          "notifications_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}"
          },
          "pulls_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}"
          },
          "releases_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/releases{/id}"
          },
          "ssh_url": {
            "type": "string",
            "example": "git@github.com:octocat/Hello-World.git"
          },
          "stargazers_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/stargazers"
          },
          "statuses_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}"
          },
          "subscribers_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/subscribers"
          },
          "subscription_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/subscription"
          },
          "tags_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/tags"
          },
          "teams_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/teams"
          },
          "trees_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}"
          },
          "clone_url": {
            "type": "string",
            "example": "https://github.com/octocat/Hello-World.git"
          },
          "mirror_url": {
            "type": "string",
            "format": "uri",
            "example": "git:git.example.com/octocat/Hello-World",
            "nullable": true
          },
          "hooks_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/hooks"
          },
          "svn_url": {
            "type": "string",
            "format": "uri",
            "example": "https://svn.github.com/octocat/Hello-World"
          },
          "homepage": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com",
            "nullable": true
          },
          "language": {
            "type": "string",
            "nullable": true
          },
          "forks_count": {
            "type": "integer",
            "example": 9
          },
          "stargazers_count": {
            "type": "integer",
            "example": 80
          },
          "watchers_count": {
            "type": "integer",
            "example": 80
          },
          "size": {
            "type": "integer",
            "example": 108
          },
          "default_branch": {
            "description": "The default branch of the repository.",
            "type": "string",
            "example": "master"
          },
          "open_issues_count": {
            "type": "integer",
            "example": 0
          },
          "is_template": {
            "description": "Whether this repository acts as a template that can be used to generate new repositories.",
            "default": false,
            "type": "boolean",
            "example": true
          },
          "topics": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "has_issues": {
            "description": "Whether issues are enabled.",
            "default": true,
            "type": "boolean",
            "example": true
          },
          "has_projects": {
            "description": "Whether projects are enabled.",
            "default": true,
            "type": "boolean",
            "example": true
          },
          "has_wiki": {
            "description": "Whether the wiki is enabled.",
            "default": true,
            "type": "boolean",
            "example": true
          },
          "has_pages": {
            "type": "boolean"
          },
          "has_downloads": {
            "description": "Whether downloads are enabled.",
            "default": true,
            "type": "boolean",
            "example": true
          },
          "archived": {
            "description": "Whether the repository is archived.",
            "default": false,
            "type": "boolean"
          },
          "disabled": {
            "type": "boolean",
            "description": "Returns whether or not this repository disabled."
          },
          "visibility": {
            "description": "The repository visibility: public, private, or internal.",
            "default": "public",
            "type": "string"
          },
          "pushed_at": {
            "type": "string",
            "format": "date-time",
            "example": "2011-01-26T19:06:43Z",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2011-01-26T19:01:12Z",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2011-01-26T19:14:43Z",
            "nullable": true
          },
          "allow_rebase_merge": {
            "description": "Whether to allow rebase merges for pull requests.",
            "default": true,
            "type": "boolean",
            "example": true
          },
          "template_repository": {
            "type": "object",
            "nullable": true,
            "allOf": [{
              "$ref": "#/components/schemas/repository"
            }]
          },
          "temp_clone_token": {
            "type": "string"
          },
          "allow_squash_merge": {
            "description": "Whether to allow squash merges for pull requests.",
            "default": true,
            "type": "boolean",
            "example": true
          },
          "delete_branch_on_merge": {
            "description": "Whether to delete head branches when pull requests are merged",
            "default": false,
            "type": "boolean",
            "example": false
          },
          "allow_merge_commit": {
            "description": "Whether to allow merge commits for pull requests.",
            "default": true,
            "type": "boolean",
            "example": true
          },
          "subscribers_count": {
            "type": "integer"
          },
          "network_count": {
            "type": "integer"
          },
          "open_issues": {
            "type": "integer"
          },
          "watchers": {
            "type": "integer"
          },
          "master_branch": {
            "type": "string"
          }
        },
        "required": [
          "archive_url",
          "assignees_url",
          "blobs_url",
          "branches_url",
          "collaborators_url",
          "comments_url",
          "commits_url",
          "compare_url",
          "contents_url",
          "contributors_url",
          "deployments_url",
          "description",
          "downloads_url",
          "events_url",
          "fork",
          "forks_url",
          "full_name",
          "git_commits_url",
          "git_refs_url",
          "git_tags_url",
          "hooks_url",
          "html_url",
          "id",
          "node_id",
          "issue_comment_url",
          "issue_events_url",
          "issues_url",
          "keys_url",
          "labels_url",
          "languages_url",
          "merges_url",
          "milestones_url",
          "name",
          "notifications_url",
          "owner",
          "private",
          "pulls_url",
          "releases_url",
          "stargazers_url",
          "statuses_url",
          "subscribers_url",
          "subscription_url",
          "tags_url",
          "teams_url",
          "trees_url",
          "url",
          "clone_url",
          "default_branch",
          "forks",
          "forks_count",
          "git_url",
          "has_downloads",
          "has_issues",
          "has_projects",
          "has_wiki",
          "has_pages",
          "homepage",
          "language",
          "archived",
          "disabled",
          "mirror_url",
          "open_issues",
          "open_issues_count",
          "license",
          "pushed_at",
          "size",
          "ssh_url",
          "stargazers_count",
          "svn_url",
          "watchers",
          "watchers_count",
          "created_at",
          "updated_at"
        ]
      },
      "project-card": {
        "title": "Project Card",
        "description": "Project cards represent a scope of work.",
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/projects/columns/cards/1478"
          },
          "id": {
            "description": "The project card's ID",
            "example": 42,
            "type": "integer"
          },
          "node_id": {
            "type": "string",
            "example": "MDExOlByb2plY3RDYXJkMTQ3OA=="
          },
          "note": {
            "type": "string",
            "example": "Add payload for delete Project column",
            "nullable": true
          },
          "creator": {
            "nullable": true,
            "allOf": [{
              "$ref": "#/components/schemas/simple-user"
            }]
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2016-09-05T14:21:06Z"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2016-09-05T14:20:22Z"
          },
          "archived": {
            "description": "Whether or not the card is archived",
            "example": false,
            "type": "boolean"
          },
          "column_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/projects/columns/367"
          },
          "content_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/api-playground/projects-test/issues/3"
          },
          "project_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/projects/120"
          }
        },
        "required": [
          "id",
          "node_id",
          "note",
          "url",
          "column_url",
          "project_url",
          "creator",
          "created_at",
          "updated_at"
        ]
      },
      "project-column": {
        "title": "Project Column",
        "description": "Project columns contain cards of work.",
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/projects/columns/367"
          },
          "project_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/projects/120"
          },
          "cards_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/projects/columns/367/cards"
          },
          "id": {
            "description": "The unique identifier of the project column",
            "example": 42,
            "type": "integer"
          },
          "node_id": {
            "type": "string",
            "example": "MDEzOlByb2plY3RDb2x1bW4zNjc="
          },
          "name": {
            "description": "Name of the project column",
            "example": "Remaining tasks",
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2016-09-05T14:18:44Z"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2016-09-05T14:22:28Z"
          }
        },
        "required": [
          "id",
          "node_id",
          "url",
          "project_url",
          "cards_url",
          "name",
          "created_at",
          "updated_at"
        ]
      },
      "repository-collaborator-permission": {
        "title": "Repository Collaborator Permission",
        "description": "Repository Collaborator Permission",
        "type": "object",
        "properties": {
          "permission": {
            "type": "string"
          },
          "user": {
            "nullable": true,
            "allOf": [{
              "$ref": "#/components/schemas/simple-user"
            }]
          }
        },
        "required": [
          "permission",
          "user"
        ]
      },
      "rate-limit": {
        "title": "Rate Limit",
        "type": "object",
        "properties": {
          "limit": {
            "type": "integer"
          },
          "remaining": {
            "type": "integer"
          },
          "reset": {
            "type": "integer"
          }
        },
        "required": [
          "limit",
          "remaining",
          "reset"
        ]
      },
      "rate-limit-overview": {
        "title": "Rate Limit Overview",
        "description": "Rate Limit Overview",
        "type": "object",
        "properties": {
          "resources": {
            "type": "object",
            "properties": {
              "core": {
                "$ref": "#/components/schemas/rate-limit"
              },
              "graphql": {
                "$ref": "#/components/schemas/rate-limit"
              },
              "search": {
                "$ref": "#/components/schemas/rate-limit"
              },
              "source_import": {
                "$ref": "#/components/schemas/rate-limit"
              },
              "integration_manifest": {
                "$ref": "#/components/schemas/rate-limit"
              },
              "code_scanning_upload": {
                "$ref": "#/components/schemas/rate-limit"
              }
            },
            "required": [
              "core",
              "search"
            ]
          },
          "rate": {
            "$ref": "#/components/schemas/rate-limit"
          }
        },
        "required": [
          "rate",
          "resources"
        ]
      },
      "code-of-conduct-simple": {
        "title": "Code Of Conduct Simple",
        "description": "Code of Conduct Simple",
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/github/docs/community/code_of_conduct"
          },
          "key": {
            "type": "string",
            "example": "citizen_code_of_conduct"
          },
          "name": {
            "type": "string",
            "example": "Citizen Code of Conduct"
          },
          "html_url": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "https://github.com/github/docs/blob/main/CODE_OF_CONDUCT.md"
          }
        },
        "required": [
          "url",
          "key",
          "name",
          "html_url"
        ]
      },
      "full-repository": {
        "title": "Full Repository",
        "description": "Full Repository",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1296269
          },
          "node_id": {
            "type": "string",
            "example": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5"
          },
          "name": {
            "type": "string",
            "example": "Hello-World"
          },
          "full_name": {
            "type": "string",
            "example": "octocat/Hello-World"
          },
          "owner": {
            "nullable": true,
            "allOf": [{
              "$ref": "#/components/schemas/simple-user"
            }]
          },
          "private": {
            "type": "boolean"
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/octocat/Hello-World"
          },
          "description": {
            "type": "string",
            "example": "This your first repo!",
            "nullable": true
          },
          "fork": {
            "type": "boolean"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World"
          },
          "archive_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}"
          },
          "assignees_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}"
          },
          "blobs_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}"
          },
          "branches_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}"
          },
          "collaborators_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}"
          },
          "comments_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/comments{/number}"
          },
          "commits_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}"
          },
          "compare_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}"
          },
          "contents_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}"
          },
          "contributors_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/contributors"
          },
          "deployments_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/deployments"
          },
          "downloads_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/downloads"
          },
          "events_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/events"
          },
          "forks_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/forks"
          },
          "git_commits_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}"
          },
          "git_refs_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}"
          },
          "git_tags_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}"
          },
          "git_url": {
            "type": "string",
            "example": "git:github.com/octocat/Hello-World.git"
          },
          "issue_comment_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}"
          },
          "issue_events_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}"
          },
          "issues_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/issues{/number}"
          },
          "keys_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}"
          },
          "labels_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/labels{/name}"
          },
          "languages_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/languages"
          },
          "merges_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/merges"
          },
          "milestones_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}"
          },
          "notifications_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}"
          },
          "pulls_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}"
          },
          "releases_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/releases{/id}"
          },
          "ssh_url": {
            "type": "string",
            "example": "git@github.com:octocat/Hello-World.git"
          },
          "stargazers_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/stargazers"
          },
          "statuses_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}"
          },
          "subscribers_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/subscribers"
          },
          "subscription_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/subscription"
          },
          "tags_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/tags"
          },
          "teams_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/teams"
          },
          "trees_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}"
          },
          "clone_url": {
            "type": "string",
            "example": "https://github.com/octocat/Hello-World.git"
          },
          "mirror_url": {
            "type": "string",
            "format": "uri",
            "example": "git:git.example.com/octocat/Hello-World",
            "nullable": true
          },
          "hooks_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/hooks"
          },
          "svn_url": {
            "type": "string",
            "format": "uri",
            "example": "https://svn.github.com/octocat/Hello-World"
          },
          "homepage": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com",
            "nullable": true
          },
          "language": {
            "type": "string",
            "nullable": true
          },
          "forks_count": {
            "type": "integer",
            "example": 9
          },
          "stargazers_count": {
            "type": "integer",
            "example": 80
          },
          "watchers_count": {
            "type": "integer",
            "example": 80
          },
          "size": {
            "type": "integer",
            "example": 108
          },
          "default_branch": {
            "type": "string",
            "example": "master"
          },
          "open_issues_count": {
            "type": "integer",
            "example": 0
          },
          "is_template": {
            "type": "boolean",
            "example": true
          },
          "topics": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "octocat",
              "atom",
              "electron",
              "API"
            ]
          },
          "has_issues": {
            "type": "boolean",
            "example": true
          },
          "has_projects": {
            "type": "boolean",
            "example": true
          },
          "has_wiki": {
            "type": "boolean",
            "example": true
          },
          "has_pages": {
            "type": "boolean"
          },
          "has_downloads": {
            "type": "boolean",
            "example": true
          },
          "archived": {
            "type": "boolean"
          },
          "disabled": {
            "type": "boolean",
            "description": "Returns whether or not this repository disabled."
          },
          "visibility": {
            "description": "The repository visibility: public, private, or internal.",
            "type": "string",
            "example": "public"
          },
          "pushed_at": {
            "type": "string",
            "format": "date-time",
            "example": "2011-01-26T19:06:43Z"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2011-01-26T19:01:12Z"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2011-01-26T19:14:43Z"
          },
          "permissions": {
            "type": "object",
            "properties": {
              "admin": {
                "type": "boolean"
              },
              "pull": {
                "type": "boolean"
              },
              "push": {
                "type": "boolean"
              }
            },
            "required": [
              "admin",
              "pull",
              "push"
            ]
          },
          "allow_rebase_merge": {
            "type": "boolean",
            "example": true
          },
          "template_repository": {
            "nullable": true,
            "type": "object",
            "allOf": [{
              "$ref": "#/components/schemas/repository"
            }]
          },
          "temp_clone_token": {
            "type": "string",
            "nullable": true
          },
          "allow_squash_merge": {
            "type": "boolean",
            "example": true
          },
          "delete_branch_on_merge": {
            "type": "boolean",
            "example": false
          },
          "allow_merge_commit": {
            "type": "boolean",
            "example": true
          },
          "subscribers_count": {
            "type": "integer",
            "example": 42
          },
          "network_count": {
            "type": "integer",
            "example": 0
          },
          "license": {
            "nullable": true,
            "allOf": [{
              "$ref": "#/components/schemas/license-simple"
            }]
          },
          "organization": {
            "nullable": true,
            "allOf": [{
              "$ref": "#/components/schemas/simple-user"
            }]
          },
          "parent": {
            "$ref": "#/components/schemas/repository"
          },
          "source": {
            "$ref": "#/components/schemas/repository"
          },
          "forks": {
            "type": "integer"
          },
          "master_branch": {
            "type": "string"
          },
          "open_issues": {
            "type": "integer"
          },
          "watchers": {
            "type": "integer"
          },
          "anonymous_access_enabled": {
            "description": "Whether anonymous git access is allowed.",
            "default": true,
            "type": "boolean"
          },
          "code_of_conduct": {
            "$ref": "#/components/schemas/code-of-conduct-simple"
          }
        },
        "required": [
          "archive_url",
          "assignees_url",
          "blobs_url",
          "branches_url",
          "collaborators_url",
          "comments_url",
          "commits_url",
          "compare_url",
          "contents_url",
          "contributors_url",
          "deployments_url",
          "description",
          "downloads_url",
          "events_url",
          "fork",
          "forks_url",
          "full_name",
          "git_commits_url",
          "git_refs_url",
          "git_tags_url",
          "hooks_url",
          "html_url",
          "id",
          "node_id",
          "issue_comment_url",
          "issue_events_url",
          "issues_url",
          "keys_url",
          "labels_url",
          "languages_url",
          "merges_url",
          "milestones_url",
          "name",
          "notifications_url",
          "owner",
          "private",
          "pulls_url",
          "releases_url",
          "stargazers_url",
          "statuses_url",
          "subscribers_url",
          "subscription_url",
          "tags_url",
          "teams_url",
          "trees_url",
          "url",
          "clone_url",
          "default_branch",
          "forks",
          "forks_count",
          "git_url",
          "has_downloads",
          "has_issues",
          "has_projects",
          "has_wiki",
          "has_pages",
          "homepage",
          "language",
          "archived",
          "disabled",
          "mirror_url",
          "open_issues",
          "open_issues_count",
          "license",
          "pushed_at",
          "size",
          "ssh_url",
          "stargazers_count",
          "svn_url",
          "watchers",
          "watchers_count",
          "created_at",
          "updated_at",
          "network_count",
          "subscribers_count"
        ]
      },
      "artifact": {
        "title": "Artifact",
        "description": "An artifact",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 5
          },
          "node_id": {
            "type": "string",
            "example": "MDEwOkNoZWNrU3VpdGU1"
          },
          "name": {
            "description": "The name of the artifact.",
            "type": "string",
            "example": "AdventureWorks.Framework"
          },
          "size_in_bytes": {
            "description": "The size in bytes of the artifact.",
            "type": "integer",
            "example": 12345
          },
          "url": {
            "type": "string",
            "example": "https://api.github.com/repos/github/hello-world/actions/artifacts/5"
          },
          "archive_download_url": {
            "type": "string",
            "example": "https://api.github.com/repos/github/hello-world/actions/artifacts/5/zip"
          },
          "expired": {
            "description": "Whether or not the artifact has expired.",
            "type": "boolean"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "expires_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "required": [
          "id",
          "node_id",
          "name",
          "size_in_bytes",
          "url",
          "archive_download_url",
          "expired",
          "created_at",
          "expires_at",
          "updated_at"
        ]
      },
      "job": {
        "title": "Job",
        "description": "Information of a job execution in a workflow run",
        "type": "object",
        "properties": {
          "id": {
            "description": "The id of the job.",
            "example": 21,
            "type": "integer"
          },
          "run_id": {
            "description": "The id of the associated workflow run.",
            "example": 5,
            "type": "integer"
          },
          "run_url": {
            "type": "string",
            "example": "https://api.github.com/repos/github/hello-world/actions/runs/5"
          },
          "node_id": {
            "type": "string",
            "example": "MDg6Q2hlY2tSdW40"
          },
          "head_sha": {
            "description": "The SHA of the commit that is being run.",
            "example": "009b8a3a9ccbb128af87f9b1c0f4c62e8a304f6d",
            "type": "string"
          },
          "url": {
            "type": "string",
            "example": "https://api.github.com/repos/github/hello-world/actions/jobs/21"
          },
          "html_url": {
            "type": "string",
            "example": "https://github.com/github/hello-world/runs/4",
            "nullable": true
          },
          "status": {
            "description": "The phase of the lifecycle that the job is currently in.",
            "example": "queued",
            "type": "string",
            "enum": [
              "queued",
              "in_progress",
              "completed"
            ]
          },
          "conclusion": {
            "description": "The outcome of the job.",
            "example": "success",
            "type": "string",
            "nullable": true
          },
          "started_at": {
            "description": "The time that the job started, in ISO 8601 format.",
            "example": "2019-08-08T08:00:00-07:00",
            "format": "date-time",
            "type": "string"
          },
          "completed_at": {
            "description": "The time that the job finished, in ISO 8601 format.",
            "example": "2019-08-08T08:00:00-07:00",
            "format": "date-time",
            "type": "string",
            "nullable": true
          },
          "name": {
            "description": "The name of the job.",
            "example": "test-coverage",
            "type": "string"
          },
          "steps": {
            "description": "Steps in this job.",
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "name",
                "status",
                "conclusion",
                "number"
              ],
              "properties": {
                "status": {
                  "description": "The phase of the lifecycle that the job is currently in.",
                  "example": "queued",
                  "type": "string",
                  "enum": [
                    "queued",
                    "in_progress",
                    "completed"
                  ]
                },
                "conclusion": {
                  "description": "The outcome of the job.",
                  "example": "success",
                  "type": "string",
                  "nullable": true
                },
                "name": {
                  "description": "The name of the job.",
                  "example": "test-coverage",
                  "type": "string"
                },
                "number": {
                  "type": "integer",
                  "example": 1
                },
                "started_at": {
                  "description": "The time that the step started, in ISO 8601 format.",
                  "example": "2019-08-08T08:00:00-07:00",
                  "format": "date-time",
                  "type": "string",
                  "nullable": true
                },
                "completed_at": {
                  "description": "The time that the job finished, in ISO 8601 format.",
                  "example": "2019-08-08T08:00:00-07:00",
                  "format": "date-time",
                  "type": "string",
                  "nullable": true
                }
              }
            }
          },
          "check_run_url": {
            "type": "string",
            "example": "https://api.github.com/repos/github/hello-world/check-runs/4"
          }
        },
        "required": [
          "id",
          "node_id",
          "run_id",
          "run_url",
          "head_sha",
          "name",
          "url",
          "html_url",
          "status",
          "conclusion",
          "started_at",
          "completed_at",
          "check_run_url"
        ]
      },
      "actions-enabled": {
        "type": "boolean",
        "description": "Whether GitHub Actions is enabled on the repository."
      },
      "actions-repository-permissions": {
        "type": "object",
        "properties": {
          "enabled": {
            "$ref": "#/components/schemas/actions-enabled"
          },
          "allowed_actions": {
            "$ref": "#/components/schemas/allowed-actions"
          },
          "selected_actions_url": {
            "$ref": "#/components/schemas/selected-actions-url"
          }
        },
        "required": [
          "enabled",
          "allowed_actions"
        ]
      },
      "pull-request-minimal": {
        "title": "Pull Request Minimal",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "number": {
            "type": "integer"
          },
          "url": {
            "type": "string"
          },
          "head": {
            "type": "object",
            "properties": {
              "ref": {
                "type": "string"
              },
              "sha": {
                "type": "string"
              },
              "repo": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "url": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "url",
                  "name"
                ]
              }
            },
            "required": [
              "ref",
              "sha",
              "repo"
            ]
          },
          "base": {
            "type": "object",
            "properties": {
              "ref": {
                "type": "string"
              },
              "sha": {
                "type": "string"
              },
              "repo": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "url": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "url",
                  "name"
                ]
              }
            },
            "required": [
              "ref",
              "sha",
              "repo"
            ]
          }
        },
        "required": [
          "id",
          "number",
          "url",
          "head",
          "base"
        ]
      },
      "simple-commit": {
        "title": "Simple Commit",
        "description": "Simple Commit",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "tree_id": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "author": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "email": {
                "type": "string"
              }
            },
            "required": [
              "name",
              "email"
            ],
            "nullable": true
          },
          "committer": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "email": {
                "type": "string"
              }
            },
            "required": [
              "name",
              "email"
            ],
            "nullable": true
          }
        },
        "required": [
          "id",
          "tree_id",
          "message",
          "timestamp",
          "author",
          "committer"
        ]
      },
      "workflow-run": {
        "title": "Workflow Run",
        "description": "An invocation of a workflow",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The ID of the workflow run.",
            "example": 5
          },
          "name": {
            "type": "string",
            "description": "The name of the workflow run.",
            "example": "Build"
          },
          "node_id": {
            "type": "string",
            "example": "MDEwOkNoZWNrU3VpdGU1"
          },
          "head_branch": {
            "type": "string",
            "nullable": true,
            "example": "master"
          },
          "head_sha": {
            "description": "The SHA of the head commit that points to the version of the worflow being run.",
            "example": "009b8a3a9ccbb128af87f9b1c0f4c62e8a304f6d",
            "type": "string"
          },
          "run_number": {
            "type": "integer",
            "description": "The auto incrementing run number for the workflow run.",
            "example": 106
          },
          "event": {
            "type": "string",
            "example": "push"
          },
          "status": {
            "type": "string",
            "nullable": true,
            "example": "completed"
          },
          "conclusion": {
            "type": "string",
            "nullable": true,
            "example": "neutral"
          },
          "workflow_id": {
            "type": "integer",
            "description": "The ID of the parent workflow.",
            "example": 5
          },
          "url": {
            "type": "string",
            "description": "The URL to the workflow run.",
            "example": "https://api.github.com/repos/github/hello-world/actions/runs/5"
          },
          "html_url": {
            "type": "string",
            "example": "https://github.com/github/hello-world/suites/4"
          },
          "pull_requests": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/pull-request-minimal"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "jobs_url": {
            "description": "The URL to the jobs for the workflow run.",
            "type": "string",
            "example": "https://api.github.com/repos/github/hello-world/actions/runs/5/jobs"
          },
          "logs_url": {
            "description": "The URL to download the logs for the workflow run.",
            "type": "string",
            "example": "https://api.github.com/repos/github/hello-world/actions/runs/5/logs"
          },
          "check_suite_url": {
            "description": "The URL to the associated check suite.",
            "type": "string",
            "example": "https://api.github.com/repos/github/hello-world/check-suites/12"
          },
          "artifacts_url": {
            "description": "The URL to the artifacts for the workflow run.",
            "type": "string",
            "example": "https://api.github.com/repos/github/hello-world/actions/runs/5/rerun/artifacts"
          },
          "cancel_url": {
            "description": "The URL to cancel the workflow run.",
            "type": "string",
            "example": "https://api.github.com/repos/github/hello-world/actions/runs/5/cancel"
          },
          "rerun_url": {
            "description": "The URL to rerun the workflow run.",
            "type": "string",
            "example": "https://api.github.com/repos/github/hello-world/actions/runs/5/rerun"
          },
          "workflow_url": {
            "description": "The URL to the workflow.",
            "type": "string",
            "example": "https://api.github.com/repos/github/hello-world/actions/workflows/main.yaml"
          },
          "head_commit": {
            "$ref": "#/components/schemas/simple-commit"
          },
          "repository": {
            "$ref": "#/components/schemas/minimal-repository"
          },
          "head_repository": {
            "$ref": "#/components/schemas/minimal-repository"
          },
          "head_repository_id": {
            "type": "integer",
            "example": 5
          }
        },
        "required": [
          "id",
          "node_id",
          "head_branch",
          "run_number",
          "event",
          "status",
          "conclusion",
          "head_sha",
          "workflow_id",
          "url",
          "html_url",
          "created_at",
          "updated_at",
          "head_commit",
          "head_repository",
          "repository",
          "jobs_url",
          "logs_url",
          "check_suite_url",
          "cancel_url",
          "rerun_url",
          "artifacts_url",
          "workflow_url",
          "pull_requests"
        ]
      },
      "environment-approvals": {
        "title": "Environment Approval",
        "description": "An entry in the reviews log for environment deployments",
        "type": "object",
        "properties": {
          "environments": {
            "description": "The list of environments that were approved or rejected",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "description": "The id of the environment.",
                  "example": 56780428,
                  "type": "integer"
                },
                "node_id": {
                  "type": "string",
                  "example": "MDExOkVudmlyb25tZW50NTY3ODA0Mjg="
                },
                "name": {
                  "description": "The name of the environment.",
                  "example": "staging",
                  "type": "string"
                },
                "url": {
                  "type": "string",
                  "example": "https://api.github.com/repos/github/hello-world/environments/staging"
                },
                "html_url": {
                  "type": "string",
                  "example": "https://github.com/github/hello-world/deployments/activity_log?environments_filter=staging"
                },
                "created_at": {
                  "description": "The time that the environment was created, in ISO 8601 format.",
                  "example": "2020-11-23T22:00:40Z",
                  "format": "date-time",
                  "type": "string"
                },
                "updated_at": {
                  "description": "The time that the environment was last updated, in ISO 8601 format.",
                  "example": "2020-11-23T22:00:40Z",
                  "format": "date-time",
                  "type": "string"
                }
              }
            }
          },
          "state": {
            "description": "Whether deployment to the environment(s) was approved or rejected",
            "enum": [
              "approved",
              "rejected"
            ],
            "example": "approved",
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/simple-user"
          },
          "comment": {
            "type": "string",
            "description": "The comment submitted with the deployment review",
            "example": "Ship it!"
          }
        },
        "required": [
          "environments",
          "state",
          "user",
          "comment"
        ]
      },
      "deployment-reviewer-type": {
        "type": "string",
        "description": "The type of reviewer. Must be one of: `User` or `Team`",
        "enum": [
          "User",
          "Team"
        ],
        "example": "User"
      },
      "pending-deployment": {
        "title": "Pending Deployment",
        "description": "Details of a deployment that is waiting for protection rules to pass",
        "type": "object",
        "properties": {
          "environment": {
            "type": "object",
            "properties": {
              "id": {
                "description": "The id of the environment.",
                "example": 56780428,
                "type": "integer"
              },
              "node_id": {
                "type": "string",
                "example": "MDExOkVudmlyb25tZW50NTY3ODA0Mjg="
              },
              "name": {
                "description": "The name of the environment.",
                "example": "staging",
                "type": "string"
              },
              "url": {
                "type": "string",
                "example": "https://api.github.com/repos/github/hello-world/environments/staging"
              },
              "html_url": {
                "type": "string",
                "example": "https://github.com/github/hello-world/deployments/activity_log?environments_filter=staging"
              }
            }
          },
          "wait_timer": {
            "type": "integer",
            "description": "The set duration of the wait timer",
            "example": 30
          },
          "wait_timer_started_at": {
            "description": "The time that the wait timer began.",
            "example": "2020-11-23T22:00:40Z",
            "format": "date-time",
            "type": "string",
            "nullable": true
          },
          "current_user_can_approve": {
            "description": "Whether the currently authenticated user can approve the deployment",
            "type": "boolean",
            "example": true
          },
          "reviewers": {
            "type": "array",
            "description": "The people or teams that may approve jobs that reference the environment. You can list up to six users or teams as reviewers. The reviewers must have at least read access to the repository. Only one of the required reviewers needs to approve the job for it to proceed.",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/deployment-reviewer-type"
                },
                "reviewer": {
                  "anyOf": [{
                      "$ref": "#/components/schemas/simple-user"
                    },
                    {
                      "$ref": "#/components/schemas/team-simple"
                    }
                  ]
                }
              }
            }
          }
        },
        "required": [
          "environment",
          "wait_timer",
          "wait_timer_started_at",
          "current_user_can_approve",
          "reviewers"
        ]
      },
      "deployment": {
        "title": "Deployment",
        "description": "A request for a specific ref(branch,sha,tag) to be deployed",
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/example/deployments/1"
          },
          "id": {
            "description": "Unique identifier of the deployment",
            "example": 42,
            "type": "integer"
          },
          "node_id": {
            "type": "string",
            "example": "MDEwOkRlcGxveW1lbnQx"
          },
          "sha": {
            "type": "string",
            "example": "a84d88e7554fc1fa21bcbc4efae3c782a70d2b9d"
          },
          "ref": {
            "description": "The ref to deploy. This can be a branch, tag, or sha.",
            "example": "topic-branch",
            "type": "string"
          },
          "task": {
            "description": "Parameter to specify a task to execute",
            "example": "deploy",
            "type": "string"
          },
          "payload": {
            "type": "object",
            "properties": {}
          },
          "original_environment": {
            "type": "string",
            "example": "staging"
          },
          "environment": {
            "description": "Name for the target deployment environment.",
            "example": "production",
            "type": "string"
          },
          "description": {
            "type": "string",
            "example": "Deploy request from hubot",
            "nullable": true
          },
          "creator": {
            "nullable": true,
            "allOf": [{
              "$ref": "#/components/schemas/simple-user"
            }]
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2012-07-20T01:19:13Z"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2012-07-20T01:19:13Z"
          },
          "statuses_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/example/deployments/1/statuses"
          },
          "repository_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/example"
          },
          "transient_environment": {
            "description": "Specifies if the given environment is will no longer exist at some point in the future. Default: false.",
            "example": true,
            "type": "boolean"
          },
          "production_environment": {
            "description": "Specifies if the given environment is one that end-users directly interact with. Default: false.",
            "example": true,
            "type": "boolean"
          },
          "performed_via_github_app": {
            "nullable": true,
            "allOf": [{
              "$ref": "#/components/schemas/integration"
            }]
          }
        },
        "required": [
          "id",
          "node_id",
          "sha",
          "ref",
          "task",
          "environment",
          "creator",
          "payload",
          "description",
          "statuses_url",
          "repository_url",
          "url",
          "created_at",
          "updated_at"
        ]
      },
      "workflow-run-usage": {
        "title": "Workflow Run Usage",
        "description": "Workflow Run Usage",
        "type": "object",
        "properties": {
          "billable": {
            "type": "object",
            "properties": {
              "UBUNTU": {
                "type": "object",
                "required": [
                  "total_ms",
                  "jobs"
                ],
                "properties": {
                  "total_ms": {
                    "type": "integer"
                  },
                  "jobs": {
                    "type": "integer"
                  }
                }
              },
              "MACOS": {
                "type": "object",
                "required": [
                  "total_ms",
                  "jobs"
                ],
                "properties": {
                  "total_ms": {
                    "type": "integer"
                  },
                  "jobs": {
                    "type": "integer"
                  }
                }
              },
              "WINDOWS": {
                "type": "object",
                "required": [
                  "total_ms",
                  "jobs"
                ],
                "properties": {
                  "total_ms": {
                    "type": "integer"
                  },
                  "jobs": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          "run_duration_ms": {
            "type": "integer"
          }
        },
        "required": [
          "billable",
          "run_duration_ms"
        ]
      },
      "actions-secret": {
        "title": "Actions Secret",
        "description": "Set secrets for GitHub Actions.",
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of the secret.",
            "example": "SECRET_TOKEN",
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "name",
          "created_at",
          "updated_at"
        ]
      },
      "workflow": {
        "title": "Workflow",
        "description": "A GitHub Actions workflow",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 5
          },
          "node_id": {
            "type": "string",
            "example": "MDg6V29ya2Zsb3cxMg=="
          },
          "name": {
            "type": "string",
            "example": "CI"
          },
          "path": {
            "type": "string",
            "example": "ruby.yaml"
          },
          "state": {
            "type": "string",
            "example": "active",
            "enum": [
              "active",
              "deleted"
            ]
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2019-12-06T14:20:20Z"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2019-12-06T14:20:20Z"
          },
          "url": {
            "type": "string",
            "example": "https://api.github.com/repos/actions/setup-ruby/workflows/5"
          },
          "html_url": {
            "type": "string",
            "example": "https://github.com/actions/setup-ruby/blob/master/.github/workflows/ruby.yaml"
          },
          "badge_url": {
            "type": "string",
            "example": "https://github.com/actions/setup-ruby/workflows/CI/badge.svg"
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time",
            "example": "2019-12-06T14:20:20Z"
          }
        },
        "required": [
          "id",
          "node_id",
          "name",
          "path",
          "state",
          "url",
          "html_url",
          "badge_url",
          "created_at",
          "updated_at"
        ]
      },
      "workflow-usage": {
        "title": "Workflow Usage",
        "description": "Workflow Usage",
        "type": "object",
        "properties": {
          "billable": {
            "type": "object",
            "properties": {
              "UBUNTU": {
                "type": "object",
                "properties": {
                  "total_ms": {
                    "type": "integer"
                  }
                }
              },
              "MACOS": {
                "type": "object",
                "properties": {
                  "total_ms": {
                    "type": "integer"
                  }
                }
              },
              "WINDOWS": {
                "type": "object",
                "properties": {
                  "total_ms": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "required": [
          "billable"
        ]
      },
      "protected-branch-admin-enforced": {
        "title": "Protected Branch Admin Enforced",
        "description": "Protected Branch Admin Enforced",
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World/branches/master/protection/enforce_admins"
          },
          "enabled": {
            "type": "boolean",
            "example": true
          }
        },
        "required": [
          "url",
          "enabled"
        ]
      },
      "protected-branch-pull-request-review": {
        "title": "Protected Branch Pull Request Review",
        "description": "Protected Branch Pull Request Review",
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions"
          },
          "dismissal_restrictions": {
            "type": "object",
            "properties": {
              "users": {
                "description": "The list of users with review dismissal access.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/simple-user"
                }
              },
              "teams": {
                "description": "The list of teams with review dismissal access.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/team"
                }
              },
              "url": {
                "type": "string",
                "example": "\"https://api.github.com/repos/the-org/an-org-repo/branches/master/protection/dismissal_restrictions\""
              },
              "users_url": {
                "type": "string",
                "example": "\"https://api.github.com/repos/the-org/an-org-repo/branches/master/protection/dismissal_restrictions/users\""
              },
              "teams_url": {
                "type": "string",
                "example": "\"https://api.github.com/repos/the-org/an-org-repo/branches/master/protection/dismissal_restrictions/teams\""
              }
            }
          },
          "dismiss_stale_reviews": {
            "type": "boolean",
            "example": true
          },
          "require_code_owner_reviews": {
            "type": "boolean",
            "example": true
          },
          "required_approving_review_count": {
            "type": "integer",
            "minimum": 1,
            "maximum": 6,
            "example": 2
          }
        },
        "required": [
          "dismiss_stale_reviews",
          "require_code_owner_reviews"
        ]
      },
      "branch-restriction-policy": {
        "title": "Branch Restriction Policy",
        "description": "Branch Restriction Policy",
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "format": "uri"
          },
          "users_url": {
            "type": "string",
            "format": "uri"
          },
          "teams_url": {
            "type": "string",
            "format": "uri"
          },
          "apps_url": {
            "type": "string",
            "format": "uri"
          },
          "users": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "login": {
                  "type": "string"
                },
                "id": {
                  "type": "integer"
                },
                "node_id": {
                  "type": "string"
                },
                "avatar_url": {
                  "type": "string"
                },
                "gravatar_id": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                },
                "html_url": {
                  "type": "string"
                },
                "followers_url": {
                  "type": "string"
                },
                "following_url": {
                  "type": "string"
                },
                "gists_url": {
                  "type": "string"
                },
                "starred_url": {
                  "type": "string"
                },
                "subscriptions_url": {
                  "type": "string"
                },
                "organizations_url": {
                  "type": "string"
                },
                "repos_url": {
                  "type": "string"
                },
                "events_url": {
                  "type": "string"
                },
                "received_events_url": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "site_admin": {
                  "type": "boolean"
                }
              }
            }
          },
          "teams": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "node_id": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                },
                "html_url": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "slug": {
                  "type": "string"
                },
                "description": {
                  "type": "string",
                  "nullable": true
                },
                "privacy": {
                  "type": "string"
                },
                "permission": {
                  "type": "string"
                },
                "members_url": {
                  "type": "string"
                },
                "repositories_url": {
                  "type": "string"
                },
                "parent": {
                  "type": "string",
                  "nullable": true
                }
              }
            }
          },
          "apps": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "slug": {
                  "type": "string"
                },
                "node_id": {
                  "type": "string"
                },
                "owner": {
                  "type": "object",
                  "properties": {
                    "login": {
                      "type": "string"
                    },
                    "id": {
                      "type": "integer"
                    },
                    "node_id": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    },
                    "repos_url": {
                      "type": "string"
                    },
                    "events_url": {
                      "type": "string"
                    },
                    "hooks_url": {
                      "type": "string"
                    },
                    "issues_url": {
                      "type": "string"
                    },
                    "members_url": {
                      "type": "string"
                    },
                    "public_members_url": {
                      "type": "string"
                    },
                    "avatar_url": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "gravatar_id": {
                      "type": "string",
                      "example": "\"\""
                    },
                    "html_url": {
                      "type": "string",
                      "example": "\"https://github.com/testorg-ea8ec76d71c3af4b\""
                    },
                    "followers_url": {
                      "type": "string",
                      "example": "\"https://api.github.com/users/testorg-ea8ec76d71c3af4b/followers\""
                    },
                    "following_url": {
                      "type": "string",
                      "example": "\"https://api.github.com/users/testorg-ea8ec76d71c3af4b/following{/other_user}\""
                    },
                    "gists_url": {
                      "type": "string",
                      "example": "\"https://api.github.com/users/testorg-ea8ec76d71c3af4b/gists{/gist_id}\""
                    },
                    "starred_url": {
                      "type": "string",
                      "example": "\"https://api.github.com/users/testorg-ea8ec76d71c3af4b/starred{/owner}{/repo}\""
                    },
                    "subscriptions_url": {
                      "type": "string",
                      "example": "\"https://api.github.com/users/testorg-ea8ec76d71c3af4b/subscriptions\""
                    },
                    "organizations_url": {
                      "type": "string",
                      "example": "\"https://api.github.com/users/testorg-ea8ec76d71c3af4b/orgs\""
                    },
                    "received_events_url": {
                      "type": "string",
                      "example": "\"https://api.github.com/users/testorg-ea8ec76d71c3af4b/received_events\""
                    },
                    "type": {
                      "type": "string",
                      "example": "\"Organization\""
                    }
                  }
                },
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "external_url": {
                  "type": "string"
                },
                "html_url": {
                  "type": "string"
                },
                "created_at": {
                  "type": "string"
                },
                "updated_at": {
                  "type": "string"
                },
                "permissions": {
                  "type": "object",
                  "properties": {
                    "metadata": {
                      "type": "string"
                    },
                    "contents": {
                      "type": "string"
                    },
                    "issues": {
                      "type": "string"
                    },
                    "single_file": {
                      "type": "string"
                    }
                  }
                },
                "events": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "required": [
          "url",
          "users_url",
          "teams_url",
          "apps_url",
          "users",
          "teams",
          "apps"
        ]
      },
      "branch-protection": {
        "title": "Branch Protection",
        "description": "Branch Protection",
        "type": "object",
        "properties": {
          "url": {
            "type": "string"
          },
          "required_status_checks": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string"
              },
              "enforcement_level": {
                "type": "string"
              },
              "contexts": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "contexts_url": {
                "type": "string"
              }
            },
            "required": [
              "enforcement_level",
              "contexts"
            ]
          },
          "enforce_admins": {
            "$ref": "#/components/schemas/protected-branch-admin-enforced"
          },
          "required_pull_request_reviews": {
            "$ref": "#/components/schemas/protected-branch-pull-request-review"
          },
          "restrictions": {
            "$ref": "#/components/schemas/branch-restriction-policy"
          },
          "required_linear_history": {
            "type": "object",
            "properties": {
              "enabled": {
                "type": "boolean"
              }
            }
          },
          "allow_force_pushes": {
            "type": "object",
            "properties": {
              "enabled": {
                "type": "boolean"
              }
            }
          },
          "allow_deletions": {
            "type": "object",
            "properties": {
              "enabled": {
                "type": "boolean"
              }
            }
          },
          "enabled": {
            "type": "boolean"
          },
          "name": {
            "type": "string",
            "example": "\"branch/with/protection\""
          },
          "protection_url": {
            "type": "string",
            "example": "\"https://api.github.com/repos/owner-79e94e2d36b3fd06a32bb213/AAA_Public_Repo/branches/branch/with/protection/protection\""
          }
        },
        "required": [
          "enabled",
          "required_status_checks"
        ]
      },
      "short-branch": {
        "title": "Short Branch",
        "description": "Short Branch",
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "commit": {
            "type": "object",
            "properties": {
              "sha": {
                "type": "string"
              },
              "url": {
                "type": "string",
                "format": "uri"
              }
            },
            "required": [
              "sha",
              "url"
            ]
          },
          "protected": {
            "type": "boolean"
          },
          "protection": {
            "$ref": "#/components/schemas/branch-protection"
          },
          "protection_url": {
            "type": "string",
            "format": "uri"
          }
        },
        "required": [
          "name",
          "commit",
          "protected"
        ]
      },
      "git-user": {
        "title": "Git User",
        "description": "Metaproperties for Git author/committer information.",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "\"Chris Wanstrath\""
          },
          "email": {
            "type": "string",
            "example": "\"chris@ozmm.org\""
          },
          "date": {
            "type": "string",
            "example": "\"2007-10-29T02:42:39.000-07:00\""
          }
        }
      },
      "verification": {
        "title": "Verification",
        "type": "object",
        "properties": {
          "verified": {
            "type": "boolean"
          },
          "reason": {
            "type": "string"
          },
          "payload": {
            "type": "string",
            "nullable": true
          },
          "signature": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "verified",
          "reason",
          "payload",
          "signature"
        ]
      },
      "commit": {
        "title": "Commit",
        "description": "Commit",
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e"
          },
          "sha": {
            "type": "string",
            "example": "6dcb09b5b57875f334f61aebed695e2e4193db5e"
          },
          "node_id": {
            "type": "string",
            "example": "MDY6Q29tbWl0NmRjYjA5YjViNTc4NzVmMzM0ZjYxYWViZWQ2OTVlMmU0MTkzZGI1ZQ=="
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e"
          },
          "comments_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e/comments"
          },
          "commit": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "format": "uri",
                "example": "https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e"
              },
              "author": {
                "nullable": true,
                "allOf": [{
                  "$ref": "#/components/schemas/git-user"
                }]
              },
              "committer": {
                "nullable": true,
                "allOf": [{
                  "$ref": "#/components/schemas/git-user"
                }]
              },
              "message": {
                "type": "string",
                "example": "Fix all the bugs"
              },
              "comment_count": {
                "type": "integer",
                "example": 0
              },
              "tree": {
                "type": "object",
                "properties": {
                  "sha": {
                    "type": "string",
                    "example": "827efc6d56897b048c772eb4087f854f46256132"
                  },
                  "url": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.github.com/repos/octocat/Hello-World/tree/827efc6d56897b048c772eb4087f854f46256132"
                  }
                },
                "required": [
                  "sha",
                  "url"
                ]
              },
              "verification": {
                "$ref": "#/components/schemas/verification"
              }
            },
            "required": [
              "author",
              "committer",
              "comment_count",
              "message",
              "tree",
              "url"
            ]
          },
          "author": {
            "nullable": true,
            "allOf": [{
              "$ref": "#/components/schemas/simple-user"
            }]
          },
          "committer": {
            "nullable": true,
            "allOf": [{
              "$ref": "#/components/schemas/simple-user"
            }]
          },
          "parents": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "sha": {
                  "type": "string",
                  "example": "7638417db6d59f3c431d3e1f261cc637155684cd"
                },
                "url": {
                  "type": "string",
                  "format": "uri",
                  "example": "https://api.github.com/repos/octocat/Hello-World/commits/7638417db6d59f3c431d3e1f261cc637155684cd"
                },
                "html_url": {
                  "type": "string",
                  "format": "uri",
                  "example": "https://github.com/octocat/Hello-World/commit/7638417db6d59f3c431d3e1f261cc637155684cd"
                }
              },
              "required": [
                "sha",
                "url"
              ]
            }
          },
          "stats": {
            "type": "object",
            "properties": {
              "additions": {
                "type": "integer"
              },
              "deletions": {
                "type": "integer"
              },
              "total": {
                "type": "integer"
              }
            }
          },
          "files": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "filename": {
                  "type": "string"
                },
                "additions": {
                  "type": "integer"
                },
                "deletions": {
                  "type": "integer"
                },
                "changes": {
                  "type": "integer"
                },
                "status": {
                  "type": "string"
                },
                "raw_url": {
                  "type": "string"
                },
                "blob_url": {
                  "type": "string"
                },
                "patch": {
                  "type": "string"
                },
                "sha": {
                  "type": "string",
                  "example": "\"1e8e60ce9733d5283f7836fa602b6365a66b2567\""
                },
                "contents_url": {
                  "type": "string",
                  "example": "\"https://api.github.com/repos/owner-3d68404b07d25daeb2d4a6bf/AAA_Public_Repo/contents/geometry.js?ref=c3956841a7cb7e8ba4a6fd923568d86958f01573\""
                },
                "previous_filename": {
                  "type": "string",
                  "example": "\"subdir/before_name.txt\""
                }
              }
            }
          }
        },
        "required": [
          "url",
          "sha",
          "node_id",
          "html_url",
          "comments_url",
          "commit",
          "author",
          "committer",
          "parents"
        ]
      },
      "branch-with-protection": {
        "title": "Branch With Protection",
        "description": "Branch With Protection",
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "commit": {
            "$ref": "#/components/schemas/commit"
          },
          "_links": {
            "type": "object",
            "properties": {
              "html": {
                "type": "string"
              },
              "self": {
                "type": "string",
                "format": "uri"
              }
            },
            "required": [
              "html",
              "self"
            ]
          },
          "protected": {
            "type": "boolean"
          },
          "protection": {
            "$ref": "#/components/schemas/branch-protection"
          },
          "protection_url": {
            "type": "string",
            "format": "uri"
          },
          "pattern": {
            "type": "string",
            "example": "\"mas*\""
          },
          "required_approving_review_count": {
            "type": "integer",
            "example": 1
          }
        },
        "required": [
          "name",
          "commit",
          "_links",
          "protection",
          "protected",
          "protection_url"
        ]
      },
      "status-check-policy": {
        "title": "Status Check Policy",
        "description": "Status Check Policy",
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_status_checks"
          },
          "strict": {
            "type": "boolean",
            "example": true
          },
          "contexts": {
            "type": "array",
            "example": [
              "continuous-integration/travis-ci"
            ],
            "items": {
              "type": "string"
            }
          },
          "contexts_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_status_checks/contexts"
          }
        },
        "required": [
          "url",
          "contexts_url",
          "strict",
          "contexts"
        ]
      },
      "protected-branch": {
        "title": "Protected Branch",
        "description": "Branch protections protect branches",
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "format": "uri"
          },
          "required_status_checks": {
            "$ref": "#/components/schemas/status-check-policy"
          },
          "required_pull_request_reviews": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "format": "uri"
              },
              "dismiss_stale_reviews": {
                "type": "boolean"
              },
              "require_code_owner_reviews": {
                "type": "boolean"
              },
              "required_approving_review_count": {
                "type": "integer"
              },
              "dismissal_restrictions": {
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string",
                    "format": "uri"
                  },
                  "users_url": {
                    "type": "string",
                    "format": "uri"
                  },
                  "teams_url": {
                    "type": "string",
                    "format": "uri"
                  },
                  "users": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/simple-user"
                    }
                  },
                  "teams": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/team"
                    }
                  }
                },
                "required": [
                  "url",
                  "users_url",
                  "teams_url",
                  "users",
                  "teams"
                ]
              }
            },
            "required": [
              "url"
            ]
          },
          "required_signatures": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "format": "uri",
                "example": "https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_signatures"
              },
              "enabled": {
                "type": "boolean",
                "example": true
              }
            },
            "required": [
              "url",
              "enabled"
            ]
          },
          "enforce_admins": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "format": "uri"
              },
              "enabled": {
                "type": "boolean"
              }
            },
            "additionalProperties": false,
            "required": [
              "url",
              "enabled"
            ]
          },
          "required_linear_history": {
            "type": "object",
            "properties": {
              "enabled": {
                "type": "boolean"
              }
            },
            "additionalProperties": false,
            "required": [
              "enabled"
            ]
          },
          "allow_force_pushes": {
            "type": "object",
            "properties": {
              "enabled": {
                "type": "boolean"
              }
            },
            "additionalProperties": false,
            "required": [
              "enabled"
            ]
          },
          "allow_deletions": {
            "type": "object",
            "properties": {
              "enabled": {
                "type": "boolean"
              }
            },
            "additionalProperties": false,
            "required": [
              "enabled"
            ]
          },
          "restrictions": {
            "$ref": "#/components/schemas/branch-restriction-policy"
          }
        },
        "required": [
          "url"
        ]
      },
      "deployment-simple": {
        "title": "Deployment",
        "description": "A deployment created as the result of an Actions check run from a workflow that references an environment",
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/example/deployments/1"
          },
          "id": {
            "description": "Unique identifier of the deployment",
            "example": 42,
            "type": "integer"
          },
          "node_id": {
            "type": "string",
            "example": "MDEwOkRlcGxveW1lbnQx"
          },
          "task": {
            "description": "Parameter to specify a task to execute",
            "example": "deploy",
            "type": "string"
          },
          "original_environment": {
            "type": "string",
            "example": "staging"
          },
          "environment": {
            "description": "Name for the target deployment environment.",
            "example": "production",
            "type": "string"
          },
          "description": {
            "type": "string",
            "example": "Deploy request from hubot",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2012-07-20T01:19:13Z"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2012-07-20T01:19:13Z"
          },
          "statuses_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/example/deployments/1/statuses"
          },
          "repository_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/example"
          },
          "transient_environment": {
            "description": "Specifies if the given environment is will no longer exist at some point in the future. Default: false.",
            "example": true,
            "type": "boolean"
          },
          "production_environment": {
            "description": "Specifies if the given environment is one that end-users directly interact with. Default: false.",
            "example": true,
            "type": "boolean"
          },
          "performed_via_github_app": {
            "nullable": true,
            "allOf": [{
              "$ref": "#/components/schemas/integration"
            }]
          }
        },
        "required": [
          "id",
          "node_id",
          "task",
          "environment",
          "description",
          "statuses_url",
          "repository_url",
          "url",
          "created_at",
          "updated_at"
        ]
      },
      "check-run": {
        "title": "CheckRun",
        "description": "A check performed on the code of a given code change",
        "type": "object",
        "properties": {
          "id": {
            "description": "The id of the check.",
            "example": 21,
            "type": "integer"
          },
          "head_sha": {
            "description": "The SHA of the commit that is being checked.",
            "example": "009b8a3a9ccbb128af87f9b1c0f4c62e8a304f6d",
            "type": "string"
          },
          "node_id": {
            "type": "string",
            "example": "MDg6Q2hlY2tSdW40"
          },
          "external_id": {
            "type": "string",
            "example": "42",
            "nullable": true
          },
          "url": {
            "type": "string",
            "example": "https://api.github.com/repos/github/hello-world/check-runs/4"
          },
          "html_url": {
            "type": "string",
            "example": "https://github.com/github/hello-world/runs/4",
            "nullable": true
          },
          "details_url": {
            "type": "string",
            "example": "https://example.com",
            "nullable": true
          },
          "status": {
            "description": "The phase of the lifecycle that the check is currently in.",
            "example": "queued",
            "type": "string",
            "enum": [
              "queued",
              "in_progress",
              "completed"
            ]
          },
          "conclusion": {
            "type": "string",
            "example": "neutral",
            "enum": [
              "success",
              "failure",
              "neutral",
              "cancelled",
              "skipped",
              "timed_out",
              "action_required"
            ],
            "nullable": true
          },
          "started_at": {
            "type": "string",
            "format": "date-time",
            "example": "2018-05-04T01:14:52Z",
            "nullable": true
          },
          "completed_at": {
            "type": "string",
            "format": "date-time",
            "example": "2018-05-04T01:14:52Z",
            "nullable": true
          },
          "output": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string",
                "nullable": true
              },
              "summary": {
                "type": "string",
                "nullable": true
              },
              "text": {
                "type": "string",
                "nullable": true
              },
              "annotations_count": {
                "type": "integer"
              },
              "annotations_url": {
                "type": "string",
                "format": "uri"
              }
            },
            "required": [
              "title",
              "summary",
              "text",
              "annotations_count",
              "annotations_url"
            ]
          },
          "name": {
            "description": "The name of the check.",
            "example": "test-coverage",
            "type": "string"
          },
          "check_suite": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              }
            },
            "required": [
              "id"
            ],
            "nullable": true
          },
          "app": {
            "nullable": true,
            "allOf": [{
              "$ref": "#/components/schemas/integration"
            }]
          },
          "pull_requests": {
            "items": {
              "$ref": "#/components/schemas/pull-request-minimal"
            }
          },
          "deployment": {
            "$ref": "#/components/schemas/deployment-simple"
          }
        },
        "required": [
          "id",
          "node_id",
          "head_sha",
          "name",
          "url",
          "html_url",
          "details_url",
          "status",
          "conclusion",
          "started_at",
          "completed_at",
          "external_id",
          "check_suite",
          "output",
          "app",
          "pull_requests"
        ]
      },
      "check-annotation": {
        "title": "Check Annotation",
        "description": "Check Annotation",
        "type": "object",
        "properties": {
          "path": {
            "type": "string",
            "example": "README.md"
          },
          "start_line": {
            "type": "integer",
            "example": 2
          },
          "end_line": {
            "type": "integer",
            "example": 2
          },
          "start_column": {
            "type": "integer",
            "example": 5,
            "nullable": true
          },
          "end_column": {
            "type": "integer",
            "example": 10,
            "nullable": true
          },
          "annotation_level": {
            "type": "string",
            "example": "warning",
            "nullable": true
          },
          "title": {
            "type": "string",
            "example": "Spell Checker",
            "nullable": true
          },
          "message": {
            "type": "string",
            "example": "Check your spelling for 'banaas'.",
            "nullable": true
          },
          "raw_details": {
            "type": "string",
            "example": "Do you mean 'bananas' or 'banana'?",
            "nullable": true
          },
          "blob_href": {
            "type": "string"
          }
        },
        "required": [
          "path",
          "blob_href",
          "start_line",
          "end_line",
          "start_column",
          "end_column",
          "annotation_level",
          "title",
          "message",
          "raw_details"
        ]
      },
      "check-suite": {
        "title": "CheckSuite",
        "description": "A suite of checks performed on the code of a given code change",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 5
          },
          "node_id": {
            "type": "string",
            "example": "MDEwOkNoZWNrU3VpdGU1"
          },
          "head_branch": {
            "type": "string",
            "example": "master",
            "nullable": true
          },
          "head_sha": {
            "description": "The SHA of the head commit that is being checked.",
            "example": "009b8a3a9ccbb128af87f9b1c0f4c62e8a304f6d",
            "type": "string"
          },
          "status": {
            "type": "string",
            "example": "completed",
            "enum": [
              "queued",
              "in_progress",
              "completed"
            ],
            "nullable": true
          },
          "conclusion": {
            "type": "string",
            "example": "neutral",
            "enum": [
              "success",
              "failure",
              "neutral",
              "cancelled",
              "skipped",
              "timed_out",
              "action_required"
            ],
            "nullable": true
          },
          "url": {
            "type": "string",
            "example": "https://api.github.com/repos/github/hello-world/check-suites/5",
            "nullable": true
          },
          "before": {
            "type": "string",
            "example": "146e867f55c26428e5f9fade55a9bbf5e95a7912",
            "nullable": true
          },
          "after": {
            "type": "string",
            "example": "d6fde92930d4715a2b49857d24b940956b26d2d3",
            "nullable": true
          },
          "pull_requests": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/pull-request-minimal"
            },
            "nullable": true
          },
          "app": {
            "nullable": true,
            "allOf": [{
              "$ref": "#/components/schemas/integration"
            }]
          },
          "repository": {
            "$ref": "#/components/schemas/minimal-repository"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "head_commit": {
            "$ref": "#/components/schemas/simple-commit"
          },
          "latest_check_runs_count": {
            "type": "integer"
          },
          "check_runs_url": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "node_id",
          "head_branch",
          "status",
          "conclusion",
          "head_sha",
          "url",
          "before",
          "after",
          "created_at",
          "updated_at",
          "app",
          "head_commit",
          "repository",
          "latest_check_runs_count",
          "check_runs_url",
          "pull_requests"
        ]
      },
      "check-suite-preference": {
        "title": "Check Suite Preference",
        "description": "Check suite configuration preferences for a repository.",
        "type": "object",
        "required": [
          "preferences",
          "repository"
        ],
        "properties": {
          "preferences": {
            "type": "object",
            "properties": {
              "auto_trigger_checks": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "app_id": {
                      "type": "integer"
                    },
                    "setting": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "app_id",
                    "setting"
                  ]
                }
              }
            }
          },
          "repository": {
            "$ref": "#/components/schemas/repository"
          }
        }
      },
      "code-scanning-analysis-tool-name": {
        "type": "string",
        "description": "The name of the tool used to generate the code scanning analysis."
      },
      "code-scanning-analysis-tool-guid": {
        "nullable": true,
        "type": "string",
        "description": "The GUID of the tool used to generate the code scanning analysis, if provided in the uploaded SARIF data."
      },
      "code-scanning-ref": {
        "type": "string",
        "description": "The full Git reference, formatted as `refs/heads/<branch name>`."
      },
      "code-scanning-alert-state": {
        "type": "string",
        "description": "State of a code scanning alert.",
        "enum": [
          "open",
          "dismissed",
          "fixed"
        ]
      },
      "alert-number": {
        "type": "integer",
        "description": "The security alert number.",
        "readOnly": true,
        "nullable": false
      },
      "alert-created-at": {
        "type": "string",
        "description": "The time that the alert was created in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "format": "date-time",
        "readOnly": true,
        "nullable": false
      },
      "alert-url": {
        "type": "string",
        "description": "The REST API URL of the alert resource.",
        "format": "uri",
        "readOnly": true,
        "nullable": false
      },
      "alert-html-url": {
        "type": "string",
        "description": "The GitHub URL of the alert resource.",
        "format": "uri",
        "readOnly": true,
        "nullable": false
      },
      "alert-instances-url": {
        "type": "string",
        "description": "The REST API URL for fetching the list of instances for an alert.",
        "format": "uri",
        "readOnly": true,
        "nullable": false
      },
      "code-scanning-alert-dismissed-at": {
        "type": "string",
        "description": "The time that the alert was dismissed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "format": "date-time",
        "readOnly": true,
        "nullable": true
      },
      "code-scanning-alert-dismissed-reason": {
        "type": "string",
        "description": "**Required when the state is dismissed.** The reason for dismissing or closing the alert. Can be one of: `false positive`, `won't fix`, and `used in tests`.",
        "nullable": true,
        "oneOf": [{
            "enum": [
              "false positive",
              "won't fix",
              "used in tests"
            ]
          },
          {
            "enum": [
              null
            ]
          }
        ]
      },
      "code-scanning-alert-rule-summary": {
        "type": "object",
        "properties": {
          "id": {
            "nullable": true,
            "type": "string",
            "description": "A unique identifier for the rule used to detect the alert."
          },
          "name": {
            "type": "string",
            "description": "The name of the rule used to detect the alert."
          },
          "severity": {
            "nullable": true,
            "type": "string",
            "description": "The severity of the alert.",
            "enum": [
              "none",
              "note",
              "warning",
              "error"
            ]
          },
          "description": {
            "type": "string",
            "description": "A short description of the rule used to detect the alert."
          }
        }
      },
      "code-scanning-analysis-tool-version": {
        "nullable": true,
        "type": "string",
        "description": "The version of the tool used to generate the code scanning analysis."
      },
      "code-scanning-analysis-tool": {
        "type": "object",
        "properties": {
          "name": {
            "$ref": "#/components/schemas/code-scanning-analysis-tool-name"
          },
          "version": {
            "$ref": "#/components/schemas/code-scanning-analysis-tool-version"
          },
          "guid": {
            "$ref": "#/components/schemas/code-scanning-analysis-tool-guid"
          }
        }
      },
      "code-scanning-analysis-analysis-key": {
        "type": "string",
        "description": "Identifies the configuration under which the analysis was executed. For example, in GitHub Actions this includes the workflow filename and job name."
      },
      "code-scanning-alert-environment": {
        "type": "string",
        "description": "Identifies the variable values associated with the environment in which the analysis that generated this alert instance was performed, such as the language that was analyzed."
      },
      "code-scanning-alert-location": {
        "type": "object",
        "description": "Describe a region within a file for the alert.",
        "properties": {
          "path": {
            "type": "string"
          },
          "start_line": {
            "type": "integer"
          },
          "end_line": {
            "type": "integer"
          },
          "start_column": {
            "type": "integer"
          },
          "end_column": {
            "type": "integer"
          }
        }
      },
      "code-scanning-alert-classification": {
        "type": "string",
        "description": "A classification of the file. For example to identify it as generated.",
        "nullable": true,
        "enum": [
          "source",
          "generated",
          "test",
          "library"
        ]
      },
      "code-scanning-alert-instance": {
        "type": "object",
        "properties": {
          "ref": {
            "$ref": "#/components/schemas/code-scanning-ref"
          },
          "analysis_key": {
            "$ref": "#/components/schemas/code-scanning-analysis-analysis-key"
          },
          "environment": {
            "$ref": "#/components/schemas/code-scanning-alert-environment"
          },
          "state": {
            "$ref": "#/components/schemas/code-scanning-alert-state"
          },
          "commit_sha": {
            "type": "string"
          },
          "message": {
            "type": "object",
            "properties": {
              "text": {
                "type": "string"
              }
            }
          },
          "location": {
            "$ref": "#/components/schemas/code-scanning-alert-location"
          },
          "html_url": {
            "type": "string"
          },
          "classifications": {
            "type": "array",
            "description": "Classifications that have been applied to the file that triggered the alert.\nFor example identifying it as documentation, or a generated file.",
            "items": {
              "$ref": "#/components/schemas/code-scanning-alert-classification"
            }
          }
        }
      },
      "code-scanning-alert-items": {
        "type": "object",
        "properties": {
          "number": {
            "$ref": "#/components/schemas/alert-number"
          },
          "created_at": {
            "$ref": "#/components/schemas/alert-created-at"
          },
          "url": {
            "$ref": "#/components/schemas/alert-url"
          },
          "html_url": {
            "$ref": "#/components/schemas/alert-html-url"
          },
          "instances_url": {
            "$ref": "#/components/schemas/alert-instances-url"
          },
          "state": {
            "$ref": "#/components/schemas/code-scanning-alert-state"
          },
          "dismissed_by": {
            "$ref": "#/components/schemas/simple-user"
          },
          "dismissed_at": {
            "$ref": "#/components/schemas/code-scanning-alert-dismissed-at"
          },
          "dismissed_reason": {
            "$ref": "#/components/schemas/code-scanning-alert-dismissed-reason"
          },
          "rule": {
            "$ref": "#/components/schemas/code-scanning-alert-rule-summary"
          },
          "tool": {
            "$ref": "#/components/schemas/code-scanning-analysis-tool"
          },
          "most_recent_instance": {
            "$ref": "#/components/schemas/code-scanning-alert-instance"
          }
        },
        "required": [
          "number",
          "created_at",
          "url",
          "html_url",
          "instances_url",
          "state",
          "dismissed_by",
          "dismissed_at",
          "dismissed_reason",
          "rule",
          "tool",
          "most_recent_instance"
        ]
      },
      "code-scanning-alert-rule": {
        "type": "object",
        "properties": {
          "id": {
            "nullable": true,
            "type": "string",
            "description": "A unique identifier for the rule used to detect the alert."
          },
          "name": {
            "type": "string",
            "description": "The name of the rule used to detect the alert."
          },
          "severity": {
            "nullable": true,
            "type": "string",
            "description": "The severity of the alert.",
            "enum": [
              "none",
              "note",
              "warning",
              "error"
            ]
          },
          "description": {
            "type": "string",
            "description": "A short description of the rule used to detect the alert."
          },
          "full_description": {
            "type": "string",
            "description": "description of the rule used to detect the alert."
          },
          "tags": {
            "type": "array",
            "description": "A set of tags applicable for the rule.",
            "items": {
              "type": "string"
            }
          },
          "help": {
            "type": "string",
            "description": "Detailed documentation for the rule as GitHub Flavored Markdown."
          }
        }
      },
      "code-scanning-alert": {
        "type": "object",
        "properties": {
          "number": {
            "$ref": "#/components/schemas/alert-number"
          },
          "created_at": {
            "$ref": "#/components/schemas/alert-created-at"
          },
          "url": {
            "$ref": "#/components/schemas/alert-url"
          },
          "html_url": {
            "$ref": "#/components/schemas/alert-html-url"
          },
          "instances_url": {
            "$ref": "#/components/schemas/alert-instances-url"
          },
          "state": {
            "$ref": "#/components/schemas/code-scanning-alert-state"
          },
          "dismissed_by": {
            "$ref": "#/components/schemas/simple-user"
          },
          "dismissed_at": {
            "$ref": "#/components/schemas/code-scanning-alert-dismissed-at"
          },
          "dismissed_reason": {
            "$ref": "#/components/schemas/code-scanning-alert-dismissed-reason"
          },
          "rule": {
            "$ref": "#/components/schemas/code-scanning-alert-rule"
          },
          "tool": {
            "$ref": "#/components/schemas/code-scanning-analysis-tool"
          },
          "most_recent_instance": {
            "$ref": "#/components/schemas/code-scanning-alert-instance"
          }
        },
        "required": [
          "number",
          "created_at",
          "url",
          "html_url",
          "instances_url",
          "state",
          "dismissed_by",
          "dismissed_at",
          "dismissed_reason",
          "rule",
          "tool",
          "most_recent_instance"
        ]
      },
      "code-scanning-alert-set-state": {
        "description": "Sets the state of the code scanning alert. Can be one of `open` or `dismissed`. You must provide `dismissed_reason` when you set the state to `dismissed`.",
        "type": "string",
        "enum": [
          "open",
          "dismissed"
        ]
      },
      "code-scanning-analysis-sarif-id": {
        "type": "string",
        "description": "An identifier for the upload.",
        "example": "6c81cd8e-b078-4ac3-a3be-1dad7dbd0b53",
        "nullable": false
      },
      "code-scanning-analysis-commit-sha": {
        "description": "The SHA of the commit to which the analysis you are uploading relates.",
        "type": "string",
        "minLength": 40,
        "maxLength": 40,
        "pattern": "^[0-9a-fA-F]+$"
      },
      "code-scanning-analysis-environment": {
        "type": "string",
        "description": "Identifies the variable values associated with the environment in which this analysis was performed."
      },
      "code-scanning-analysis-created-at": {
        "type": "string",
        "description": "The time that the analysis was created in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "format": "date-time",
        "readOnly": true,
        "nullable": false
      },
      "code-scanning-analysis-url": {
        "type": "string",
        "description": "The REST API URL of the analysis resource.",
        "format": "uri",
        "readOnly": true,
        "nullable": false
      },
      "code-scanning-analysis": {
        "type": "object",
        "properties": {
          "ref": {
            "$ref": "#/components/schemas/code-scanning-ref"
          },
          "commit_sha": {
            "$ref": "#/components/schemas/code-scanning-analysis-commit-sha"
          },
          "analysis_key": {
            "$ref": "#/components/schemas/code-scanning-analysis-analysis-key"
          },
          "environment": {
            "$ref": "#/components/schemas/code-scanning-analysis-environment"
          },
          "error": {
            "type": "string",
            "example": "error reading field xyz"
          },
          "created_at": {
            "$ref": "#/components/schemas/code-scanning-analysis-created-at"
          },
          "results_count": {
            "type": "integer",
            "description": "The total number of results in the analysis."
          },
          "rules_count": {
            "type": "integer",
            "description": "The total number of rules used in the analysis."
          },
          "id": {
            "type": "integer",
            "description": "Unique identifier for this analysis."
          },
          "url": {
            "$ref": "#/components/schemas/code-scanning-analysis-url"
          },
          "sarif_id": {
            "$ref": "#/components/schemas/code-scanning-analysis-sarif-id"
          },
          "tool": {
            "$ref": "#/components/schemas/code-scanning-analysis-tool"
          },
          "deletable": {
            "type": "boolean"
          }
        },
        "required": [
          "ref",
          "commit_sha",
          "analysis_key",
          "environment",
          "error",
          "created_at",
          "results_count",
          "rules_count",
          "id",
          "url",
          "sarif_id",
          "tool",
          "deletable"
        ]
      },
      "code-scanning-analysis-deletion": {
        "title": "Analysis deletion",
        "description": "Successful deletion of a code scanning analysis",
        "type": "object",
        "properties": {
          "next_analysis_url": {
            "type": "string",
            "description": "Next deletable analysis in chain, without last analysis deletion confirmation",
            "format": "uri",
            "readOnly": true,
            "nullable": true
          },
          "confirm_delete_url": {
            "type": "string",
            "description": "Next deletable analysis in chain, with last analysis deletion confirmation",
            "format": "uri",
            "readOnly": true,
            "nullable": true
          }
        },
        "required": [
          "next_analysis_url",
          "confirm_delete_url"
        ]
      },
      "scim-error": {
        "title": "Scim Error",
        "description": "Scim Error",
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "documentation_url": {
            "type": "string",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer"
          },
          "scimType": {
            "type": "string",
            "nullable": true
          },
          "schemas": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "code-scanning-analysis-sarif-file": {
        "description": "A Base64 string representing the SARIF file to upload. You must first compress your SARIF file using [`gzip`](http://www.gnu.org/software/gzip/manual/gzip.html) and then translate the contents of the file into a Base64 encoding string. For more information, see \"[SARIF support for code scanning](https://docs.github.com/github/finding-security-vulnerabilities-and-errors-in-your-code/sarif-support-for-code-scanning).\"",
        "type": "string"
      },
      "code-scanning-sarifs-receipt": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/code-scanning-analysis-sarif-id"
          },
          "url": {
            "type": "string",
            "description": "The REST API URL for checking the status of the upload.",
            "format": "uri",
            "readOnly": true,
            "nullable": false
          }
        }
      },
      "code-scanning-sarifs-status": {
        "type": "object",
        "properties": {
          "processing_status": {
            "type": "string",
            "enum": [
              "pending",
              "complete"
            ],
            "description": "`pending` files have not yet been processed, while `complete` means all results in the SARIF have been stored."
          },
          "analyses_url": {
            "type": "string",
            "description": "The REST API URL for getting the analyses associated with the upload.",
            "format": "uri",
            "readOnly": true,
            "nullable": true
          }
        }
      },
      "collaborator": {
        "title": "Collaborator",
        "description": "Collaborator",
        "type": "object",
        "properties": {
          "login": {
            "type": "string",
            "example": "octocat"
          },
          "id": {
            "type": "integer",
            "example": 1
          },
          "node_id": {
            "type": "string",
            "example": "MDQ6VXNlcjE="
          },
          "avatar_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/images/error/octocat_happy.gif"
          },
          "gravatar_id": {
            "type": "string",
            "example": "41d064eb2195891e12d0413f63227ea7",
            "nullable": true
          },
          "url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat"
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/octocat"
          },
          "followers_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat/followers"
          },
          "following_url": {
            "type": "string",
            "example": "https://api.github.com/users/octocat/following{/other_user}"
          },
          "gists_url": {
            "type": "string",
            "example": "https://api.github.com/users/octocat/gists{/gist_id}"
          },
          "starred_url": {
            "type": "string",
            "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}"
          },
          "subscriptions_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat/subscriptions"
          },
          "organizations_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat/orgs"
          },
          "repos_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat/repos"
          },
          "events_url": {
            "type": "string",
            "example": "https://api.github.com/users/octocat/events{/privacy}"
          },
          "received_events_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat/received_events"
          },
          "type": {
            "type": "string",
            "example": "User"
          },
          "site_admin": {
            "type": "boolean"
          },
          "permissions": {
            "type": "object",
            "properties": {
              "pull": {
                "type": "boolean"
              },
              "push": {
                "type": "boolean"
              },
              "admin": {
                "type": "boolean"
              }
            },
            "required": [
              "pull",
              "push",
              "admin"
            ]
          }
        },
        "required": [
          "avatar_url",
          "events_url",
          "followers_url",
          "following_url",
          "gists_url",
          "gravatar_id",
          "html_url",
          "id",
          "node_id",
          "login",
          "organizations_url",
          "received_events_url",
          "repos_url",
          "site_admin",
          "starred_url",
          "subscriptions_url",
          "type",
          "url"
        ]
      },
      "repository-invitation": {
        "title": "Repository Invitation",
        "description": "Repository invitations let you manage who you collaborate with.",
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the repository invitation.",
            "example": 42,
            "type": "integer"
          },
          "repository": {
            "$ref": "#/components/schemas/minimal-repository"
          },
          "invitee": {
            "nullable": true,
            "allOf": [{
              "$ref": "#/components/schemas/simple-user"
            }]
          },
          "inviter": {
            "nullable": true,
            "allOf": [{
              "$ref": "#/components/schemas/simple-user"
            }]
          },
          "permissions": {
            "description": "The permission associated with the invitation.",
            "example": "read",
            "type": "string",
            "enum": [
              "read",
              "write",
              "admin"
            ]
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2016-06-13T14:52:50-05:00"
          },
          "expired": {
            "description": "Whether or not the invitation has expired",
            "type": "boolean"
          },
          "url": {
            "description": "URL for the repository invitation",
            "example": "https://api.github.com/user/repository-invitations/1",
            "type": "string"
          },
          "html_url": {
            "type": "string",
            "example": "https://github.com/octocat/Hello-World/invitations"
          },
          "node_id": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "node_id",
          "permissions",
          "inviter",
          "invitee",
          "repository",
          "url",
          "html_url",
          "created_at"
        ]
      },
      "commit-comment": {
        "title": "Commit Comment",
        "description": "Commit Comment",
        "type": "object",
        "properties": {
          "html_url": {
            "type": "string",
            "format": "uri"
          },
          "url": {
            "type": "string",
            "format": "uri"
          },
          "id": {
            "type": "integer"
          },
          "node_id": {
            "type": "string"
          },
          "body": {
            "type": "string"
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "position": {
            "type": "integer",
            "nullable": true
          },
          "line": {
            "type": "integer",
            "nullable": true
          },
          "commit_id": {
            "type": "string"
          },
          "user": {
            "nullable": true,
            "allOf": [{
              "$ref": "#/components/schemas/simple-user"
            }]
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "author_association": {
            "$ref": "#/components/schemas/author_association"
          },
          "reactions": {
            "$ref": "#/components/schemas/reaction-rollup"
          }
        },
        "required": [
          "url",
          "html_url",
          "id",
          "node_id",
          "user",
          "position",
          "line",
          "path",
          "commit_id",
          "body",
          "author_association",
          "created_at",
          "updated_at"
        ]
      },
      "branch-short": {
        "title": "Branch Short",
        "description": "Branch Short",
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "commit": {
            "type": "object",
            "properties": {
              "sha": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "required": [
              "sha",
              "url"
            ]
          },
          "protected": {
            "type": "boolean"
          }
        },
        "required": [
          "name",
          "commit",
          "protected"
        ]
      },
      "link": {
        "title": "Link",
        "description": "Hypermedia Link",
        "type": "object",
        "properties": {
          "href": {
            "type": "string"
          }
        },
        "required": [
          "href"
        ]
      },
      "auto_merge": {
        "title": "Auto merge",
        "description": "The status of auto merging a pull request.",
        "type": "object",
        "properties": {
          "enabled_by": {
            "$ref": "#/components/schemas/simple-user"
          },
          "merge_method": {
            "type": "string",
            "description": "The merge method to use.",
            "enum": [
              "merge",
              "squash",
              "rebase"
            ]
          },
          "commit_title": {
            "type": "string",
            "description": "Title for the merge commit message."
          },
          "commit_message": {
            "type": "string",
            "description": "Commit message for the merge commit."
          }
        },
        "required": [
          "enabled_by",
          "merge_method",
          "commit_title",
          "commit_message"
        ],
        "nullable": true
      },
      "pull-request-simple": {
        "title": "Pull Request Simple",
        "description": "Pull Request Simple",
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World/pulls/1347"
          },
          "id": {
            "type": "integer",
            "example": 1
          },
          "node_id": {
            "type": "string",
            "example": "MDExOlB1bGxSZXF1ZXN0MQ=="
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/octocat/Hello-World/pull/1347"
          },
          "diff_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/octocat/Hello-World/pull/1347.diff"
          },
          "patch_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/octocat/Hello-World/pull/1347.patch"
          },
          "issue_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World/issues/1347"
          },
          "commits_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits"
          },
          "review_comments_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments"
          },
          "review_comment_url": {
            "type": "string",
            "example": "https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}"
          },
          "comments_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments"
          },
          "statuses_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e"
          },
          "number": {
            "type": "integer",
            "example": 1347
          },
          "state": {
            "type": "string",
            "example": "open"
          },
          "locked": {
            "type": "boolean",
            "example": true
          },
          "title": {
            "type": "string",
            "example": "new-feature"
          },
          "user": {
            "nullable": true,
            "allOf": [{
              "$ref": "#/components/schemas/simple-user"
            }]
          },
          "body": {
            "type": "string",
            "example": "Please pull these awesome changes",
            "nullable": true
          },
          "labels": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "node_id": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "color": {
                  "type": "string"
                },
                "default": {
                  "type": "boolean"
                }
              }
            }
          },
          "milestone": {
            "nullable": true,
            "allOf": [{
              "$ref": "#/components/schemas/milestone"
            }]
          },
          "active_lock_reason": {
            "type": "string",
            "example": "too heated",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2011-01-26T19:01:12Z"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2011-01-26T19:01:12Z"
          },
          "closed_at": {
            "type": "string",
            "format": "date-time",
            "example": "2011-01-26T19:01:12Z",
            "nullable": true
          },
          "merged_at": {
            "type": "string",
            "format": "date-time",
            "example": "2011-01-26T19:01:12Z",
            "nullable": true
          },
          "merge_commit_sha": {
            "type": "string",
            "example": "e5bd3914e2e596debea16f433f57875b5b90bcd6",
            "nullable": true
          },
          "assignee": {
            "nullable": true,
            "allOf": [{
              "$ref": "#/components/schemas/simple-user"
            }]
          },
          "assignees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/simple-user"
            },
            "nullable": true
          },
          "requested_reviewers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/simple-user"
            },
            "nullable": true
          },
          "requested_teams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/team-simple"
            },
            "nullable": true
          },
          "head": {
            "type": "object",
            "properties": {
              "label": {
                "type": "string"
              },
              "ref": {
                "type": "string"
              },
              "repo": {
                "$ref": "#/components/schemas/repository"
              },
              "sha": {
                "type": "string"
              },
              "user": {
                "nullable": true,
                "allOf": [{
                  "$ref": "#/components/schemas/simple-user"
                }]
              }
            },
            "required": [
              "label",
              "ref",
              "repo",
              "sha",
              "user"
            ]
          },
          "base": {
            "type": "object",
            "properties": {
              "label": {
                "type": "string"
              },
              "ref": {
                "type": "string"
              },
              "repo": {
                "$ref": "#/components/schemas/repository"
              },
              "sha": {
                "type": "string"
              },
              "user": {
                "nullable": true,
                "allOf": [{
                  "$ref": "#/components/schemas/simple-user"
                }]
              }
            },
            "required": [
              "label",
              "ref",
              "repo",
              "sha",
              "user"
            ]
          },
          "_links": {
            "type": "object",
            "properties": {
              "comments": {
                "$ref": "#/components/schemas/link"
              },
              "commits": {
                "$ref": "#/components/schemas/link"
              },
              "statuses": {
                "$ref": "#/components/schemas/link"
              },
              "html": {
                "$ref": "#/components/schemas/link"
              },
              "issue": {
                "$ref": "#/components/schemas/link"
              },
              "review_comments": {
                "$ref": "#/components/schemas/link"
              },
              "review_comment": {
                "$ref": "#/components/schemas/link"
              },
              "self": {
                "$ref": "#/components/schemas/link"
              }
            },
            "required": [
              "comments",
              "commits",
              "statuses",
              "html",
              "issue",
              "review_comments",
              "review_comment",
              "self"
            ]
          },
          "author_association": {
            "$ref": "#/components/schemas/author_association"
          },
          "auto_merge": {
            "$ref": "#/components/schemas/auto_merge"
          },
          "draft": {
            "description": "Indicates whether or not the pull request is a draft.",
            "example": false,
            "type": "boolean"
          }
        },
        "required": [
          "_links",
          "assignee",
          "labels",
          "base",
          "body",
          "closed_at",
          "comments_url",
          "commits_url",
          "created_at",
          "diff_url",
          "head",
          "html_url",
          "id",
          "node_id",
          "issue_url",
          "merge_commit_sha",
          "merged_at",
          "milestone",
          "number",
          "patch_url",
          "review_comment_url",
          "review_comments_url",
          "statuses_url",
          "state",
          "locked",
          "title",
          "updated_at",
          "url",
          "user",
          "author_association",
          "auto_merge"
        ]
      },
      "simple-commit-status": {
        "title": "Simple Commit Status",
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer"
          },
          "node_id": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "context": {
            "type": "string"
          },
          "target_url": {
            "type": "string",
            "format": "uri"
          },
          "required": {
            "type": "boolean",
            "nullable": true
          },
          "avatar_url": {
            "type": "string",
            "nullable": true,
            "format": "uri"
          },
          "url": {
            "type": "string",
            "format": "uri"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "description",
          "id",
          "node_id",
          "state",
          "context",
          "target_url",
          "avatar_url",
          "url",
          "created_at",
          "updated_at"
        ]
      },
      "combined-commit-status": {
        "title": "Combined Commit Status",
        "description": "Combined Commit Status",
        "type": "object",
        "properties": {
          "state": {
            "type": "string"
          },
          "statuses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/simple-commit-status"
            }
          },
          "sha": {
            "type": "string"
          },
          "total_count": {
            "type": "integer"
          },
          "repository": {
            "$ref": "#/components/schemas/minimal-repository"
          },
          "commit_url": {
            "type": "string",
            "format": "uri"
          },
          "url": {
            "type": "string",
            "format": "uri"
          }
        },
        "required": [
          "state",
          "sha",
          "total_count",
          "statuses",
          "repository",
          "commit_url",
          "url"
        ]
      },
      "status": {
        "title": "Status",
        "description": "The status of a commit.",
        "type": "object",
        "properties": {
          "url": {
            "type": "string"
          },
          "avatar_url": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer"
          },
          "node_id": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "target_url": {
            "type": "string"
          },
          "context": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          },
          "creator": {
            "$ref": "#/components/schemas/simple-user"
          }
        },
        "required": [
          "url",
          "avatar_url",
          "id",
          "node_id",
          "state",
          "description",
          "target_url",
          "context",
          "created_at",
          "updated_at",
          "creator"
        ]
      },
      "community-health-file": {
        "title": "Community Health File",
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "format": "uri"
          },
          "html_url": {
            "type": "string",
            "format": "uri"
          }
        },
        "required": [
          "url",
          "html_url"
        ]
      },
      "community-profile": {
        "title": "Community Profile",
        "description": "Community Profile",
        "type": "object",
        "properties": {
          "health_percentage": {
            "type": "integer",
            "example": 100
          },
          "description": {
            "type": "string",
            "example": "My first repository on GitHub!",
            "nullable": true
          },
          "documentation": {
            "type": "string",
            "example": "example.com",
            "nullable": true
          },
          "files": {
            "type": "object",
            "properties": {
              "code_of_conduct": {
                "nullable": true,
                "allOf": [{
                  "$ref": "#/components/schemas/code-of-conduct-simple"
                }]
              },
              "license": {
                "nullable": true,
                "allOf": [{
                  "$ref": "#/components/schemas/license-simple"
                }]
              },
              "contributing": {
                "nullable": true,
                "allOf": [{
                  "$ref": "#/components/schemas/community-health-file"
                }]
              },
              "readme": {
                "nullable": true,
                "allOf": [{
                  "$ref": "#/components/schemas/community-health-file"
                }]
              },
              "issue_template": {
                "nullable": true,
                "allOf": [{
                  "$ref": "#/components/schemas/community-health-file"
                }]
              },
              "pull_request_template": {
                "nullable": true,
                "allOf": [{
                  "$ref": "#/components/schemas/community-health-file"
                }]
              }
            },
            "required": [
              "code_of_conduct",
              "license",
              "contributing",
              "readme",
              "issue_template",
              "pull_request_template"
            ]
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2017-02-28T19:09:29Z",
            "nullable": true
          },
          "content_reports_enabled": {
            "type": "boolean",
            "example": true
          }
        },
        "required": [
          "health_percentage",
          "description",
          "documentation",
          "files",
          "updated_at"
        ]
      },
      "diff-entry": {
        "title": "Diff Entry",
        "description": "Diff Entry",
        "type": "object",
        "properties": {
          "sha": {
            "type": "string",
            "example": "bbcd538c8e72b8c175046e27cc8f907076331401"
          },
          "filename": {
            "type": "string",
            "example": "file1.txt"
          },
          "status": {
            "type": "string",
            "example": "added"
          },
          "additions": {
            "type": "integer",
            "example": 103
          },
          "deletions": {
            "type": "integer",
            "example": 21
          },
          "changes": {
            "type": "integer",
            "example": 124
          },
          "blob_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/octocat/Hello-World/blob/6dcb09b5b57875f334f61aebed695e2e4193db5e/file1.txt"
          },
          "raw_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/octocat/Hello-World/raw/6dcb09b5b57875f334f61aebed695e2e4193db5e/file1.txt"
          },
          "contents_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World/contents/file1.txt?ref=6dcb09b5b57875f334f61aebed695e2e4193db5e"
          },
          "patch": {
            "type": "string",
            "example": "@@ -132,7 +132,7 @@ module Test @@ -1000,7 +1000,7 @@ module Test"
          },
          "previous_filename": {
            "type": "string",
            "example": "file.txt"
          }
        },
        "required": [
          "additions",
          "blob_url",
          "changes",
          "contents_url",
          "deletions",
          "filename",
          "raw_url",
          "sha",
          "status"
        ]
      },
      "commit-comparison": {
        "title": "Commit Comparison",
        "description": "Commit Comparison",
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World/compare/master...topic"
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/octocat/Hello-World/compare/master...topic"
          },
          "permalink_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/octocat/Hello-World/compare/octocat:bbcd538c8e72b8c175046e27cc8f907076331401...octocat:0328041d1152db8ae77652d1618a02e57f745f17"
          },
          "diff_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/octocat/Hello-World/compare/master...topic.diff"
          },
          "patch_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/octocat/Hello-World/compare/master...topic.patch"
          },
          "base_commit": {
            "$ref": "#/components/schemas/commit"
          },
          "merge_base_commit": {
            "$ref": "#/components/schemas/commit"
          },
          "status": {
            "type": "string",
            "enum": [
              "diverged",
              "ahead",
              "behind",
              "identical"
            ],
            "example": "ahead"
          },
          "ahead_by": {
            "type": "integer",
            "example": 4
          },
          "behind_by": {
            "type": "integer",
            "example": 5
          },
          "total_commits": {
            "type": "integer",
            "example": 6
          },
          "commits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commit"
            }
          },
          "files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/diff-entry"
            }
          }
        },
        "required": [
          "url",
          "html_url",
          "permalink_url",
          "diff_url",
          "patch_url",
          "base_commit",
          "merge_base_commit",
          "status",
          "ahead_by",
          "behind_by",
          "total_commits",
          "commits",
          "files"
        ]
      },
      "content-tree": {
        "title": "Content Tree",
        "description": "Content Tree",
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "size": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "sha": {
            "type": "string"
          },
          "url": {
            "type": "string",
            "format": "uri"
          },
          "git_url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "download_url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "entries": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string"
                },
                "size": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "path": {
                  "type": "string"
                },
                "content": {
                  "type": "string"
                },
                "sha": {
                  "type": "string"
                },
                "url": {
                  "type": "string",
                  "format": "uri"
                },
                "git_url": {
                  "type": "string",
                  "format": "uri",
                  "nullable": true
                },
                "html_url": {
                  "type": "string",
                  "format": "uri",
                  "nullable": true
                },
                "download_url": {
                  "type": "string",
                  "format": "uri",
                  "nullable": true
                },
                "_links": {
                  "type": "object",
                  "properties": {
                    "git": {
                      "type": "string",
                      "format": "uri",
                      "nullable": true
                    },
                    "html": {
                      "type": "string",
                      "format": "uri",
                      "nullable": true
                    },
                    "self": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "required": [
                    "git",
                    "html",
                    "self"
                  ]
                }
              },
              "required": [
                "_links",
                "git_url",
                "html_url",
                "download_url",
                "name",
                "path",
                "sha",
                "size",
                "type",
                "url"
              ]
            }
          },
          "_links": {
            "type": "object",
            "properties": {
              "git": {
                "type": "string",
                "format": "uri",
                "nullable": true
              },
              "html": {
                "type": "string",
                "format": "uri",
                "nullable": true
              },
              "self": {
                "type": "string",
                "format": "uri"
              }
            },
            "required": [
              "git",
              "html",
              "self"
            ]
          }
        },
        "required": [
          "_links",
          "git_url",
          "html_url",
          "download_url",
          "name",
          "path",
          "sha",
          "size",
          "type",
          "url",
          "content",
          "encoding"
        ]
      },
      "content-directory": {
        "title": "Content Directory",
        "description": "A list of directory items",
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string"
            },
            "size": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "path": {
              "type": "string"
            },
            "content": {
              "type": "string"
            },
            "sha": {
              "type": "string"
            },
            "url": {
              "type": "string",
              "format": "uri"
            },
            "git_url": {
              "type": "string",
              "format": "uri",
              "nullable": true
            },
            "html_url": {
              "type": "string",
              "format": "uri",
              "nullable": true
            },
            "download_url": {
              "type": "string",
              "format": "uri",
              "nullable": true
            },
            "_links": {
              "type": "object",
              "properties": {
                "git": {
                  "type": "string",
                  "format": "uri",
                  "nullable": true
                },
                "html": {
                  "type": "string",
                  "format": "uri",
                  "nullable": true
                },
                "self": {
                  "type": "string",
                  "format": "uri"
                }
              },
              "required": [
                "git",
                "html",
                "self"
              ]
            }
          },
          "required": [
            "_links",
            "git_url",
            "html_url",
            "download_url",
            "name",
            "path",
            "sha",
            "size",
            "type",
            "url"
          ]
        }
      },
      "content-file": {
        "title": "Content File",
        "description": "Content File",
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "encoding": {
            "type": "string"
          },
          "size": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "sha": {
            "type": "string"
          },
          "url": {
            "type": "string",
            "format": "uri"
          },
          "git_url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "download_url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "_links": {
            "type": "object",
            "properties": {
              "git": {
                "type": "string",
                "format": "uri",
                "nullable": true
              },
              "html": {
                "type": "string",
                "format": "uri",
                "nullable": true
              },
              "self": {
                "type": "string",
                "format": "uri"
              }
            },
            "required": [
              "git",
              "html",
              "self"
            ]
          },
          "target": {
            "type": "string",
            "example": "\"actual/actual.md\""
          },
          "submodule_git_url": {
            "type": "string",
            "example": "\"git://example.com/defunkt/dotjs.git\""
          }
        },
        "required": [
          "_links",
          "git_url",
          "html_url",
          "download_url",
          "name",
          "path",
          "sha",
          "size",
          "type",
          "url",
          "content",
          "encoding"
        ]
      },
      "content-symlink": {
        "title": "Symlink Content",
        "description": "An object describing a symlink",
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "target": {
            "type": "string"
          },
          "size": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "sha": {
            "type": "string"
          },
          "url": {
            "type": "string",
            "format": "uri"
          },
          "git_url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "download_url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "_links": {
            "type": "object",
            "properties": {
              "git": {
                "type": "string",
                "format": "uri",
                "nullable": true
              },
              "html": {
                "type": "string",
                "format": "uri",
                "nullable": true
              },
              "self": {
                "type": "string",
                "format": "uri"
              }
            },
            "required": [
              "git",
              "html",
              "self"
            ]
          }
        },
        "required": [
          "_links",
          "git_url",
          "html_url",
          "download_url",
          "name",
          "path",
          "sha",
          "size",
          "type",
          "url",
          "target"
        ]
      },
      "content-submodule": {
        "title": "Symlink Content",
        "description": "An object describing a symlink",
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "submodule_git_url": {
            "type": "string",
            "format": "uri"
          },
          "size": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "sha": {
            "type": "string"
          },
          "url": {
            "type": "string",
            "format": "uri"
          },
          "git_url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "download_url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "_links": {
            "type": "object",
            "properties": {
              "git": {
                "type": "string",
                "format": "uri",
                "nullable": true
              },
              "html": {
                "type": "string",
                "format": "uri",
                "nullable": true
              },
              "self": {
                "type": "string",
                "format": "uri"
              }
            },
            "required": [
              "git",
              "html",
              "self"
            ]
          }
        },
        "required": [
          "_links",
          "git_url",
          "html_url",
          "download_url",
          "name",
          "path",
          "sha",
          "size",
          "type",
          "url",
          "submodule_git_url"
        ]
      },
      "file-commit": {
        "title": "File Commit",
        "description": "File Commit",
        "type": "object",
        "required": [
          "content",
          "commit"
        ],
        "properties": {
          "content": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "path": {
                "type": "string"
              },
              "sha": {
                "type": "string"
              },
              "size": {
                "type": "integer"
              },
              "url": {
                "type": "string"
              },
              "html_url": {
                "type": "string"
              },
              "git_url": {
                "type": "string"
              },
              "download_url": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "_links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string"
                  },
                  "git": {
                    "type": "string"
                  },
                  "html": {
                    "type": "string"
                  }
                }
              }
            },
            "nullable": true
          },
          "commit": {
            "type": "object",
            "properties": {
              "sha": {
                "type": "string"
              },
              "node_id": {
                "type": "string"
              },
              "url": {
                "type": "string"
              },
              "html_url": {
                "type": "string"
              },
              "author": {
                "type": "object",
                "properties": {
                  "date": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  }
                }
              },
              "committer": {
                "type": "object",
                "properties": {
                  "date": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  }
                }
              },
              "message": {
                "type": "string"
              },
              "tree": {
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string"
                  },
                  "sha": {
                    "type": "string"
                  }
                }
              },
              "parents": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "url": {
                      "type": "string"
                    },
                    "html_url": {
                      "type": "string"
                    },
                    "sha": {
                      "type": "string"
                    }
                  }
                }
              },
              "verification": {
                "type": "object",
                "properties": {
                  "verified": {
                    "type": "boolean"
                  },
                  "reason": {
                    "type": "string"
                  },
                  "signature": {
                    "type": "string",
                    "nullable": true
                  },
                  "payload": {
                    "type": "string",
                    "nullable": true
                  }
                }
              }
            }
          }
        }
      },
      "contributor": {
        "title": "Contributor",
        "description": "Contributor",
        "type": "object",
        "properties": {
          "login": {
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "node_id": {
            "type": "string"
          },
          "avatar_url": {
            "type": "string",
            "format": "uri"
          },
          "gravatar_id": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "format": "uri"
          },
          "html_url": {
            "type": "string",
            "format": "uri"
          },
          "followers_url": {
            "type": "string",
            "format": "uri"
          },
          "following_url": {
            "type": "string"
          },
          "gists_url": {
            "type": "string"
          },
          "starred_url": {
            "type": "string"
          },
          "subscriptions_url": {
            "type": "string",
            "format": "uri"
          },
          "organizations_url": {
            "type": "string",
            "format": "uri"
          },
          "repos_url": {
            "type": "string",
            "format": "uri"
          },
          "events_url": {
            "type": "string"
          },
          "received_events_url": {
            "type": "string",
            "format": "uri"
          },
          "type": {
            "type": "string"
          },
          "site_admin": {
            "type": "boolean"
          },
          "contributions": {
            "type": "integer"
          },
          "email": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "contributions",
          "type"
        ]
      },
      "deployment-status": {
        "title": "Deployment Status",
        "description": "The status of a deployment.",
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/example/deployments/42/statuses/1"
          },
          "id": {
            "type": "integer",
            "example": 1
          },
          "node_id": {
            "type": "string",
            "example": "MDE2OkRlcGxveW1lbnRTdGF0dXMx"
          },
          "state": {
            "description": "The state of the status.",
            "enum": [
              "error",
              "failure",
              "inactive",
              "pending",
              "success",
              "queued",
              "in_progress"
            ],
            "example": "success",
            "type": "string"
          },
          "creator": {
            "nullable": true,
            "allOf": [{
              "$ref": "#/components/schemas/simple-user"
            }]
          },
          "description": {
            "description": "A short description of the status.",
            "default": "",
            "type": "string",
            "maxLength": 140,
            "example": "Deployment finished successfully."
          },
          "environment": {
            "description": "The environment of the deployment that the status is for.",
            "default": "",
            "type": "string",
            "example": "production"
          },
          "target_url": {
            "description": "Deprecated: the URL to associate with this status.",
            "default": "",
            "type": "string",
            "format": "uri",
            "example": "https://example.com/deployment/42/output"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2012-07-20T01:19:13Z"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2012-07-20T01:19:13Z"
          },
          "deployment_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/example/deployments/42"
          },
          "repository_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/example"
          },
          "environment_url": {
            "description": "The URL for accessing your environment.",
            "default": "",
            "type": "string",
            "format": "uri",
            "example": "https://staging.example.com/"
          },
          "log_url": {
            "description": "The URL to associate with this status.",
            "default": "",
            "type": "string",
            "format": "uri",
            "example": "https://example.com/deployment/42/output"
          },
          "performed_via_github_app": {
            "nullable": true,
            "allOf": [{
              "$ref": "#/components/schemas/integration"
            }]
          }
        },
        "required": [
          "id",
          "node_id",
          "state",
          "creator",
          "description",
          "deployment_url",
          "target_url",
          "repository_url",
          "url",
          "created_at",
          "updated_at"
        ]
      },
      "wait-timer": {
        "type": "integer",
        "example": 30,
        "description": "The amount of time to delay a job after the job is initially triggered. The time (in minutes) must be an integer between 0 and 43,200 (30 days)."
      },
      "deployment_branch_policy": {
        "type": "object",
        "description": "The type of deployment branch policy for this environment. To allow all branches to deploy, set to `null`.",
        "properties": {
          "protected_branches": {
            "type": "boolean",
            "description": "Whether only branches with branch protection rules can deploy to this environment. If `protected_branches` is `true`, `custom_branch_policies` must be `false`; if `protected_branches` is `false`, `custom_branch_policies` must be `true`."
          },
          "custom_branch_policies": {
            "type": "boolean",
            "description": "Whether only branches that match the specified name patterns can deploy to this environment.  If `custom_branch_policies` is `true`, `protected_branches` must be `false`; if `custom_branch_policies` is `false`, `protected_branches` must be `true`."
          }
        },
        "nullable": true,
        "required": [
          "protected_branches",
          "custom_branch_policies"
        ]
      },
      "environment": {
        "title": "Environment",
        "description": "Details of a deployment environment",
        "type": "object",
        "properties": {
          "id": {
            "description": "The id of the environment.",
            "example": 56780428,
            "type": "integer"
          },
          "node_id": {
            "type": "string",
            "example": "MDExOkVudmlyb25tZW50NTY3ODA0Mjg="
          },
          "name": {
            "description": "The name of the environment.",
            "example": "staging",
            "type": "string"
          },
          "url": {
            "type": "string",
            "example": "https://api.github.com/repos/github/hello-world/environments/staging"
          },
          "html_url": {
            "type": "string",
            "example": "https://github.com/github/hello-world/deployments/activity_log?environments_filter=staging"
          },
          "created_at": {
            "description": "The time that the environment was created, in ISO 8601 format.",
            "example": "2020-11-23T22:00:40Z",
            "format": "date-time",
            "type": "string"
          },
          "updated_at": {
            "description": "The time that the environment was last updated, in ISO 8601 format.",
            "example": "2020-11-23T22:00:40Z",
            "format": "date-time",
            "type": "string"
          },
          "protection_rules": {
            "type": "array",
            "items": {
              "anyOf": [{
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 3515
                    },
                    "node_id": {
                      "type": "string",
                      "example": "MDQ6R2F0ZTM1MTU="
                    },
                    "type": {
                      "type": "string",
                      "example": "wait_timer"
                    },
                    "wait_timer": {
                      "$ref": "#/components/schemas/wait-timer"
                    }
                  },
                  "required": [
                    "id",
                    "node_id",
                    "type"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 3755
                    },
                    "node_id": {
                      "type": "string",
                      "example": "MDQ6R2F0ZTM3NTU="
                    },
                    "type": {
                      "type": "string",
                      "example": "required_reviewers"
                    },
                    "reviewers": {
                      "type": "array",
                      "description": "The people or teams that may approve jobs that reference the environment. You can list up to six users or teams as reviewers. The reviewers must have at least read access to the repository. Only one of the required reviewers needs to approve the job for it to proceed.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "$ref": "#/components/schemas/deployment-reviewer-type"
                          },
                          "reviewer": {
                            "anyOf": [{
                                "$ref": "#/components/schemas/simple-user"
                              },
                              {
                                "$ref": "#/components/schemas/team-simple"
                              }
                            ]
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "id",
                    "node_id",
                    "type"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 3515
                    },
                    "node_id": {
                      "type": "string",
                      "example": "MDQ6R2F0ZTM1MTU="
                    },
                    "type": {
                      "type": "string",
                      "example": "branch_policy"
                    }
                  },
                  "required": [
                    "id",
                    "node_id",
                    "type"
                  ]
                }
              ]
            }
          },
          "deployment_branch_policy": {
            "$ref": "#/components/schemas/deployment_branch_policy"
          }
        },
        "required": [
          "id",
          "node_id",
          "name",
          "url",
          "html_url",
          "created_at",
          "updated_at"
        ]
      },
      "short-blob": {
        "title": "Short Blob",
        "description": "Short Blob",
        "type": "object",
        "properties": {
          "url": {
            "type": "string"
          },
          "sha": {
            "type": "string"
          }
        },
        "required": [
          "url",
          "sha"
        ]
      },
      "blob": {
        "title": "Blob",
        "description": "Blob",
        "type": "object",
        "properties": {
          "content": {
            "type": "string"
          },
          "encoding": {
            "type": "string"
          },
          "url": {
            "type": "string",
            "format": "uri"
          },
          "sha": {
            "type": "string"
          },
          "size": {
            "type": "integer",
            "nullable": true
          },
          "node_id": {
            "type": "string"
          },
          "highlighted_content": {
            "type": "string"
          }
        },
        "required": [
          "sha",
          "url",
          "node_id",
          "size",
          "content",
          "encoding"
        ]
      },
      "git-commit": {
        "title": "Git Commit",
        "description": "Low-level Git commit operations within a repository",
        "type": "object",
        "properties": {
          "sha": {
            "description": "SHA for the commit",
            "example": "7638417db6d59f3c431d3e1f261cc637155684cd",
            "type": "string"
          },
          "node_id": {
            "type": "string"
          },
          "url": {
            "type": "string",
            "format": "uri"
          },
          "author": {
            "description": "Identifying information for the git-user",
            "type": "object",
            "properties": {
              "date": {
                "description": "Timestamp of the commit",
                "example": "2014-08-09T08:02:04+12:00",
                "format": "date-time",
                "type": "string"
              },
              "email": {
                "type": "string",
                "description": "Git email address of the user",
                "example": "monalisa.octocat@example.com"
              },
              "name": {
                "description": "Name of the git user",
                "example": "Monalisa Octocat",
                "type": "string"
              }
            },
            "required": [
              "email",
              "name",
              "date"
            ]
          },
          "committer": {
            "description": "Identifying information for the git-user",
            "type": "object",
            "properties": {
              "date": {
                "description": "Timestamp of the commit",
                "example": "2014-08-09T08:02:04+12:00",
                "format": "date-time",
                "type": "string"
              },
              "email": {
                "type": "string",
                "description": "Git email address of the user",
                "example": "monalisa.octocat@example.com"
              },
              "name": {
                "description": "Name of the git user",
                "example": "Monalisa Octocat",
                "type": "string"
              }
            },
            "required": [
              "email",
              "name",
              "date"
            ]
          },
          "message": {
            "description": "Message describing the purpose of the commit",
            "example": "Fix #42",
            "type": "string"
          },
          "tree": {
            "type": "object",
            "properties": {
              "sha": {
                "description": "SHA for the commit",
                "example": "7638417db6d59f3c431d3e1f261cc637155684cd",
                "type": "string"
              },
              "url": {
                "type": "string",
                "format": "uri"
              }
            },
            "required": [
              "sha",
              "url"
            ]
          },
          "parents": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "sha": {
                  "description": "SHA for the commit",
                  "example": "7638417db6d59f3c431d3e1f261cc637155684cd",
                  "type": "string"
                },
                "url": {
                  "type": "string",
                  "format": "uri"
                },
                "html_url": {
                  "type": "string",
                  "format": "uri"
                }
              },
              "required": [
                "sha",
                "url",
                "html_url"
              ]
            }
          },
          "verification": {
            "type": "object",
            "properties": {
              "verified": {
                "type": "boolean"
              },
              "reason": {
                "type": "string"
              },
              "signature": {
                "type": "string",
                "nullable": true
              },
              "payload": {
                "type": "string",
                "nullable": true
              }
            },
            "required": [
              "verified",
              "reason",
              "signature",
              "payload"
            ]
          },
          "html_url": {
            "type": "string",
            "format": "uri"
          }
        },
        "required": [
          "sha",
          "node_id",
          "url",
          "html_url",
          "author",
          "committer",
          "tree",
          "message",
          "parents",
          "verification"
        ]
      },
      "git-ref": {
        "title": "Git Reference",
        "description": "Git references within a repository",
        "type": "object",
        "properties": {
          "ref": {
            "type": "string"
          },
          "node_id": {
            "type": "string"
          },
          "url": {
            "type": "string",
            "format": "uri"
          },
          "object": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "sha": {
                "description": "SHA for the reference",
                "example": "7638417db6d59f3c431d3e1f261cc637155684cd",
                "type": "string",
                "minLength": 40,
                "maxLength": 40
              },
              "url": {
                "type": "string",
                "format": "uri"
              }
            },
            "required": [
              "type",
              "sha",
              "url"
            ]
          }
        },
        "required": [
          "ref",
          "node_id",
          "url",
          "object"
        ]
      },
      "git-tag": {
        "title": "Git Tag",
        "description": "Metadata for a Git tag",
        "type": "object",
        "properties": {
          "node_id": {
            "type": "string",
            "example": "MDM6VGFnOTQwYmQzMzYyNDhlZmFlMGY5ZWU1YmM3YjJkNWM5ODU4ODdiMTZhYw=="
          },
          "tag": {
            "description": "Name of the tag",
            "example": "v0.0.1",
            "type": "string"
          },
          "sha": {
            "type": "string",
            "example": "940bd336248efae0f9ee5bc7b2d5c985887b16ac"
          },
          "url": {
            "description": "URL for the tag",
            "example": "https://api.github.com/repositories/42/git/tags/940bd336248efae0f9ee5bc7b2d5c985887b16ac",
            "type": "string",
            "format": "uri"
          },
          "message": {
            "description": "Message describing the purpose of the tag",
            "example": "Initial public release",
            "type": "string"
          },
          "tagger": {
            "type": "object",
            "properties": {
              "date": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            },
            "required": [
              "date",
              "email",
              "name"
            ]
          },
          "object": {
            "type": "object",
            "properties": {
              "sha": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "url": {
                "type": "string",
                "format": "uri"
              }
            },
            "required": [
              "sha",
              "type",
              "url"
            ]
          },
          "verification": {
            "$ref": "#/components/schemas/verification"
          }
        },
        "required": [
          "sha",
          "url",
          "node_id",
          "tagger",
          "object",
          "tag",
          "message"
        ]
      },
      "git-tree": {
        "title": "Git Tree",
        "description": "The hierarchy between files in a Git repository.",
        "type": "object",
        "properties": {
          "sha": {
            "type": "string"
          },
          "url": {
            "type": "string",
            "format": "uri"
          },
          "truncated": {
            "type": "boolean"
          },
          "tree": {
            "description": "Objects specifying a tree structure",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "path": {
                  "type": "string",
                  "example": "test/file.rb"
                },
                "mode": {
                  "type": "string",
                  "example": "040000"
                },
                "type": {
                  "type": "string",
                  "example": "tree"
                },
                "sha": {
                  "type": "string",
                  "example": "23f6827669e43831def8a7ad935069c8bd418261"
                },
                "size": {
                  "type": "integer",
                  "example": 12
                },
                "url": {
                  "type": "string",
                  "example": "https://api.github.com/repos/owner-482f3203ecf01f67e9deb18e/BBB_Private_Repo/git/blobs/23f6827669e43831def8a7ad935069c8bd418261"
                }
              }
            },
            "example": [{
              "path": "file.rb",
              "mode": "100644",
              "type": "blob",
              "size": 30,
              "sha": "44b4fc6d56897b048c772eb4087f854f46256132",
              "url": "https://api.github.com/repos/octocat/Hello-World/git/blobs/44b4fc6d56897b048c772eb4087f854f46256132",
              "properties": {
                "path": {
                  "type": "string"
                },
                "mode": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "size": {
                  "type": "integer"
                },
                "sha": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                }
              },
              "required": [
                "path",
                "mode",
                "type",
                "sha",
                "url",
                "size"
              ]
            }]
          }
        },
        "required": [
          "sha",
          "url",
          "tree",
          "truncated"
        ]
      },
      "hook-response": {
        "title": "Hook Response",
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "code",
          "status",
          "message"
        ]
      },
      "hook": {
        "title": "Webhook",
        "description": "Webhooks for repositories.",
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "description": "Unique identifier of the webhook.",
            "example": 42,
            "type": "integer"
          },
          "name": {
            "description": "The name of a valid service, use 'web' for a webhook.",
            "example": "web",
            "type": "string"
          },
          "active": {
            "description": "Determines whether the hook is actually triggered on pushes.",
            "type": "boolean",
            "example": true
          },
          "events": {
            "description": "Determines what events the hook is triggered for. Default: ['push'].",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "push",
              "pull_request"
            ]
          },
          "config": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "example": "\"foo@bar.com\""
              },
              "password": {
                "type": "string",
                "example": "\"foo\""
              },
              "room": {
                "type": "string",
                "example": "\"roomer\""
              },
              "subdomain": {
                "type": "string",
                "example": "\"foo\""
              },
              "url": {
                "$ref": "#/components/schemas/webhook-config-url"
              },
              "insecure_ssl": {
                "$ref": "#/components/schemas/webhook-config-insecure-ssl"
              },
              "content_type": {
                "$ref": "#/components/schemas/webhook-config-content-type"
              },
              "digest": {
                "type": "string",
                "example": "\"sha256\""
              },
              "secret": {
                "$ref": "#/components/schemas/webhook-config-secret"
              },
              "token": {
                "type": "string",
                "example": "\"abc\""
              }
            }
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2011-09-06T20:39:23Z"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2011-09-06T17:26:27Z"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World/hooks/1"
          },
          "test_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World/hooks/1/test"
          },
          "ping_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World/hooks/1/pings"
          },
          "last_response": {
            "$ref": "#/components/schemas/hook-response"
          }
        },
        "required": [
          "id",
          "url",
          "type",
          "name",
          "active",
          "events",
          "config",
          "ping_url",
          "created_at",
          "updated_at",
          "last_response",
          "test_url"
        ]
      },
      "import": {
        "title": "Import",
        "description": "A repository import from an external source.",
        "type": "object",
        "properties": {
          "vcs": {
            "type": "string",
            "nullable": true
          },
          "use_lfs": {
            "type": "string"
          },
          "vcs_url": {
            "description": "The URL of the originating repository.",
            "type": "string"
          },
          "svc_root": {
            "type": "string"
          },
          "tfvc_project": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "auth",
              "error",
              "none",
              "detecting",
              "choose",
              "auth_failed",
              "importing",
              "mapping",
              "waiting_to_push",
              "pushing",
              "complete",
              "setup",
              "unknown",
              "detection_found_multiple",
              "detection_found_nothing",
              "detection_needs_auth"
            ]
          },
          "status_text": {
            "type": "string",
            "nullable": true
          },
          "failed_step": {
            "type": "string",
            "nullable": true
          },
          "error_message": {
            "type": "string",
            "nullable": true
          },
          "import_percent": {
            "type": "integer",
            "nullable": true
          },
          "commit_count": {
            "type": "integer",
            "nullable": true
          },
          "push_percent": {
            "type": "integer",
            "nullable": true
          },
          "has_large_files": {
            "type": "boolean"
          },
          "large_files_size": {
            "type": "integer"
          },
          "large_files_count": {
            "type": "integer"
          },
          "project_choices": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "vcs": {
                  "type": "string"
                },
                "tfvc_project": {
                  "type": "string"
                },
                "human_name": {
                  "type": "string"
                }
              }
            }
          },
          "message": {
            "type": "string"
          },
          "authors_count": {
            "type": "integer",
            "nullable": true
          },
          "url": {
            "type": "string",
            "format": "uri"
          },
          "html_url": {
            "type": "string",
            "format": "uri"
          },
          "authors_url": {
            "type": "string",
            "format": "uri"
          },
          "repository_url": {
            "type": "string",
            "format": "uri"
          },
          "svn_root": {
            "type": "string"
          }
        },
        "required": [
          "vcs",
          "vcs_url",
          "status",
          "url",
          "repository_url",
          "html_url",
          "authors_url"
        ]
      },
      "porter-author": {
        "title": "Porter Author",
        "description": "Porter Author",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "remote_id": {
            "type": "string"
          },
          "remote_name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "url": {
            "type": "string",
            "format": "uri"
          },
          "import_url": {
            "type": "string",
            "format": "uri"
          }
        },
        "required": [
          "id",
          "remote_id",
          "remote_name",
          "email",
          "name",
          "url",
          "import_url"
        ]
      },
      "porter-large-file": {
        "title": "Porter Large File",
        "description": "Porter Large File",
        "type": "object",
        "properties": {
          "ref_name": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "oid": {
            "type": "string"
          },
          "size": {
            "type": "integer"
          }
        },
        "required": [
          "oid",
          "path",
          "ref_name",
          "size"
        ]
      },
      "issue-event-label": {
        "title": "Issue Event Label",
        "description": "Issue Event Label",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "color": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "name",
          "color"
        ]
      },
      "issue-event-dismissed-review": {
        "title": "Issue Event Dismissed Review",
        "type": "object",
        "properties": {
          "state": {
            "type": "string"
          },
          "review_id": {
            "type": "integer"
          },
          "dismissal_message": {
            "type": "string",
            "nullable": true
          },
          "dismissal_commit_id": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "state",
          "review_id",
          "dismissal_message"
        ]
      },
      "issue-event-milestone": {
        "title": "Issue Event Milestone",
        "description": "Issue Event Milestone",
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          }
        },
        "required": [
          "title"
        ]
      },
      "issue-event-project-card": {
        "title": "Issue Event Project Card",
        "description": "Issue Event Project Card",
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "format": "uri"
          },
          "id": {
            "type": "integer"
          },
          "project_url": {
            "type": "string",
            "format": "uri"
          },
          "project_id": {
            "type": "integer"
          },
          "column_name": {
            "type": "string"
          },
          "previous_column_name": {
            "type": "string"
          }
        },
        "required": [
          "url",
          "id",
          "project_url",
          "project_id",
          "column_name"
        ]
      },
      "issue-event-rename": {
        "title": "Issue Event Rename",
        "description": "Issue Event Rename",
        "type": "object",
        "properties": {
          "from": {
            "type": "string"
          },
          "to": {
            "type": "string"
          }
        },
        "required": [
          "from",
          "to"
        ]
      },
      "issue-event": {
        "title": "Issue Event",
        "description": "Issue Event",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "node_id": {
            "type": "string",
            "example": "MDEwOklzc3VlRXZlbnQx"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World/issues/events/1"
          },
          "actor": {
            "nullable": true,
            "allOf": [{
              "$ref": "#/components/schemas/simple-user"
            }]
          },
          "event": {
            "type": "string",
            "example": "closed"
          },
          "commit_id": {
            "type": "string",
            "example": "6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "nullable": true
          },
          "commit_url": {
            "type": "string",
            "example": "https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2011-04-14T16:00:49Z"
          },
          "issue": {
            "$ref": "#/components/schemas/issue-simple"
          },
          "label": {
            "$ref": "#/components/schemas/issue-event-label"
          },
          "assignee": {
            "nullable": true,
            "allOf": [{
              "$ref": "#/components/schemas/simple-user"
            }]
          },
          "assigner": {
            "nullable": true,
            "allOf": [{
              "$ref": "#/components/schemas/simple-user"
            }]
          },
          "review_requester": {
            "nullable": true,
            "allOf": [{
              "$ref": "#/components/schemas/simple-user"
            }]
          },
          "requested_reviewer": {
            "nullable": true,
            "allOf": [{
              "$ref": "#/components/schemas/simple-user"
            }]
          },
          "requested_team": {
            "$ref": "#/components/schemas/team"
          },
          "dismissed_review": {
            "$ref": "#/components/schemas/issue-event-dismissed-review"
          },
          "milestone": {
            "$ref": "#/components/schemas/issue-event-milestone"
          },
          "project_card": {
            "$ref": "#/components/schemas/issue-event-project-card"
          },
          "rename": {
            "$ref": "#/components/schemas/issue-event-rename"
          },
          "author_association": {
            "$ref": "#/components/schemas/author_association"
          },
          "lock_reason": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "id",
          "node_id",
          "url",
          "actor",
          "event",
          "commit_id",
          "commit_url",
          "created_at"
        ]
      },
      "issue-event-for-issue": {
        "title": "Issue Event for Issue",
        "description": "Issue Event for Issue",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "node_id": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "actor": {
            "$ref": "#/components/schemas/simple-user"
          },
          "event": {
            "type": "string"
          },
          "commit_id": {
            "type": "string",
            "nullable": true
          },
          "commit_url": {
            "type": "string",
            "nullable": true
          },
          "created_at": {
            "type": "string"
          },
          "sha": {
            "type": "string",
            "example": "\"480d4f47447129f015cb327536c522ca683939a1\""
          },
          "html_url": {
            "type": "string",
            "example": "\"https://github.com/owner-3906e11a33a3d55ba449d63f/BBB_Private_Repo/commit/480d4f47447129f015cb327536c522ca683939a1\""
          },
          "message": {
            "type": "string",
            "example": "\"add a bunch of files\""
          },
          "issue_url": {
            "type": "string",
            "example": "\"https://api.github.com/repos/owner-3906e11a33a3d55ba449d63f/AAA_Public_Repo/issues/1\""
          },
          "updated_at": {
            "type": "string",
            "example": "\"2020-07-09T00:17:36Z\""
          },
          "author_association": {
            "$ref": "#/components/schemas/author_association"
          },
          "body": {
            "type": "string",
            "example": "\":+1:\""
          },
          "lock_reason": {
            "type": "string",
            "example": "\"off-topic\""
          },
          "submitted_at": {
            "type": "string",
            "example": "\"2020-07-09T00:17:51Z\""
          },
          "state": {
            "type": "string",
            "example": "\"commented\""
          },
          "pull_request_url": {
            "type": "string",
            "example": "\"https://api.github.com/repos/owner-3906e11a33a3d55ba449d63f/AAA_Public_Repo/pulls/2\""
          },
          "body_html": {
            "type": "string",
            "example": "\"<p>Accusantium fugiat cumque. Autem qui nostrum. Atque quae ullam.</p>\""
          },
          "body_text": {
            "type": "string",
            "example": "\"Accusantium fugiat cumque. Autem qui nostrum. Atque quae ullam.\""
          }
        }
      },
      "deploy-key": {
        "title": "Deploy Key",
        "description": "An SSH key granting access to a single repository.",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "key": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "verified": {
            "type": "boolean"
          },
          "created_at": {
            "type": "string"
          },
          "read_only": {
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "key",
          "url",
          "title",
          "verified",
          "created_at",
          "read_only"
        ]
      },
      "language": {
        "title": "Language",
        "description": "Language",
        "type": "object",
        "additionalProperties": {
          "type": "integer"
        }
      },
      "license-content": {
        "title": "License Content",
        "description": "License Content",
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "sha": {
            "type": "string"
          },
          "size": {
            "type": "integer"
          },
          "url": {
            "type": "string",
            "format": "uri"
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "git_url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "download_url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "type": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "encoding": {
            "type": "string"
          },
          "_links": {
            "type": "object",
            "properties": {
              "git": {
                "type": "string",
                "format": "uri",
                "nullable": true
              },
              "html": {
                "type": "string",
                "format": "uri",
                "nullable": true
              },
              "self": {
                "type": "string",
                "format": "uri"
              }
            },
            "required": [
              "git",
              "html",
              "self"
            ]
          },
          "license": {
            "nullable": true,
            "allOf": [{
              "$ref": "#/components/schemas/license-simple"
            }]
          }
        },
        "required": [
          "_links",
          "git_url",
          "html_url",
          "download_url",
          "name",
          "path",
          "sha",
          "size",
          "type",
          "url",
          "content",
          "encoding",
          "license"
        ]
      },
      "pages-source-hash": {
        "title": "Pages Source Hash",
        "type": "object",
        "properties": {
          "branch": {
            "type": "string"
          },
          "path": {
            "type": "string"
          }
        },
        "required": [
          "branch",
          "path"
        ]
      },
      "page": {
        "title": "GitHub Pages",
        "description": "The configuration for GitHub Pages for a repository.",
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "The API address for accessing this Page resource.",
            "format": "uri",
            "example": "https://api.github.com/repos/github/hello-world/pages"
          },
          "status": {
            "type": "string",
            "description": "The status of the most recent build of the Page.",
            "example": "built",
            "enum": [
              "built",
              "building",
              "errored"
            ],
            "nullable": true
          },
          "cname": {
            "description": "The Pages site's custom domain",
            "example": "example.com",
            "type": "string",
            "nullable": true
          },
          "custom_404": {
            "type": "boolean",
            "description": "Whether the Page has a custom 404 page.",
            "example": false,
            "default": false
          },
          "html_url": {
            "type": "string",
            "description": "The web address the Page can be accessed from.",
            "format": "uri",
            "example": "https://example.com"
          },
          "source": {
            "$ref": "#/components/schemas/pages-source-hash"
          },
          "public": {
            "type": "boolean",
            "description": "Whether the GitHub Pages site is publicly visible. If set to `true`, the site is accessible to anyone on the internet. If set to `false`, the site will only be accessible to users who have at least `read` access to the repository that published the site.",
            "example": true
          }
        },
        "required": [
          "url",
          "status",
          "cname",
          "custom_404",
          "public"
        ]
      },
      "page-build": {
        "title": "Page Build",
        "description": "Page Build",
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "format": "uri"
          },
          "status": {
            "type": "string"
          },
          "error": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string",
                "nullable": true
              }
            },
            "required": [
              "message"
            ]
          },
          "pusher": {
            "nullable": true,
            "allOf": [{
              "$ref": "#/components/schemas/simple-user"
            }]
          },
          "commit": {
            "type": "string"
          },
          "duration": {
            "type": "integer"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "url",
          "status",
          "error",
          "pusher",
          "commit",
          "duration",
          "created_at",
          "updated_at"
        ]
      },
      "page-build-status": {
        "title": "Page Build Status",
        "description": "Page Build Status",
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/github/hello-world/pages/builds/latest"
          },
          "status": {
            "type": "string",
            "example": "queued"
          }
        },
        "required": [
          "url",
          "status"
        ]
      },
      "pull-request": {
        "type": "object",
        "title": "Pull Request",
        "description": "Pull requests let you tell others about changes you've pushed to a repository on GitHub. Once a pull request is sent, interested parties can review the set of changes, discuss potential modifications, and even push follow-up commits if necessary.",
        "properties": {
          "url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World/pulls/1347"
          },
          "id": {
            "type": "integer",
            "example": 1
          },
          "node_id": {
            "type": "string",
            "example": "MDExOlB1bGxSZXF1ZXN0MQ=="
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/octocat/Hello-World/pull/1347"
          },
          "diff_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/octocat/Hello-World/pull/1347.diff"
          },
          "patch_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/octocat/Hello-World/pull/1347.patch"
          },
          "issue_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World/issues/1347"
          },
          "commits_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits"
          },
          "review_comments_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments"
          },
          "review_comment_url": {
            "type": "string",
            "example": "https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}"
          },
          "comments_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World/issues/1347/comments"
          },
          "statuses_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e"
          },
          "number": {
            "description": "Number uniquely identifying the pull request within its repository.",
            "example": 42,
            "type": "integer"
          },
          "state": {
            "description": "State of this Pull Request. Either `open` or `closed`.",
            "enum": [
              "open",
              "closed"
            ],
            "example": "open",
            "type": "string"
          },
          "locked": {
            "type": "boolean",
            "example": true
          },
          "title": {
            "description": "The title of the pull request.",
            "example": "Amazing new feature",
            "type": "string"
          },
          "user": {
            "nullable": true,
            "allOf": [{
              "$ref": "#/components/schemas/simple-user"
            }]
          },
          "body": {
            "type": "string",
            "example": "Please pull these awesome changes",
            "nullable": true
          },
          "labels": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "node_id": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string",
                  "nullable": true
                },
                "color": {
                  "type": "string"
                },
                "default": {
                  "type": "boolean"
                }
              }
            }
          },
          "milestone": {
            "nullable": true,
            "allOf": [{
              "$ref": "#/components/schemas/milestone"
            }]
          },
          "active_lock_reason": {
            "type": "string",
            "example": "too heated",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2011-01-26T19:01:12Z"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2011-01-26T19:01:12Z"
          },
          "closed_at": {
            "type": "string",
            "format": "date-time",
            "example": "2011-01-26T19:01:12Z",
            "nullable": true
          },
          "merged_at": {
            "type": "string",
            "format": "date-time",
            "example": "2011-01-26T19:01:12Z",
            "nullable": true
          },
          "merge_commit_sha": {
            "type": "string",
            "example": "e5bd3914e2e596debea16f433f57875b5b90bcd6",
            "nullable": true
          },
          "assignee": {
            "nullable": true,
            "allOf": [{
              "$ref": "#/components/schemas/simple-user"
            }]
          },
          "assignees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/simple-user"
            },
            "nullable": true
          },
          "requested_reviewers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/simple-user"
            },
            "nullable": true
          },
          "requested_teams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/team-simple"
            },
            "nullable": true
          },
          "head": {
            "type": "object",
            "properties": {
              "label": {
                "type": "string"
              },
              "ref": {
                "type": "string"
              },
              "repo": {
                "type": "object",
                "properties": {
                  "archive_url": {
                    "type": "string"
                  },
                  "assignees_url": {
                    "type": "string"
                  },
                  "blobs_url": {
                    "type": "string"
                  },
                  "branches_url": {
                    "type": "string"
                  },
                  "collaborators_url": {
                    "type": "string"
                  },
                  "comments_url": {
                    "type": "string"
                  },
                  "commits_url": {
                    "type": "string"
                  },
                  "compare_url": {
                    "type": "string"
                  },
                  "contents_url": {
                    "type": "string"
                  },
                  "contributors_url": {
                    "type": "string",
                    "format": "uri"
                  },
                  "deployments_url": {
                    "type": "string",
                    "format": "uri"
                  },
                  "description": {
                    "type": "string",
                    "nullable": true
                  },
                  "downloads_url": {
                    "type": "string",
                    "format": "uri"
                  },
                  "events_url": {
                    "type": "string",
                    "format": "uri"
                  },
                  "fork": {
                    "type": "boolean"
                  },
                  "forks_url": {
                    "type": "string",
                    "format": "uri"
                  },
                  "full_name": {
                    "type": "string"
                  },
                  "git_commits_url": {
                    "type": "string"
                  },
                  "git_refs_url": {
                    "type": "string"
                  },
                  "git_tags_url": {
                    "type": "string"
                  },
                  "hooks_url": {
                    "type": "string",
                    "format": "uri"
                  },
                  "html_url": {
                    "type": "string",
                    "format": "uri"
                  },
                  "id": {
                    "type": "integer"
                  },
                  "node_id": {
                    "type": "string"
                  },
                  "issue_comment_url": {
                    "type": "string"
                  },
                  "issue_events_url": {
                    "type": "string"
                  },
                  "issues_url": {
                    "type": "string"
                  },
                  "keys_url": {
                    "type": "string"
                  },
                  "labels_url": {
                    "type": "string"
                  },
                  "languages_url": {
                    "type": "string",
                    "format": "uri"
                  },
                  "merges_url": {
                    "type": "string",
                    "format": "uri"
                  },
                  "milestones_url": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "notifications_url": {
                    "type": "string"
                  },
                  "owner": {
                    "type": "object",
                    "properties": {
                      "avatar_url": {
                        "type": "string",
                        "format": "uri"
                      },
                      "events_url": {
                        "type": "string"
                      },
                      "followers_url": {
                        "type": "string",
                        "format": "uri"
                      },
                      "following_url": {
                        "type": "string"
                      },
                      "gists_url": {
                        "type": "string"
                      },
                      "gravatar_id": {
                        "type": "string",
                        "nullable": true
                      },
                      "html_url": {
                        "type": "string",
                        "format": "uri"
                      },
                      "id": {
                        "type": "integer"
                      },
                      "node_id": {
                        "type": "string"
                      },
                      "login": {
                        "type": "string"
                      },
                      "organizations_url": {
                        "type": "string",
                        "format": "uri"
                      },
                      "received_events_url": {
                        "type": "string",
                        "format": "uri"
                      },
                      "repos_url": {
                        "type": "string",
                        "format": "uri"
                      },
                      "site_admin": {
                        "type": "boolean"
                      },
                      "starred_url": {
                        "type": "string"
                      },
                      "subscriptions_url": {
                        "type": "string",
                        "format": "uri"
                      },
                      "type": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string",
                        "format": "uri"
                      }
                    },
                    "required": [
                      "avatar_url",
                      "events_url",
                      "followers_url",
                      "following_url",
                      "gists_url",
                      "gravatar_id",
                      "html_url",
                      "id",
                      "node_id",
                      "login",
                      "organizations_url",
                      "received_events_url",
                      "repos_url",
                      "site_admin",
                      "starred_url",
                      "subscriptions_url",
                      "type",
                      "url"
                    ]
                  },
                  "private": {
                    "type": "boolean"
                  },
                  "pulls_url": {
                    "type": "string"
                  },
                  "releases_url": {
                    "type": "string"
                  },
                  "stargazers_url": {
                    "type": "string",
                    "format": "uri"
                  },
                  "statuses_url": {
                    "type": "string"
                  },
                  "subscribers_url": {
                    "type": "string",
                    "format": "uri"
                  },
                  "subscription_url": {
                    "type": "string",
                    "format": "uri"
                  },
                  "tags_url": {
                    "type": "string",
                    "format": "uri"
                  },
                  "teams_url": {
                    "type": "string",
                    "format": "uri"
                  },
                  "trees_url": {
                    "type": "string"
                  },
                  "url": {
                    "type": "string",
                    "format": "uri"
                  },
                  "clone_url": {
                    "type": "string"
                  },
                  "default_branch": {
                    "type": "string"
                  },
                  "forks": {
                    "type": "integer"
                  },
                  "forks_count": {
                    "type": "integer"
                  },
                  "git_url": {
                    "type": "string"
                  },
                  "has_downloads": {
                    "type": "boolean"
                  },
                  "has_issues": {
                    "type": "boolean"
                  },
                  "has_projects": {
                    "type": "boolean"
                  },
                  "has_wiki": {
                    "type": "boolean"
                  },
                  "has_pages": {
                    "type": "boolean"
                  },
                  "homepage": {
                    "type": "string",
                    "format": "uri",
                    "nullable": true
                  },
                  "language": {
                    "type": "string",
                    "nullable": true
                  },
                  "master_branch": {
                    "type": "string"
                  },
                  "archived": {
                    "type": "boolean"
                  },
                  "disabled": {
                    "type": "boolean"
                  },
                  "mirror_url": {
                    "type": "string",
                    "format": "uri",
                    "nullable": true
                  },
                  "open_issues": {
                    "type": "integer"
                  },
                  "open_issues_count": {
                    "type": "integer"
                  },
                  "permissions": {
                    "type": "object",
                    "properties": {
                      "admin": {
                        "type": "boolean"
                      },
                      "pull": {
                        "type": "boolean"
                      },
                      "push": {
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "admin",
                      "pull",
                      "push"
                    ]
                  },
                  "temp_clone_token": {
                    "type": "string"
                  },
                  "allow_merge_commit": {
                    "type": "boolean"
                  },
                  "allow_squash_merge": {
                    "type": "boolean"
                  },
                  "allow_rebase_merge": {
                    "type": "boolean"
                  },
                  "license": {
                    "type": "object",
                    "properties": {
                      "key": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true
                      },
                      "spdx_id": {
                        "type": "string",
                        "nullable": true
                      },
                      "node_id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "key",
                      "name",
                      "url",
                      "spdx_id",
                      "node_id"
                    ],
                    "nullable": true
                  },
                  "pushed_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "size": {
                    "type": "integer"
                  },
                  "ssh_url": {
                    "type": "string"
                  },
                  "stargazers_count": {
                    "type": "integer"
                  },
                  "svn_url": {
                    "type": "string",
                    "format": "uri"
                  },
                  "topics": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "watchers": {
                    "type": "integer"
                  },
                  "watchers_count": {
                    "type": "integer"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time"
                  }
                },
                "required": [
                  "archive_url",
                  "assignees_url",
                  "blobs_url",
                  "branches_url",
                  "collaborators_url",
                  "comments_url",
                  "commits_url",
                  "compare_url",
                  "contents_url",
                  "contributors_url",
                  "deployments_url",
                  "description",
                  "downloads_url",
                  "events_url",
                  "fork",
                  "forks_url",
                  "full_name",
                  "git_commits_url",
                  "git_refs_url",
                  "git_tags_url",
                  "hooks_url",
                  "html_url",
                  "id",
                  "node_id",
                  "issue_comment_url",
                  "issue_events_url",
                  "issues_url",
                  "keys_url",
                  "labels_url",
                  "languages_url",
                  "merges_url",
                  "milestones_url",
                  "name",
                  "notifications_url",
                  "owner",
                  "private",
                  "pulls_url",
                  "releases_url",
                  "stargazers_url",
                  "statuses_url",
                  "subscribers_url",
                  "subscription_url",
                  "tags_url",
                  "teams_url",
                  "trees_url",
                  "url",
                  "clone_url",
                  "default_branch",
                  "forks",
                  "forks_count",
                  "git_url",
                  "has_downloads",
                  "has_issues",
                  "has_projects",
                  "has_wiki",
                  "has_pages",
                  "homepage",
                  "language",
                  "archived",
                  "disabled",
                  "mirror_url",
                  "open_issues",
                  "open_issues_count",
                  "license",
                  "pushed_at",
                  "size",
                  "ssh_url",
                  "stargazers_count",
                  "svn_url",
                  "watchers",
                  "watchers_count",
                  "created_at",
                  "updated_at"
                ]
              },
              "sha": {
                "type": "string"
              },
              "user": {
                "type": "object",
                "properties": {
                  "avatar_url": {
                    "type": "string",
                    "format": "uri"
                  },
                  "events_url": {
                    "type": "string"
                  },
                  "followers_url": {
                    "type": "string",
                    "format": "uri"
                  },
                  "following_url": {
                    "type": "string"
                  },
                  "gists_url": {
                    "type": "string"
                  },
                  "gravatar_id": {
                    "type": "string",
                    "nullable": true
                  },
                  "html_url": {
                    "type": "string",
                    "format": "uri"
                  },
                  "id": {
                    "type": "integer"
                  },
                  "node_id": {
                    "type": "string"
                  },
                  "login": {
                    "type": "string"
                  },
                  "organizations_url": {
                    "type": "string",
                    "format": "uri"
                  },
                  "received_events_url": {
                    "type": "string",
                    "format": "uri"
                  },
                  "repos_url": {
                    "type": "string",
                    "format": "uri"
                  },
                  "site_admin": {
                    "type": "boolean"
                  },
                  "starred_url": {
                    "type": "string"
                  },
                  "subscriptions_url": {
                    "type": "string",
                    "format": "uri"
                  },
                  "type": {
                    "type": "string"
                  },
                  "url": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "required": [
                  "avatar_url",
                  "events_url",
                  "followers_url",
                  "following_url",
                  "gists_url",
                  "gravatar_id",
                  "html_url",
                  "id",
                  "node_id",
                  "login",
                  "organizations_url",
                  "received_events_url",
                  "repos_url",
                  "site_admin",
                  "starred_url",
                  "subscriptions_url",
                  "type",
                  "url"
                ]
              }
            },
            "required": [
              "label",
              "ref",
              "repo",
              "sha",
              "user"
            ]
          },
          "base": {
            "type": "object",
            "properties": {
              "label": {
                "type": "string"
              },
              "ref": {
                "type": "string"
              },
              "repo": {
                "type": "object",
                "properties": {
                  "archive_url": {
                    "type": "string"
                  },
                  "assignees_url": {
                    "type": "string"
                  },
                  "blobs_url": {
                    "type": "string"
                  },
                  "branches_url": {
                    "type": "string"
                  },
                  "collaborators_url": {
                    "type": "string"
                  },
                  "comments_url": {
                    "type": "string"
                  },
                  "commits_url": {
                    "type": "string"
                  },
                  "compare_url": {
                    "type": "string"
                  },
                  "contents_url": {
                    "type": "string"
                  },
                  "contributors_url": {
                    "type": "string",
                    "format": "uri"
                  },
                  "deployments_url": {
                    "type": "string",
                    "format": "uri"
                  },
                  "description": {
                    "type": "string",
                    "nullable": true
                  },
                  "downloads_url": {
                    "type": "string",
                    "format": "uri"
                  },
                  "events_url": {
                    "type": "string",
                    "format": "uri"
                  },
                  "fork": {
                    "type": "boolean"
                  },
                  "forks_url": {
                    "type": "string",
                    "format": "uri"
                  },
                  "full_name": {
                    "type": "string"
                  },
                  "git_commits_url": {
                    "type": "string"
                  },
                  "git_refs_url": {
                    "type": "string"
                  },
                  "git_tags_url": {
                    "type": "string"
                  },
                  "hooks_url": {
                    "type": "string",
                    "format": "uri"
                  },
                  "html_url": {
                    "type": "string",
                    "format": "uri"
                  },
                  "id": {
                    "type": "integer"
                  },
                  "node_id": {
                    "type": "string"
                  },
                  "issue_comment_url": {
                    "type": "string"
                  },
                  "issue_events_url": {
                    "type": "string"
                  },
                  "issues_url": {
                    "type": "string"
                  },
                  "keys_url": {
                    "type": "string"
                  },
                  "labels_url": {
                    "type": "string"
                  },
                  "languages_url": {
                    "type": "string",
                    "format": "uri"
                  },
                  "merges_url": {
                    "type": "string",
                    "format": "uri"
                  },
                  "milestones_url": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "notifications_url": {
                    "type": "string"
                  },
                  "owner": {
                    "type": "object",
                    "properties": {
                      "avatar_url": {
                        "type": "string",
                        "format": "uri"
                      },
                      "events_url": {
                        "type": "string"
                      },
                      "followers_url": {
                        "type": "string",
                        "format": "uri"
                      },
                      "following_url": {
                        "type": "string"
                      },
                      "gists_url": {
                        "type": "string"
                      },
                      "gravatar_id": {
                        "type": "string",
                        "nullable": true
                      },
                      "html_url": {
                        "type": "string",
                        "format": "uri"
                      },
                      "id": {
                        "type": "integer"
                      },
                      "node_id": {
                        "type": "string"
                      },
                      "login": {
                        "type": "string"
                      },
                      "organizations_url": {
                        "type": "string",
                        "format": "uri"
                      },
                      "received_events_url": {
                        "type": "string",
                        "format": "uri"
                      },
                      "repos_url": {
                        "type": "string",
                        "format": "uri"
                      },
                      "site_admin": {
                        "type": "boolean"
                      },
                      "starred_url": {
                        "type": "string"
                      },
                      "subscriptions_url": {
                        "type": "string",
                        "format": "uri"
                      },
                      "type": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string",
                        "format": "uri"
                      }
                    },
                    "required": [
                      "avatar_url",
                      "events_url",
                      "followers_url",
                      "following_url",
                      "gists_url",
                      "gravatar_id",
                      "html_url",
                      "id",
                      "node_id",
                      "login",
                      "organizations_url",
                      "received_events_url",
                      "repos_url",
                      "site_admin",
                      "starred_url",
                      "subscriptions_url",
                      "type",
                      "url"
                    ]
                  },
                  "private": {
                    "type": "boolean"
                  },
                  "pulls_url": {
                    "type": "string"
                  },
                  "releases_url": {
                    "type": "string"
                  },
                  "stargazers_url": {
                    "type": "string",
                    "format": "uri"
                  },
                  "statuses_url": {
                    "type": "string"
                  },
                  "subscribers_url": {
                    "type": "string",
                    "format": "uri"
                  },
                  "subscription_url": {
                    "type": "string",
                    "format": "uri"
                  },
                  "tags_url": {
                    "type": "string",
                    "format": "uri"
                  },
                  "teams_url": {
                    "type": "string",
                    "format": "uri"
                  },
                  "trees_url": {
                    "type": "string"
                  },
                  "url": {
                    "type": "string",
                    "format": "uri"
                  },
                  "clone_url": {
                    "type": "string"
                  },
                  "default_branch": {
                    "type": "string"
                  },
                  "forks": {
                    "type": "integer"
                  },
                  "forks_count": {
                    "type": "integer"
                  },
                  "git_url": {
                    "type": "string"
                  },
                  "has_downloads": {
                    "type": "boolean"
                  },
                  "has_issues": {
                    "type": "boolean"
                  },
                  "has_projects": {
                    "type": "boolean"
                  },
                  "has_wiki": {
                    "type": "boolean"
                  },
                  "has_pages": {
                    "type": "boolean"
                  },
                  "homepage": {
                    "type": "string",
                    "format": "uri",
                    "nullable": true
                  },
                  "language": {
                    "type": "string",
                    "nullable": true
                  },
                  "master_branch": {
                    "type": "string"
                  },
                  "archived": {
                    "type": "boolean"
                  },
                  "disabled": {
                    "type": "boolean"
                  },
                  "mirror_url": {
                    "type": "string",
                    "format": "uri",
                    "nullable": true
                  },
                  "open_issues": {
                    "type": "integer"
                  },
                  "open_issues_count": {
                    "type": "integer"
                  },
                  "permissions": {
                    "type": "object",
                    "properties": {
                      "admin": {
                        "type": "boolean"
                      },
                      "pull": {
                        "type": "boolean"
                      },
                      "push": {
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "admin",
                      "pull",
                      "push"
                    ]
                  },
                  "temp_clone_token": {
                    "type": "string"
                  },
                  "allow_merge_commit": {
                    "type": "boolean"
                  },
                  "allow_squash_merge": {
                    "type": "boolean"
                  },
                  "allow_rebase_merge": {
                    "type": "boolean"
                  },
                  "license": {
                    "nullable": true,
                    "allOf": [{
                      "$ref": "#/components/schemas/license-simple"
                    }]
                  },
                  "pushed_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "size": {
                    "type": "integer"
                  },
                  "ssh_url": {
                    "type": "string"
                  },
                  "stargazers_count": {
                    "type": "integer"
                  },
                  "svn_url": {
                    "type": "string",
                    "format": "uri"
                  },
                  "topics": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "watchers": {
                    "type": "integer"
                  },
                  "watchers_count": {
                    "type": "integer"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time"
                  }
                },
                "required": [
                  "archive_url",
                  "assignees_url",
                  "blobs_url",
                  "branches_url",
                  "collaborators_url",
                  "comments_url",
                  "commits_url",
                  "compare_url",
                  "contents_url",
                  "contributors_url",
                  "deployments_url",
                  "description",
                  "downloads_url",
                  "events_url",
                  "fork",
                  "forks_url",
                  "full_name",
                  "git_commits_url",
                  "git_refs_url",
                  "git_tags_url",
                  "hooks_url",
                  "html_url",
                  "id",
                  "node_id",
                  "issue_comment_url",
                  "issue_events_url",
                  "issues_url",
                  "keys_url",
                  "labels_url",
                  "languages_url",
                  "merges_url",
                  "milestones_url",
                  "name",
                  "notifications_url",
                  "owner",
                  "private",
                  "pulls_url",
                  "releases_url",
                  "stargazers_url",
                  "statuses_url",
                  "subscribers_url",
                  "subscription_url",
                  "tags_url",
                  "teams_url",
                  "trees_url",
                  "url",
                  "clone_url",
                  "default_branch",
                  "forks",
                  "forks_count",
                  "git_url",
                  "has_downloads",
                  "has_issues",
                  "has_projects",
                  "has_wiki",
                  "has_pages",
                  "homepage",
                  "language",
                  "archived",
                  "disabled",
                  "mirror_url",
                  "open_issues",
                  "open_issues_count",
                  "license",
                  "pushed_at",
                  "size",
                  "ssh_url",
                  "stargazers_count",
                  "svn_url",
                  "watchers",
                  "watchers_count",
                  "created_at",
                  "updated_at"
                ]
              },
              "sha": {
                "type": "string"
              },
              "user": {
                "type": "object",
                "properties": {
                  "avatar_url": {
                    "type": "string",
                    "format": "uri"
                  },
                  "events_url": {
                    "type": "string"
                  },
                  "followers_url": {
                    "type": "string",
                    "format": "uri"
                  },
                  "following_url": {
                    "type": "string"
                  },
                  "gists_url": {
                    "type": "string"
                  },
                  "gravatar_id": {
                    "type": "string",
                    "nullable": true
                  },
                  "html_url": {
                    "type": "string",
                    "format": "uri"
                  },
                  "id": {
                    "type": "integer"
                  },
                  "node_id": {
                    "type": "string"
                  },
                  "login": {
                    "type": "string"
                  },
                  "organizations_url": {
                    "type": "string",
                    "format": "uri"
                  },
                  "received_events_url": {
                    "type": "string",
                    "format": "uri"
                  },
                  "repos_url": {
                    "type": "string",
                    "format": "uri"
                  },
                  "site_admin": {
                    "type": "boolean"
                  },
                  "starred_url": {
                    "type": "string"
                  },
                  "subscriptions_url": {
                    "type": "string",
                    "format": "uri"
                  },
                  "type": {
                    "type": "string"
                  },
                  "url": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "required": [
                  "avatar_url",
                  "events_url",
                  "followers_url",
                  "following_url",
                  "gists_url",
                  "gravatar_id",
                  "html_url",
                  "id",
                  "node_id",
                  "login",
                  "organizations_url",
                  "received_events_url",
                  "repos_url",
                  "site_admin",
                  "starred_url",
                  "subscriptions_url",
                  "type",
                  "url"
                ]
              }
            },
            "required": [
              "label",
              "ref",
              "repo",
              "sha",
              "user"
            ]
          },
          "_links": {
            "type": "object",
            "properties": {
              "comments": {
                "$ref": "#/components/schemas/link"
              },
              "commits": {
                "$ref": "#/components/schemas/link"
              },
              "statuses": {
                "$ref": "#/components/schemas/link"
              },
              "html": {
                "$ref": "#/components/schemas/link"
              },
              "issue": {
                "$ref": "#/components/schemas/link"
              },
              "review_comments": {
                "$ref": "#/components/schemas/link"
              },
              "review_comment": {
                "$ref": "#/components/schemas/link"
              },
              "self": {
                "$ref": "#/components/schemas/link"
              }
            },
            "required": [
              "comments",
              "commits",
              "statuses",
              "html",
              "issue",
              "review_comments",
              "review_comment",
              "self"
            ]
          },
          "author_association": {
            "$ref": "#/components/schemas/author_association"
          },
          "auto_merge": {
            "$ref": "#/components/schemas/auto_merge"
          },
          "draft": {
            "description": "Indicates whether or not the pull request is a draft.",
            "example": false,
            "type": "boolean"
          },
          "merged": {
            "type": "boolean"
          },
          "mergeable": {
            "type": "boolean",
            "example": true,
            "nullable": true
          },
          "rebaseable": {
            "type": "boolean",
            "example": true,
            "nullable": true
          },
          "mergeable_state": {
            "type": "string",
            "example": "clean"
          },
          "merged_by": {
            "nullable": true,
            "allOf": [{
              "$ref": "#/components/schemas/simple-user"
            }]
          },
          "comments": {
            "type": "integer",
            "example": 10
          },
          "review_comments": {
            "type": "integer",
            "example": 0
          },
          "maintainer_can_modify": {
            "description": "Indicates whether maintainers can modify the pull request.",
            "example": true,
            "type": "boolean"
          },
          "commits": {
            "type": "integer",
            "example": 3
          },
          "additions": {
            "type": "integer",
            "example": 100
          },
          "deletions": {
            "type": "integer",
            "example": 3
          },
          "changed_files": {
            "type": "integer",
            "example": 5
          }
        },
        "required": [
          "_links",
          "assignee",
          "labels",
          "base",
          "body",
          "closed_at",
          "comments_url",
          "commits_url",
          "created_at",
          "diff_url",
          "head",
          "html_url",
          "id",
          "node_id",
          "issue_url",
          "merge_commit_sha",
          "merged_at",
          "milestone",
          "number",
          "patch_url",
          "review_comment_url",
          "review_comments_url",
          "statuses_url",
          "state",
          "locked",
          "title",
          "updated_at",
          "url",
          "user",
          "author_association",
          "auto_merge",
          "additions",
          "changed_files",
          "comments",
          "commits",
          "deletions",
          "mergeable",
          "mergeable_state",
          "merged",
          "maintainer_can_modify",
          "merged_by",
          "review_comments"
        ]
      },
      "pull-request-review-comment": {
        "title": "Pull Request Review Comment",
        "description": "Pull Request Review Comments are comments on a portion of the Pull Request's diff.",
        "type": "object",
        "properties": {
          "url": {
            "description": "URL for the pull request review comment",
            "example": "https://api.github.com/repos/octocat/Hello-World/pulls/comments/1",
            "type": "string"
          },
          "pull_request_review_id": {
            "description": "The ID of the pull request review to which the comment belongs.",
            "example": 42,
            "type": "integer",
            "nullable": true
          },
          "id": {
            "description": "The ID of the pull request review comment.",
            "example": 1,
            "type": "integer"
          },
          "node_id": {
            "description": "The node ID of the pull request review comment.",
            "type": "string",
            "example": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEw"
          },
          "diff_hunk": {
            "description": "The diff of the line that the comment refers to.",
            "type": "string",
            "example": "@@ -16,33 +16,40 @@ public class Connection : IConnection..."
          },
          "path": {
            "description": "The relative path of the file to which the comment applies.",
            "example": "config/database.yaml",
            "type": "string"
          },
          "position": {
            "description": "The line index in the diff to which the comment applies.",
            "example": 1,
            "type": "integer"
          },
          "original_position": {
            "description": "The index of the original line in the diff to which the comment applies.",
            "example": 4,
            "type": "integer"
          },
          "commit_id": {
            "description": "The SHA of the commit to which the comment applies.",
            "example": "6dcb09b5b57875f334f61aebed695e2e4193db5e",
            "type": "string"
          },
          "original_commit_id": {
            "description": "The SHA of the original commit to which the comment applies.",
            "example": "9c48853fa3dc5c1c3d6f1f1cd1f2743e72652840",
            "type": "string"
          },
          "in_reply_to_id": {
            "description": "The comment ID to reply to.",
            "example": 8,
            "type": "integer"
          },
          "user": {
            "$ref": "#/components/schemas/simple-user"
          },
          "body": {
            "description": "The text of the comment.",
            "example": "We should probably include a check for null values here.",
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2011-04-14T16:00:49Z"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2011-04-14T16:00:49Z"
          },
          "html_url": {
            "description": "HTML URL for the pull request review comment.",
            "type": "string",
            "format": "uri",
            "example": "https://github.com/octocat/Hello-World/pull/1#discussion-diff-1"
          },
          "pull_request_url": {
            "description": "URL for the pull request that the review comment belongs to.",
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World/pulls/1"
          },
          "author_association": {
            "$ref": "#/components/schemas/author_association"
          },
          "_links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.github.com/repos/octocat/Hello-World/pulls/comments/1"
                  }
                },
                "required": [
                  "href"
                ]
              },
              "html": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://github.com/octocat/Hello-World/pull/1#discussion-diff-1"
                  }
                },
                "required": [
                  "href"
                ]
              },
              "pull_request": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.github.com/repos/octocat/Hello-World/pulls/1"
                  }
                },
                "required": [
                  "href"
                ]
              }
            },
            "required": [
              "self",
              "html",
              "pull_request"
            ]
          },
          "start_line": {
            "type": "integer",
            "description": "The first line of the range for a multi-line comment.",
            "example": 2,
            "nullable": true
          },
          "original_start_line": {
            "type": "integer",
            "description": "The first line of the range for a multi-line comment.",
            "example": 2,
            "nullable": true
          },
          "start_side": {
            "type": "string",
            "description": "The side of the first line of the range for a multi-line comment.",
            "enum": [
              "LEFT",
              "RIGHT"
            ],
            "default": "RIGHT",
            "nullable": true
          },
          "line": {
            "description": "The line of the blob to which the comment applies. The last line of the range for a multi-line comment",
            "example": 2,
            "type": "integer"
          },
          "original_line": {
            "description": "The line of the blob to which the comment applies. The last line of the range for a multi-line comment",
            "example": 2,
            "type": "integer"
          },
          "side": {
            "description": "The side of the diff to which the comment applies. The side of the last line of the range for a multi-line comment",
            "enum": [
              "LEFT",
              "RIGHT"
            ],
            "default": "RIGHT",
            "type": "string"
          },
          "reactions": {
            "$ref": "#/components/schemas/reaction-rollup"
          },
          "body_html": {
            "type": "string",
            "example": "\"<p>comment body</p>\""
          },
          "body_text": {
            "type": "string",
            "example": "\"comment body\""
          }
        },
        "required": [
          "url",
          "id",
          "node_id",
          "pull_request_review_id",
          "diff_hunk",
          "path",
          "position",
          "original_position",
          "commit_id",
          "original_commit_id",
          "user",
          "body",
          "created_at",
          "updated_at",
          "html_url",
          "pull_request_url",
          "author_association",
          "_links"
        ]
      },
      "pull-request-merge-result": {
        "title": "Pull Request Merge Result",
        "description": "Pull Request Merge Result",
        "type": "object",
        "properties": {
          "sha": {
            "type": "string"
          },
          "merged": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          }
        },
        "required": [
          "merged",
          "message",
          "sha"
        ]
      },
      "pull-request-review-request": {
        "title": "Pull Request Review Request",
        "description": "Pull Request Review Request",
        "type": "object",
        "properties": {
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/simple-user"
            }
          },
          "teams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/team-simple"
            }
          }
        },
        "required": [
          "users",
          "teams"
        ]
      },
      "pull-request-review": {
        "title": "Pull Request Review",
        "description": "Pull Request Reviews are reviews on pull requests.",
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the review",
            "example": 42,
            "type": "integer"
          },
          "node_id": {
            "type": "string",
            "example": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3ODA="
          },
          "user": {
            "nullable": true,
            "allOf": [{
              "$ref": "#/components/schemas/simple-user"
            }]
          },
          "body": {
            "description": "The text of the review.",
            "example": "This looks great.",
            "type": "string"
          },
          "state": {
            "type": "string",
            "example": "CHANGES_REQUESTED"
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80"
          },
          "pull_request_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World/pulls/12"
          },
          "_links": {
            "type": "object",
            "properties": {
              "html": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string"
                  }
                },
                "required": [
                  "href"
                ]
              },
              "pull_request": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string"
                  }
                },
                "required": [
                  "href"
                ]
              }
            },
            "required": [
              "html",
              "pull_request"
            ]
          },
          "submitted_at": {
            "type": "string",
            "format": "date-time"
          },
          "commit_id": {
            "description": "A commit SHA for the review.",
            "example": "54bb654c9e6025347f57900a4a5c2313a96b8035",
            "type": "string"
          },
          "body_html": {
            "type": "string"
          },
          "body_text": {
            "type": "string"
          },
          "author_association": {
            "$ref": "#/components/schemas/author_association"
          }
        },
        "required": [
          "id",
          "node_id",
          "user",
          "body",
          "state",
          "commit_id",
          "html_url",
          "pull_request_url",
          "_links",
          "author_association"
        ]
      },
      "review-comment": {
        "title": "Legacy Review Comment",
        "description": "Legacy Review Comment",
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World/pulls/comments/1"
          },
          "pull_request_review_id": {
            "type": "integer",
            "example": 42,
            "nullable": true
          },
          "id": {
            "type": "integer",
            "example": 10
          },
          "node_id": {
            "type": "string",
            "example": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEw"
          },
          "diff_hunk": {
            "type": "string",
            "example": "@@ -16,33 +16,40 @@ public class Connection : IConnection..."
          },
          "path": {
            "type": "string",
            "example": "file1.txt"
          },
          "position": {
            "type": "integer",
            "example": 1,
            "nullable": true
          },
          "original_position": {
            "type": "integer",
            "example": 4
          },
          "commit_id": {
            "type": "string",
            "example": "6dcb09b5b57875f334f61aebed695e2e4193db5e"
          },
          "original_commit_id": {
            "type": "string",
            "example": "9c48853fa3dc5c1c3d6f1f1cd1f2743e72652840"
          },
          "in_reply_to_id": {
            "type": "integer",
            "example": 8
          },
          "user": {
            "nullable": true,
            "allOf": [{
              "$ref": "#/components/schemas/simple-user"
            }]
          },
          "body": {
            "type": "string",
            "example": "Great stuff"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2011-04-14T16:00:49Z"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2011-04-14T16:00:49Z"
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/octocat/Hello-World/pull/1#discussion-diff-1"
          },
          "pull_request_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World/pulls/1"
          },
          "author_association": {
            "$ref": "#/components/schemas/author_association"
          },
          "_links": {
            "type": "object",
            "properties": {
              "self": {
                "$ref": "#/components/schemas/link"
              },
              "html": {
                "$ref": "#/components/schemas/link"
              },
              "pull_request": {
                "$ref": "#/components/schemas/link"
              }
            },
            "required": [
              "self",
              "html",
              "pull_request"
            ]
          },
          "body_text": {
            "type": "string"
          },
          "body_html": {
            "type": "string"
          },
          "side": {
            "description": "The side of the first line of the range for a multi-line comment.",
            "enum": [
              "LEFT",
              "RIGHT"
            ],
            "default": "RIGHT",
            "type": "string"
          },
          "start_side": {
            "type": "string",
            "description": "The side of the first line of the range for a multi-line comment.",
            "enum": [
              "LEFT",
              "RIGHT"
            ],
            "default": "RIGHT",
            "nullable": true
          },
          "line": {
            "description": "The line of the blob to which the comment applies. The last line of the range for a multi-line comment",
            "example": 2,
            "type": "integer"
          },
          "original_line": {
            "description": "The original line of the blob to which the comment applies. The last line of the range for a multi-line comment",
            "example": 2,
            "type": "integer"
          },
          "start_line": {
            "description": "The first line of the range for a multi-line comment.",
            "example": 2,
            "type": "integer",
            "nullable": true
          },
          "original_start_line": {
            "description": "The original first line of the range for a multi-line comment.",
            "example": 2,
            "type": "integer",
            "nullable": true
          }
        },
        "required": [
          "id",
          "node_id",
          "url",
          "body",
          "diff_hunk",
          "path",
          "position",
          "original_position",
          "commit_id",
          "original_commit_id",
          "user",
          "pull_request_review_id",
          "html_url",
          "pull_request_url",
          "_links",
          "author_association",
          "created_at",
          "updated_at"
        ]
      },
      "release-asset": {
        "title": "Release Asset",
        "description": "Data related to a release.",
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "format": "uri"
          },
          "browser_download_url": {
            "type": "string",
            "format": "uri"
          },
          "id": {
            "type": "integer"
          },
          "node_id": {
            "type": "string"
          },
          "name": {
            "description": "The file name of the asset.",
            "type": "string",
            "example": "Team Environment"
          },
          "label": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "description": "State of the release asset.",
            "type": "string",
            "enum": [
              "uploaded",
              "open"
            ]
          },
          "content_type": {
            "type": "string"
          },
          "size": {
            "type": "integer"
          },
          "download_count": {
            "type": "integer"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "uploader": {
            "nullable": true,
            "allOf": [{
              "$ref": "#/components/schemas/simple-user"
            }]
          }
        },
        "required": [
          "id",
          "name",
          "content_type",
          "size",
          "state",
          "url",
          "node_id",
          "download_count",
          "label",
          "uploader",
          "browser_download_url",
          "created_at",
          "updated_at"
        ]
      },
      "release": {
        "title": "Release",
        "description": "A release.",
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "format": "uri"
          },
          "html_url": {
            "type": "string",
            "format": "uri"
          },
          "assets_url": {
            "type": "string",
            "format": "uri"
          },
          "upload_url": {
            "type": "string"
          },
          "tarball_url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "zipball_url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "id": {
            "type": "integer"
          },
          "node_id": {
            "type": "string"
          },
          "tag_name": {
            "description": "The name of the tag.",
            "example": "v1.0.0",
            "type": "string"
          },
          "target_commitish": {
            "description": "Specifies the commitish value that determines where the Git tag is created from.",
            "example": "master",
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "body": {
            "type": "string",
            "nullable": true
          },
          "draft": {
            "description": "true to create a draft (unpublished) release, false to create a published one.",
            "example": false,
            "type": "boolean"
          },
          "prerelease": {
            "description": "Whether to identify the release as a prerelease or a full release.",
            "example": false,
            "type": "boolean"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "published_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "author": {
            "$ref": "#/components/schemas/simple-user"
          },
          "assets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/release-asset"
            }
          },
          "body_html": {
            "type": "string"
          },
          "body_text": {
            "type": "string"
          }
        },
        "required": [
          "assets_url",
          "upload_url",
          "tarball_url",
          "zipball_url",
          "created_at",
          "published_at",
          "draft",
          "id",
          "node_id",
          "author",
          "html_url",
          "name",
          "prerelease",
          "tag_name",
          "target_commitish",
          "assets",
          "url"
        ]
      },
      "secret-scanning-alert-state": {
        "description": "Sets the state of the secret scanning alert. Can be either `open` or `resolved`. You must provide `resolution` when you set the state to `resolved`.",
        "type": "string",
        "enum": [
          "open",
          "resolved"
        ]
      },
      "secret-scanning-alert-resolution": {
        "type": "string",
        "description": "**Required when the `state` is `resolved`.** The reason for resolving the alert. Can be one of `false_positive`, `wont_fix`, `revoked`, or `used_in_tests`.",
        "nullable": true,
        "oneOf": [{
            "enum": [
              "false_positive",
              "wont_fix",
              "revoked",
              "used_in_tests"
            ]
          },
          {
            "enum": [
              null
            ]
          }
        ]
      },
      "secret-scanning-alert": {
        "type": "object",
        "properties": {
          "number": {
            "$ref": "#/components/schemas/alert-number"
          },
          "created_at": {
            "$ref": "#/components/schemas/alert-created-at"
          },
          "url": {
            "$ref": "#/components/schemas/alert-url"
          },
          "html_url": {
            "$ref": "#/components/schemas/alert-html-url"
          },
          "state": {
            "$ref": "#/components/schemas/secret-scanning-alert-state"
          },
          "resolution": {
            "$ref": "#/components/schemas/secret-scanning-alert-resolution"
          },
          "resolved_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time that the alert was resolved in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.",
            "nullable": true
          },
          "resolved_by": {
            "$ref": "#/components/schemas/simple-user"
          },
          "secret_type": {
            "type": "string",
            "description": "The type of secret that secret scanning detected."
          },
          "secret": {
            "type": "string",
            "description": "The secret that was detected."
          }
        }
      },
      "stargazer": {
        "title": "Stargazer",
        "description": "Stargazer",
        "type": "object",
        "properties": {
          "starred_at": {
            "type": "string",
            "format": "date-time"
          },
          "user": {
            "nullable": true,
            "allOf": [{
              "$ref": "#/components/schemas/simple-user"
            }]
          }
        },
        "required": [
          "starred_at",
          "user"
        ]
      },
      "code-frequency-stat": {
        "title": "Code Frequency Stat",
        "description": "Code Frequency Stat",
        "type": "array",
        "items": {
          "type": "integer"
        }
      },
      "commit-activity": {
        "title": "Commit Activity",
        "description": "Commit Activity",
        "type": "object",
        "properties": {
          "days": {
            "type": "array",
            "example": [
              0,
              3,
              26,
              20,
              39,
              1,
              0
            ],
            "items": {
              "type": "integer"
            }
          },
          "total": {
            "type": "integer",
            "example": 89
          },
          "week": {
            "type": "integer",
            "example": 1336280400
          }
        },
        "required": [
          "days",
          "total",
          "week"
        ]
      },
      "contributor-activity": {
        "title": "Contributor Activity",
        "description": "Contributor Activity",
        "type": "object",
        "properties": {
          "author": {
            "nullable": true,
            "allOf": [{
              "$ref": "#/components/schemas/simple-user"
            }]
          },
          "total": {
            "type": "integer",
            "example": 135
          },
          "weeks": {
            "type": "array",
            "example": [{
              "w": "1367712000",
              "a": 6898,
              "d": 77,
              "c": 10
            }],
            "items": {
              "type": "object",
              "properties": {
                "w": {
                  "type": "string"
                },
                "a": {
                  "type": "integer"
                },
                "d": {
                  "type": "integer"
                },
                "c": {
                  "type": "integer"
                }
              }
            }
          }
        },
        "required": [
          "author",
          "total",
          "weeks"
        ]
      },
      "participation-stats": {
        "title": "Participation Stats",
        "type": "object",
        "properties": {
          "all": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "owner": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          }
        },
        "required": [
          "all",
          "owner"
        ]
      },
      "repository-subscription": {
        "title": "Repository Invitation",
        "description": "Repository invitations let you manage who you collaborate with.",
        "type": "object",
        "properties": {
          "subscribed": {
            "description": "Determines if notifications should be received from this repository.",
            "type": "boolean",
            "example": true
          },
          "ignored": {
            "description": "Determines if all notifications should be blocked from this repository.",
            "type": "boolean"
          },
          "reason": {
            "type": "string",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2012-10-06T21:34:12Z"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/example/subscription"
          },
          "repository_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/example"
          }
        },
        "required": [
          "created_at",
          "ignored",
          "reason",
          "subscribed",
          "url",
          "repository_url"
        ]
      },
      "tag": {
        "title": "Tag",
        "description": "Tag",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "v0.1"
          },
          "commit": {
            "type": "object",
            "properties": {
              "sha": {
                "type": "string"
              },
              "url": {
                "type": "string",
                "format": "uri"
              }
            },
            "required": [
              "sha",
              "url"
            ]
          },
          "zipball_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/octocat/Hello-World/zipball/v0.1"
          },
          "tarball_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/octocat/Hello-World/tarball/v0.1"
          },
          "node_id": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "node_id",
          "commit",
          "zipball_url",
          "tarball_url"
        ]
      },
      "topic": {
        "title": "Topic",
        "description": "A topic aggregates entities that are related to a subject.",
        "type": "object",
        "properties": {
          "names": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "names"
        ]
      },
      "traffic": {
        "title": "Traffic",
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "uniques": {
            "type": "integer"
          },
          "count": {
            "type": "integer"
          }
        },
        "required": [
          "timestamp",
          "uniques",
          "count"
        ]
      },
      "clone-traffic": {
        "title": "Clone Traffic",
        "description": "Clone Traffic",
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "example": 173
          },
          "uniques": {
            "type": "integer",
            "example": 128
          },
          "clones": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/traffic"
            }
          }
        },
        "required": [
          "uniques",
          "count",
          "clones"
        ]
      },
      "content-traffic": {
        "title": "Content Traffic",
        "description": "Content Traffic",
        "type": "object",
        "properties": {
          "path": {
            "type": "string",
            "example": "/github/hubot"
          },
          "title": {
            "type": "string",
            "example": "github/hubot: A customizable life embetterment robot."
          },
          "count": {
            "type": "integer",
            "example": 3542
          },
          "uniques": {
            "type": "integer",
            "example": 2225
          }
        },
        "required": [
          "path",
          "title",
          "uniques",
          "count"
        ]
      },
      "referrer-traffic": {
        "title": "Referrer Traffic",
        "description": "Referrer Traffic",
        "type": "object",
        "properties": {
          "referrer": {
            "type": "string",
            "example": "Google"
          },
          "count": {
            "type": "integer",
            "example": 4
          },
          "uniques": {
            "type": "integer",
            "example": 3
          }
        },
        "required": [
          "referrer",
          "uniques",
          "count"
        ]
      },
      "view-traffic": {
        "title": "View Traffic",
        "description": "View Traffic",
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "example": 14850
          },
          "uniques": {
            "type": "integer",
            "example": 3782
          },
          "views": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/traffic"
            }
          }
        },
        "required": [
          "uniques",
          "count",
          "views"
        ]
      },
      "scim-group-list-enterprise": {
        "type": "object",
        "properties": {
          "schemas": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "totalResults": {
            "type": "number"
          },
          "itemsPerPage": {
            "type": "number"
          },
          "startIndex": {
            "type": "number"
          },
          "Resources": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "schemas": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "id": {
                  "type": "string"
                },
                "externalId": {
                  "type": "string",
                  "nullable": true
                },
                "displayName": {
                  "type": "string"
                },
                "members": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "value": {
                        "type": "string"
                      },
                      "ref": {
                        "type": "string"
                      },
                      "display": {
                        "type": "string"
                      }
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "properties": {
                    "resourceType": {
                      "type": "string"
                    },
                    "created": {
                      "type": "string"
                    },
                    "lastModified": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string"
                    }
                  }
                }
              },
              "required": [
                "schemas",
                "id"
              ]
            }
          }
        },
        "required": [
          "schemas",
          "totalResults",
          "itemsPerPage",
          "startIndex",
          "Resources"
        ]
      },
      "scim-enterprise-group": {
        "type": "object",
        "properties": {
          "schemas": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "type": "string"
          },
          "externalId": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string"
          },
          "members": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string"
                },
                "ref": {
                  "type": "string"
                },
                "display": {
                  "type": "string"
                }
              }
            }
          },
          "meta": {
            "type": "object",
            "properties": {
              "resourceType": {
                "type": "string"
              },
              "created": {
                "type": "string"
              },
              "lastModified": {
                "type": "string"
              },
              "location": {
                "type": "string"
              }
            }
          }
        },
        "required": [
          "schemas",
          "id"
        ]
      },
      "scim-user-list-enterprise": {
        "type": "object",
        "properties": {
          "schemas": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "totalResults": {
            "type": "number"
          },
          "itemsPerPage": {
            "type": "number"
          },
          "startIndex": {
            "type": "number"
          },
          "Resources": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "schemas": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "id": {
                  "type": "string"
                },
                "externalId": {
                  "type": "string"
                },
                "userName": {
                  "type": "string"
                },
                "name": {
                  "type": "object",
                  "properties": {
                    "givenName": {
                      "type": "string"
                    },
                    "familyName": {
                      "type": "string"
                    }
                  }
                },
                "emails": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "value": {
                        "type": "string"
                      },
                      "primary": {
                        "type": "boolean"
                      },
                      "type": {
                        "type": "string"
                      }
                    }
                  }
                },
                "groups": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                "active": {
                  "type": "boolean"
                },
                "meta": {
                  "type": "object",
                  "properties": {
                    "resourceType": {
                      "type": "string"
                    },
                    "created": {
                      "type": "string"
                    },
                    "lastModified": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string"
                    }
                  }
                }
              },
              "required": [
                "schemas",
                "id"
              ]
            }
          }
        },
        "required": [
          "schemas",
          "totalResults",
          "itemsPerPage",
          "startIndex",
          "Resources"
        ]
      },
      "scim-enterprise-user": {
        "type": "object",
        "properties": {
          "schemas": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "type": "string"
          },
          "externalId": {
            "type": "string"
          },
          "userName": {
            "type": "string"
          },
          "name": {
            "type": "object",
            "properties": {
              "givenName": {
                "type": "string"
              },
              "familyName": {
                "type": "string"
              }
            }
          },
          "emails": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "primary": {
                  "type": "boolean"
                }
              }
            }
          },
          "groups": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "active": {
            "type": "boolean"
          },
          "meta": {
            "type": "object",
            "properties": {
              "resourceType": {
                "type": "string"
              },
              "created": {
                "type": "string"
              },
              "lastModified": {
                "type": "string"
              },
              "location": {
                "type": "string"
              }
            }
          }
        },
        "required": [
          "schemas",
          "id"
        ]
      },
      "scim-user": {
        "title": "SCIM /Users",
        "description": "SCIM /Users provisioning endpoints",
        "type": "object",
        "properties": {
          "schemas": {
            "description": "SCIM schema used.",
            "type": "array",
            "minItems": 1,
            "items": {
              "type": "string",
              "example": "urn:ietf:params:scim:schemas:core:2.0:User"
            }
          },
          "id": {
            "description": "Unique identifier of an external identity",
            "example": "1b78eada-9baa-11e6-9eb6-a431576d590e",
            "type": "string"
          },
          "externalId": {
            "description": "The ID of the User.",
            "type": "string",
            "example": "a7b0f98395",
            "nullable": true
          },
          "userName": {
            "description": "Configured by the admin. Could be an email, login, or username",
            "example": "someone@example.com",
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "description": "The name of the user, suitable for display to end-users",
            "example": "Jon Doe",
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "object",
            "properties": {
              "givenName": {
                "type": "string",
                "nullable": true
              },
              "familyName": {
                "type": "string",
                "nullable": true
              },
              "formatted": {
                "type": "string",
                "nullable": true
              }
            },
            "required": [
              "givenName",
              "familyName"
            ],
            "example": {
              "givenName": "Jane",
              "familyName": "User"
            }
          },
          "emails": {
            "description": "user emails",
            "example": [{
                "value": "someone@example.com",
                "primary": true
              },
              {
                "value": "another@example.com",
                "primary": false
              }
            ],
            "type": "array",
            "minItems": 1,
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string"
                },
                "primary": {
                  "type": "boolean"
                }
              },
              "required": [
                "value"
              ]
            }
          },
          "active": {
            "description": "The active status of the User.",
            "type": "boolean",
            "example": true
          },
          "meta": {
            "type": "object",
            "properties": {
              "resourceType": {
                "type": "string",
                "example": "User"
              },
              "created": {
                "type": "string",
                "format": "date-time",
                "example": "2019-01-24T22:45:36Z"
              },
              "lastModified": {
                "type": "string",
                "format": "date-time",
                "example": "2019-01-24T22:45:36Z"
              },
              "location": {
                "type": "string",
                "format": "uri",
                "example": "https://api.github.com/scim/v2/organizations/myorg-123abc55141bfd8f/Users/c42772b5-2029-11e9-8543-9264a97dec8d"
              }
            }
          },
          "organization_id": {
            "description": "The ID of the organization.",
            "type": "integer"
          },
          "operations": {
            "description": "Set of operations to be performed",
            "example": [{
              "op": "replace",
              "value": {
                "active": false
              }
            }],
            "type": "array",
            "minItems": 1,
            "items": {
              "properties": {
                "op": {
                  "type": "string",
                  "enum": [
                    "add",
                    "remove",
                    "replace"
                  ]
                },
                "path": {
                  "type": "string"
                },
                "value": {
                  "oneOf": [{
                      "type": "string"
                    },
                    {
                      "type": "object"
                    },
                    {
                      "type": "array",
                      "items": {}
                    }
                  ]
                }
              },
              "required": [
                "op"
              ],
              "type": "object"
            }
          },
          "groups": {
            "description": "associated groups",
            "type": "array",
            "items": {
              "properties": {
                "value": {
                  "type": "string"
                },
                "display": {
                  "type": "string"
                }
              }
            }
          }
        },
        "required": [
          "id",
          "schemas",
          "externalId",
          "userName",
          "name",
          "emails",
          "active",
          "meta"
        ]
      },
      "scim-user-list": {
        "title": "SCIM User List",
        "description": "SCIM User List",
        "type": "object",
        "properties": {
          "schemas": {
            "description": "SCIM schema used.",
            "type": "array",
            "minItems": 1,
            "items": {
              "type": "string",
              "example": "urn:ietf:params:scim:api:messages:2.0:ListResponse"
            }
          },
          "totalResults": {
            "type": "integer",
            "example": 3
          },
          "itemsPerPage": {
            "type": "integer",
            "example": 10
          },
          "startIndex": {
            "type": "integer",
            "example": 1
          },
          "Resources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/scim-user"
            }
          }
        },
        "required": [
          "schemas",
          "totalResults",
          "itemsPerPage",
          "startIndex",
          "Resources"
        ]
      },
      "search-result-text-matches": {
        "title": "Search Result Text Matches",
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "object_url": {
              "type": "string"
            },
            "object_type": {
              "nullable": true,
              "type": "string"
            },
            "property": {
              "type": "string"
            },
            "fragment": {
              "type": "string"
            },
            "matches": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "text": {
                    "type": "string"
                  },
                  "indices": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "code-search-result-item": {
        "title": "Code Search Result Item",
        "description": "Code Search Result Item",
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "sha": {
            "type": "string"
          },
          "url": {
            "type": "string",
            "format": "uri"
          },
          "git_url": {
            "type": "string",
            "format": "uri"
          },
          "html_url": {
            "type": "string",
            "format": "uri"
          },
          "repository": {
            "$ref": "#/components/schemas/minimal-repository"
          },
          "score": {
            "type": "integer"
          },
          "file_size": {
            "type": "integer"
          },
          "language": {
            "type": "string",
            "nullable": true
          },
          "last_modified_at": {
            "type": "string",
            "format": "date-time"
          },
          "line_numbers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "73..77",
              "77..78"
            ]
          },
          "text_matches": {
            "$ref": "#/components/schemas/search-result-text-matches"
          }
        },
        "required": [
          "score",
          "name",
          "path",
          "sha",
          "git_url",
          "html_url",
          "url",
          "repository"
        ]
      },
      "commit-search-result-item": {
        "title": "Commit Search Result Item",
        "description": "Commit Search Result Item",
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "format": "uri"
          },
          "sha": {
            "type": "string"
          },
          "html_url": {
            "type": "string",
            "format": "uri"
          },
          "comments_url": {
            "type": "string",
            "format": "uri"
          },
          "commit": {
            "type": "object",
            "properties": {
              "author": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "date": {
                    "type": "string",
                    "format": "date-time"
                  }
                },
                "required": [
                  "name",
                  "email",
                  "date"
                ]
              },
              "committer": {
                "nullable": true,
                "allOf": [{
                  "$ref": "#/components/schemas/git-user"
                }]
              },
              "comment_count": {
                "type": "integer"
              },
              "message": {
                "type": "string"
              },
              "tree": {
                "type": "object",
                "properties": {
                  "sha": {
                    "type": "string"
                  },
                  "url": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "required": [
                  "sha",
                  "url"
                ]
              },
              "url": {
                "type": "string",
                "format": "uri"
              },
              "verification": {
                "$ref": "#/components/schemas/verification"
              }
            },
            "required": [
              "author",
              "committer",
              "comment_count",
              "message",
              "tree",
              "url"
            ]
          },
          "author": {
            "nullable": true,
            "allOf": [{
              "$ref": "#/components/schemas/simple-user"
            }]
          },
          "committer": {
            "nullable": true,
            "allOf": [{
              "$ref": "#/components/schemas/git-user"
            }]
          },
          "parents": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "url": {
                  "type": "string"
                },
                "html_url": {
                  "type": "string"
                },
                "sha": {
                  "type": "string"
                }
              }
            }
          },
          "repository": {
            "$ref": "#/components/schemas/minimal-repository"
          },
          "score": {
            "type": "integer"
          },
          "node_id": {
            "type": "string"
          },
          "text_matches": {
            "$ref": "#/components/schemas/search-result-text-matches"
          }
        },
        "required": [
          "sha",
          "node_id",
          "url",
          "html_url",
          "author",
          "committer",
          "parents",
          "comments_url",
          "commit",
          "repository",
          "score"
        ]
      },
      "issue-search-result-item": {
        "title": "Issue Search Result Item",
        "description": "Issue Search Result Item",
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "format": "uri"
          },
          "repository_url": {
            "type": "string",
            "format": "uri"
          },
          "labels_url": {
            "type": "string"
          },
          "comments_url": {
            "type": "string",
            "format": "uri"
          },
          "events_url": {
            "type": "string",
            "format": "uri"
          },
          "html_url": {
            "type": "string",
            "format": "uri"
          },
          "id": {
            "type": "integer"
          },
          "node_id": {
            "type": "string"
          },
          "number": {
            "type": "integer"
          },
          "title": {
            "type": "string"
          },
          "locked": {
            "type": "boolean"
          },
          "active_lock_reason": {
            "type": "string",
            "nullable": true
          },
          "assignees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/simple-user"
            },
            "nullable": true
          },
          "user": {
            "nullable": true,
            "allOf": [{
              "$ref": "#/components/schemas/simple-user"
            }]
          },
          "labels": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "node_id": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "color": {
                  "type": "string"
                },
                "default": {
                  "type": "boolean"
                },
                "description": {
                  "type": "string",
                  "nullable": true
                }
              }
            }
          },
          "state": {
            "type": "string"
          },
          "assignee": {
            "nullable": true,
            "allOf": [{
              "$ref": "#/components/schemas/simple-user"
            }]
          },
          "milestone": {
            "nullable": true,
            "allOf": [{
              "$ref": "#/components/schemas/milestone"
            }]
          },
          "comments": {
            "type": "integer"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "closed_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "text_matches": {
            "$ref": "#/components/schemas/search-result-text-matches"
          },
          "pull_request": {
            "type": "object",
            "properties": {
              "merged_at": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "diff_url": {
                "type": "string",
                "format": "uri",
                "nullable": true
              },
              "html_url": {
                "type": "string",
                "format": "uri",
                "nullable": true
              },
              "patch_url": {
                "type": "string",
                "format": "uri",
                "nullable": true
              },
              "url": {
                "type": "string",
                "format": "uri",
                "nullable": true
              }
            },
            "required": [
              "diff_url",
              "html_url",
              "patch_url",
              "url"
            ]
          },
          "body": {
            "type": "string"
          },
          "score": {
            "type": "integer"
          },
          "author_association": {
            "$ref": "#/components/schemas/author_association"
          },
          "draft": {
            "type": "boolean"
          },
          "repository": {
            "$ref": "#/components/schemas/repository"
          },
          "body_html": {
            "type": "string"
          },
          "body_text": {
            "type": "string"
          },
          "timeline_url": {
            "type": "string",
            "format": "uri"
          },
          "performed_via_github_app": {
            "nullable": true,
            "allOf": [{
              "$ref": "#/components/schemas/integration"
            }]
          }
        },
        "required": [
          "assignee",
          "closed_at",
          "comments",
          "comments_url",
          "events_url",
          "html_url",
          "id",
          "node_id",
          "labels",
          "labels_url",
          "milestone",
          "number",
          "repository_url",
          "state",
          "locked",
          "title",
          "url",
          "user",
          "author_association",
          "created_at",
          "updated_at",
          "score"
        ]
      },
      "label-search-result-item": {
        "title": "Label Search Result Item",
        "description": "Label Search Result Item",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "node_id": {
            "type": "string"
          },
          "url": {
            "type": "string",
            "format": "uri"
          },
          "name": {
            "type": "string"
          },
          "color": {
            "type": "string"
          },
          "default": {
            "type": "boolean"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "score": {
            "type": "integer"
          },
          "text_matches": {
            "$ref": "#/components/schemas/search-result-text-matches"
          }
        },
        "required": [
          "id",
          "node_id",
          "url",
          "name",
          "color",
          "default",
          "description",
          "score"
        ]
      },
      "repo-search-result-item": {
        "title": "Repo Search Result Item",
        "description": "Repo Search Result Item",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "node_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "full_name": {
            "type": "string"
          },
          "owner": {
            "nullable": true,
            "allOf": [{
              "$ref": "#/components/schemas/simple-user"
            }]
          },
          "private": {
            "type": "boolean"
          },
          "html_url": {
            "type": "string",
            "format": "uri"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "fork": {
            "type": "boolean"
          },
          "url": {
            "type": "string",
            "format": "uri"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "pushed_at": {
            "type": "string",
            "format": "date-time"
          },
          "homepage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "size": {
            "type": "integer"
          },
          "stargazers_count": {
            "type": "integer"
          },
          "watchers_count": {
            "type": "integer"
          },
          "language": {
            "type": "string",
            "nullable": true
          },
          "forks_count": {
            "type": "integer"
          },
          "open_issues_count": {
            "type": "integer"
          },
          "master_branch": {
            "type": "string"
          },
          "default_branch": {
            "type": "string"
          },
          "score": {
            "type": "integer"
          },
          "forks_url": {
            "type": "string",
            "format": "uri"
          },
          "keys_url": {
            "type": "string"
          },
          "collaborators_url": {
            "type": "string"
          },
          "teams_url": {
            "type": "string",
            "format": "uri"
          },
          "hooks_url": {
            "type": "string",
            "format": "uri"
          },
          "issue_events_url": {
            "type": "string"
          },
          "events_url": {
            "type": "string",
            "format": "uri"
          },
          "assignees_url": {
            "type": "string"
          },
          "branches_url": {
            "type": "string"
          },
          "tags_url": {
            "type": "string",
            "format": "uri"
          },
          "blobs_url": {
            "type": "string"
          },
          "git_tags_url": {
            "type": "string"
          },
          "git_refs_url": {
            "type": "string"
          },
          "trees_url": {
            "type": "string"
          },
          "statuses_url": {
            "type": "string"
          },
          "languages_url": {
            "type": "string",
            "format": "uri"
          },
          "stargazers_url": {
            "type": "string",
            "format": "uri"
          },
          "contributors_url": {
            "type": "string",
            "format": "uri"
          },
          "subscribers_url": {
            "type": "string",
            "format": "uri"
          },
          "subscription_url": {
            "type": "string",
            "format": "uri"
          },
          "commits_url": {
            "type": "string"
          },
          "git_commits_url": {
            "type": "string"
          },
          "comments_url": {
            "type": "string"
          },
          "issue_comment_url": {
            "type": "string"
          },
          "contents_url": {
            "type": "string"
          },
          "compare_url": {
            "type": "string"
          },
          "merges_url": {
            "type": "string",
            "format": "uri"
          },
          "archive_url": {
            "type": "string"
          },
          "downloads_url": {
            "type": "string",
            "format": "uri"
          },
          "issues_url": {
            "type": "string"
          },
          "pulls_url": {
            "type": "string"
          },
          "milestones_url": {
            "type": "string"
          },
          "notifications_url": {
            "type": "string"
          },
          "labels_url": {
            "type": "string"
          },
          "releases_url": {
            "type": "string"
          },
          "deployments_url": {
            "type": "string",
            "format": "uri"
          },
          "git_url": {
            "type": "string"
          },
          "ssh_url": {
            "type": "string"
          },
          "clone_url": {
            "type": "string"
          },
          "svn_url": {
            "type": "string",
            "format": "uri"
          },
          "forks": {
            "type": "integer"
          },
          "open_issues": {
            "type": "integer"
          },
          "watchers": {
            "type": "integer"
          },
          "topics": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "mirror_url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "has_issues": {
            "type": "boolean"
          },
          "has_projects": {
            "type": "boolean"
          },
          "has_pages": {
            "type": "boolean"
          },
          "has_wiki": {
            "type": "boolean"
          },
          "has_downloads": {
            "type": "boolean"
          },
          "archived": {
            "type": "boolean"
          },
          "disabled": {
            "type": "boolean",
            "description": "Returns whether or not this repository disabled."
          },
          "license": {
            "nullable": true,
            "allOf": [{
              "$ref": "#/components/schemas/license-simple"
            }]
          },
          "permissions": {
            "type": "object",
            "properties": {
              "admin": {
                "type": "boolean"
              },
              "pull": {
                "type": "boolean"
              },
              "push": {
                "type": "boolean"
              }
            },
            "required": [
              "admin",
              "pull",
              "push"
            ]
          },
          "text_matches": {
            "$ref": "#/components/schemas/search-result-text-matches"
          },
          "temp_clone_token": {
            "type": "string"
          },
          "allow_merge_commit": {
            "type": "boolean"
          },
          "allow_squash_merge": {
            "type": "boolean"
          },
          "allow_rebase_merge": {
            "type": "boolean"
          },
          "delete_branch_on_merge": {
            "type": "boolean"
          }
        },
        "required": [
          "archive_url",
          "assignees_url",
          "blobs_url",
          "branches_url",
          "collaborators_url",
          "comments_url",
          "commits_url",
          "compare_url",
          "contents_url",
          "contributors_url",
          "deployments_url",
          "description",
          "downloads_url",
          "events_url",
          "fork",
          "forks_url",
          "full_name",
          "git_commits_url",
          "git_refs_url",
          "git_tags_url",
          "hooks_url",
          "html_url",
          "id",
          "node_id",
          "issue_comment_url",
          "issue_events_url",
          "issues_url",
          "keys_url",
          "labels_url",
          "languages_url",
          "merges_url",
          "milestones_url",
          "name",
          "notifications_url",
          "owner",
          "private",
          "pulls_url",
          "releases_url",
          "stargazers_url",
          "statuses_url",
          "subscribers_url",
          "subscription_url",
          "tags_url",
          "teams_url",
          "trees_url",
          "url",
          "clone_url",
          "default_branch",
          "forks",
          "forks_count",
          "git_url",
          "has_downloads",
          "has_issues",
          "has_projects",
          "has_wiki",
          "has_pages",
          "homepage",
          "language",
          "archived",
          "disabled",
          "mirror_url",
          "open_issues",
          "open_issues_count",
          "license",
          "pushed_at",
          "size",
          "ssh_url",
          "stargazers_count",
          "svn_url",
          "watchers",
          "watchers_count",
          "created_at",
          "updated_at",
          "score"
        ]
      },
      "topic-search-result-item": {
        "title": "Topic Search Result Item",
        "description": "Topic Search Result Item",
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "display_name": {
            "type": "string",
            "nullable": true
          },
          "short_description": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "created_by": {
            "type": "string",
            "nullable": true
          },
          "released": {
            "type": "string",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "featured": {
            "type": "boolean"
          },
          "curated": {
            "type": "boolean"
          },
          "score": {
            "type": "integer"
          },
          "repository_count": {
            "type": "integer",
            "nullable": true
          },
          "logo_url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "text_matches": {
            "$ref": "#/components/schemas/search-result-text-matches"
          },
          "related": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "object",
              "properties": {
                "topic_relation": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "topic_id": {
                      "type": "integer"
                    },
                    "relation_type": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "aliases": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "object",
              "properties": {
                "topic_relation": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "topic_id": {
                      "type": "integer"
                    },
                    "relation_type": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "required": [
          "name",
          "display_name",
          "short_description",
          "description",
          "created_by",
          "released",
          "created_at",
          "updated_at",
          "featured",
          "curated",
          "score"
        ]
      },
      "user-search-result-item": {
        "title": "User Search Result Item",
        "description": "User Search Result Item",
        "type": "object",
        "properties": {
          "login": {
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "node_id": {
            "type": "string"
          },
          "avatar_url": {
            "type": "string",
            "format": "uri"
          },
          "gravatar_id": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "format": "uri"
          },
          "html_url": {
            "type": "string",
            "format": "uri"
          },
          "followers_url": {
            "type": "string",
            "format": "uri"
          },
          "subscriptions_url": {
            "type": "string",
            "format": "uri"
          },
          "organizations_url": {
            "type": "string",
            "format": "uri"
          },
          "repos_url": {
            "type": "string",
            "format": "uri"
          },
          "received_events_url": {
            "type": "string",
            "format": "uri"
          },
          "type": {
            "type": "string"
          },
          "score": {
            "type": "integer"
          },
          "following_url": {
            "type": "string"
          },
          "gists_url": {
            "type": "string"
          },
          "starred_url": {
            "type": "string"
          },
          "events_url": {
            "type": "string"
          },
          "public_repos": {
            "type": "integer"
          },
          "public_gists": {
            "type": "integer"
          },
          "followers": {
            "type": "integer"
          },
          "following": {
            "type": "integer"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "bio": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "location": {
            "type": "string",
            "nullable": true
          },
          "site_admin": {
            "type": "boolean"
          },
          "hireable": {
            "type": "boolean",
            "nullable": true
          },
          "text_matches": {
            "$ref": "#/components/schemas/search-result-text-matches"
          },
          "blog": {
            "type": "string",
            "nullable": true
          },
          "company": {
            "type": "string",
            "nullable": true
          },
          "suspended_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "required": [
          "avatar_url",
          "events_url",
          "followers_url",
          "following_url",
          "gists_url",
          "gravatar_id",
          "html_url",
          "id",
          "node_id",
          "login",
          "organizations_url",
          "received_events_url",
          "repos_url",
          "site_admin",
          "starred_url",
          "subscriptions_url",
          "type",
          "url",
          "score"
        ]
      },
      "private-user": {
        "title": "Private User",
        "description": "Private User",
        "type": "object",
        "properties": {
          "login": {
            "type": "string",
            "example": "octocat"
          },
          "id": {
            "type": "integer",
            "example": 1
          },
          "node_id": {
            "type": "string",
            "example": "MDQ6VXNlcjE="
          },
          "avatar_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/images/error/octocat_happy.gif"
          },
          "gravatar_id": {
            "type": "string",
            "example": "41d064eb2195891e12d0413f63227ea7",
            "nullable": true
          },
          "url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat"
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/octocat"
          },
          "followers_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat/followers"
          },
          "following_url": {
            "type": "string",
            "example": "https://api.github.com/users/octocat/following{/other_user}"
          },
          "gists_url": {
            "type": "string",
            "example": "https://api.github.com/users/octocat/gists{/gist_id}"
          },
          "starred_url": {
            "type": "string",
            "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}"
          },
          "subscriptions_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat/subscriptions"
          },
          "organizations_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat/orgs"
          },
          "repos_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat/repos"
          },
          "events_url": {
            "type": "string",
            "example": "https://api.github.com/users/octocat/events{/privacy}"
          },
          "received_events_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat/received_events"
          },
          "type": {
            "type": "string",
            "example": "User"
          },
          "site_admin": {
            "type": "boolean"
          },
          "name": {
            "type": "string",
            "example": "monalisa octocat",
            "nullable": true
          },
          "company": {
            "type": "string",
            "example": "GitHub",
            "nullable": true
          },
          "blog": {
            "type": "string",
            "example": "https://github.com/blog",
            "nullable": true
          },
          "location": {
            "type": "string",
            "example": "San Francisco",
            "nullable": true
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "octocat@github.com",
            "nullable": true
          },
          "hireable": {
            "type": "boolean",
            "nullable": true
          },
          "bio": {
            "type": "string",
            "example": "There once was...",
            "nullable": true
          },
          "twitter_username": {
            "type": "string",
            "example": "monalisa",
            "nullable": true
          },
          "public_repos": {
            "type": "integer",
            "example": 2
          },
          "public_gists": {
            "type": "integer",
            "example": 1
          },
          "followers": {
            "type": "integer",
            "example": 20
          },
          "following": {
            "type": "integer",
            "example": 0
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2008-01-14T04:33:35Z"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2008-01-14T04:33:35Z"
          },
          "private_gists": {
            "type": "integer",
            "example": 81
          },
          "total_private_repos": {
            "type": "integer",
            "example": 100
          },
          "owned_private_repos": {
            "type": "integer",
            "example": 100
          },
          "disk_usage": {
            "type": "integer",
            "example": 10000
          },
          "collaborators": {
            "type": "integer",
            "example": 8
          },
          "two_factor_authentication": {
            "type": "boolean",
            "example": true
          },
          "plan": {
            "type": "object",
            "properties": {
              "collaborators": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "space": {
                "type": "integer"
              },
              "private_repos": {
                "type": "integer"
              }
            },
            "required": [
              "collaborators",
              "name",
              "space",
              "private_repos"
            ]
          },
          "suspended_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "business_plus": {
            "type": "boolean"
          },
          "ldap_dn": {
            "type": "string"
          }
        },
        "required": [
          "avatar_url",
          "events_url",
          "followers_url",
          "following_url",
          "gists_url",
          "gravatar_id",
          "html_url",
          "id",
          "node_id",
          "login",
          "organizations_url",
          "received_events_url",
          "repos_url",
          "site_admin",
          "starred_url",
          "subscriptions_url",
          "type",
          "url",
          "bio",
          "blog",
          "company",
          "email",
          "followers",
          "following",
          "hireable",
          "location",
          "name",
          "public_gists",
          "public_repos",
          "created_at",
          "updated_at",
          "collaborators",
          "disk_usage",
          "owned_private_repos",
          "private_gists",
          "total_private_repos",
          "two_factor_authentication"
        ]
      },
      "public-user": {
        "title": "Public User",
        "description": "Public User",
        "type": "object",
        "properties": {
          "login": {
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "node_id": {
            "type": "string"
          },
          "avatar_url": {
            "type": "string",
            "format": "uri"
          },
          "gravatar_id": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "format": "uri"
          },
          "html_url": {
            "type": "string",
            "format": "uri"
          },
          "followers_url": {
            "type": "string",
            "format": "uri"
          },
          "following_url": {
            "type": "string"
          },
          "gists_url": {
            "type": "string"
          },
          "starred_url": {
            "type": "string"
          },
          "subscriptions_url": {
            "type": "string",
            "format": "uri"
          },
          "organizations_url": {
            "type": "string",
            "format": "uri"
          },
          "repos_url": {
            "type": "string",
            "format": "uri"
          },
          "events_url": {
            "type": "string"
          },
          "received_events_url": {
            "type": "string",
            "format": "uri"
          },
          "type": {
            "type": "string"
          },
          "site_admin": {
            "type": "boolean"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "company": {
            "type": "string",
            "nullable": true
          },
          "blog": {
            "type": "string",
            "nullable": true
          },
          "location": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "hireable": {
            "type": "boolean",
            "nullable": true
          },
          "bio": {
            "type": "string",
            "nullable": true
          },
          "twitter_username": {
            "type": "string",
            "nullable": true
          },
          "public_repos": {
            "type": "integer"
          },
          "public_gists": {
            "type": "integer"
          },
          "followers": {
            "type": "integer"
          },
          "following": {
            "type": "integer"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "plan": {
            "type": "object",
            "properties": {
              "collaborators": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "space": {
                "type": "integer"
              },
              "private_repos": {
                "type": "integer"
              }
            },
            "required": [
              "collaborators",
              "name",
              "space",
              "private_repos"
            ]
          },
          "suspended_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "private_gists": {
            "type": "integer",
            "example": 1
          },
          "total_private_repos": {
            "type": "integer",
            "example": 2
          },
          "owned_private_repos": {
            "type": "integer",
            "example": 2
          },
          "disk_usage": {
            "type": "integer",
            "example": 1
          },
          "collaborators": {
            "type": "integer",
            "example": 3
          }
        },
        "required": [
          "avatar_url",
          "events_url",
          "followers_url",
          "following_url",
          "gists_url",
          "gravatar_id",
          "html_url",
          "id",
          "node_id",
          "login",
          "organizations_url",
          "received_events_url",
          "repos_url",
          "site_admin",
          "starred_url",
          "subscriptions_url",
          "type",
          "url",
          "bio",
          "blog",
          "company",
          "email",
          "followers",
          "following",
          "hireable",
          "location",
          "name",
          "public_gists",
          "public_repos",
          "created_at",
          "updated_at"
        ],
        "additionalProperties": false
      },
      "email": {
        "title": "Email",
        "description": "Email",
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "octocat@github.com"
          },
          "primary": {
            "type": "boolean",
            "example": true
          },
          "verified": {
            "type": "boolean",
            "example": true
          },
          "visibility": {
            "type": "string",
            "example": "public",
            "nullable": true
          }
        },
        "required": [
          "email",
          "primary",
          "verified",
          "visibility"
        ]
      },
      "gpg-key": {
        "title": "GPG Key",
        "description": "A unique encryption key",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 3
          },
          "primary_key_id": {
            "type": "integer",
            "nullable": true
          },
          "key_id": {
            "type": "string",
            "example": "3262EFF25BA0D270"
          },
          "public_key": {
            "type": "string",
            "example": "xsBNBFayYZ..."
          },
          "emails": {
            "type": "array",
            "example": [{
              "email": "mastahyeti@users.noreply.github.com",
              "verified": true
            }],
            "items": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                },
                "verified": {
                  "type": "boolean"
                }
              }
            }
          },
          "subkeys": {
            "type": "array",
            "example": [{
              "id": 4,
              "primary_key_id": 3,
              "key_id": "4A595D4C72EE49C7",
              "public_key": "zsBNBFayYZ...",
              "emails": [],
              "subkeys": [],
              "can_sign": false,
              "can_encrypt_comms": true,
              "can_encrypt_storage": true,
              "can_certify": false,
              "created_at": "2016-03-24T11:31:04-06:00",
              "expires_at": null
            }],
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "primary_key_id": {
                  "type": "integer"
                },
                "key_id": {
                  "type": "string"
                },
                "public_key": {
                  "type": "string"
                },
                "emails": {
                  "type": "array",
                  "items": {}
                },
                "subkeys": {
                  "type": "array",
                  "items": {}
                },
                "can_sign": {
                  "type": "boolean"
                },
                "can_encrypt_comms": {
                  "type": "boolean"
                },
                "can_encrypt_storage": {
                  "type": "boolean"
                },
                "can_certify": {
                  "type": "boolean"
                },
                "created_at": {
                  "type": "string"
                },
                "expires_at": {
                  "type": "string",
                  "nullable": true
                },
                "raw_key": {
                  "type": "string",
                  "nullable": true
                }
              }
            }
          },
          "can_sign": {
            "type": "boolean",
            "example": true
          },
          "can_encrypt_comms": {
            "type": "boolean"
          },
          "can_encrypt_storage": {
            "type": "boolean"
          },
          "can_certify": {
            "type": "boolean",
            "example": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2016-03-24T11:31:04-06:00"
          },
          "expires_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "raw_key": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "id",
          "primary_key_id",
          "key_id",
          "raw_key",
          "public_key",
          "created_at",
          "expires_at",
          "can_sign",
          "can_encrypt_comms",
          "can_encrypt_storage",
          "can_certify",
          "emails",
          "subkeys"
        ]
      },
      "key": {
        "title": "Key",
        "description": "Key",
        "type": "object",
        "properties": {
          "key_id": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "url": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "verified": {
            "type": "boolean"
          },
          "read_only": {
            "type": "boolean"
          }
        },
        "required": [
          "key_id",
          "key",
          "id",
          "url",
          "title",
          "created_at",
          "verified",
          "read_only"
        ]
      },
      "marketplace-account": {
        "title": "Marketplace Account",
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "format": "uri"
          },
          "id": {
            "type": "integer"
          },
          "type": {
            "type": "string"
          },
          "node_id": {
            "type": "string"
          },
          "login": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "nullable": true,
            "format": "email"
          },
          "organization_billing_email": {
            "type": "string",
            "nullable": true,
            "format": "email"
          }
        },
        "required": [
          "url",
          "id",
          "type",
          "login"
        ]
      },
      "user-marketplace-purchase": {
        "title": "User Marketplace Purchase",
        "description": "User Marketplace Purchase",
        "type": "object",
        "properties": {
          "billing_cycle": {
            "type": "string",
            "example": "monthly"
          },
          "next_billing_date": {
            "type": "string",
            "format": "date-time",
            "example": "2017-11-11T00:00:00Z",
            "nullable": true
          },
          "unit_count": {
            "type": "integer",
            "nullable": true
          },
          "on_free_trial": {
            "type": "boolean",
            "example": true
          },
          "free_trial_ends_on": {
            "type": "string",
            "format": "date-time",
            "example": "2017-11-11T00:00:00Z",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2017-11-02T01:12:12Z",
            "nullable": true
          },
          "account": {
            "$ref": "#/components/schemas/marketplace-account"
          },
          "plan": {
            "$ref": "#/components/schemas/marketplace-listing-plan"
          }
        },
        "required": [
          "billing_cycle",
          "next_billing_date",
          "unit_count",
          "updated_at",
          "on_free_trial",
          "free_trial_ends_on",
          "account",
          "plan"
        ]
      },
      "starred-repository": {
        "title": "Starred Repository",
        "description": "Starred Repository",
        "type": "object",
        "properties": {
          "starred_at": {
            "type": "string",
            "format": "date-time"
          },
          "repo": {
            "$ref": "#/components/schemas/repository"
          }
        },
        "required": [
          "starred_at",
          "repo"
        ]
      },
      "hovercard": {
        "title": "Hovercard",
        "description": "Hovercard",
        "type": "object",
        "properties": {
          "contexts": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                },
                "octicon": {
                  "type": "string"
                }
              },
              "required": [
                "message",
                "octicon"
              ]
            }
          }
        },
        "required": [
          "contexts"
        ]
      },
      "key-simple": {
        "title": "Key Simple",
        "description": "Key Simple",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "key": {
            "type": "string"
          }
        },
        "required": [
          "key",
          "id"
        ]
      }
    },
    "responses": {
      "not_found": {
        "description": "Resource Not Found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/basic-error"
            }
          }
        }
      },
      "validation_failed_simple": {
        "description": "Validation Failed",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/validation-error-simple"
            }
          }
        }
      },
      "preview_header_missing": {
        "description": "Preview Header Missing",
        "content": {
          "application/json": {
            "type": "object",
            "required": [
              "message",
              "documentation_url"
            ],
            "properties": {
              "message": {
                "type": "string"
              },
              "documentation_url": {
                "type": "string"
              }
            }
          }
        }
      },
      "forbidden": {
        "description": "Forbidden",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/basic-error"
            }
          }
        }
      },
      "requires_authentication": {
        "description": "Requires Authentication",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/basic-error"
            }
          }
        }
      },
      "validation_failed": {
        "description": "Validation Failed",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/validation-error"
            }
          }
        }
      },
      "not_modified": {
        "description": "Not Modified"
      },
      "gone": {
        "description": "Gone",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/basic-error"
            }
          }
        }
      },
      "service_unavailable": {
        "description": "Service Unavailable",
        "content": {
          "application/json": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string"
              },
              "message": {
                "type": "string"
              },
              "documentation_url": {
                "type": "string"
              }
            }
          }
        }
      },
      "forbidden_gist": {
        "description": "Forbidden Gist",
        "content": {
          "application/json": {
            "type": "object",
            "properties": {
              "block": {
                "type": "object",
                "properties": {
                  "reason": {
                    "type": "string"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "html_url": {
                    "type": "string",
                    "nullable": true
                  }
                }
              },
              "message": {
                "type": "string"
              },
              "documentation_url": {
                "type": "string"
              }
            }
          }
        }
      },
      "moved_permanently": {
        "description": "Moved Permanently"
      },
      "conflict": {
        "description": "Conflict",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/basic-error"
            }
          }
        }
      },
      "code_scanning_forbidden_read": {
        "description": "Response if github advanced security is not enabled for this repository",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/basic-error"
            }
          }
        }
      },
      "code_scanning_forbidden_write": {
        "description": "Response if the repository is archived or if github advanced security is not enabled for this repository",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/basic-error"
            }
          }
        }
      },
      "bad_request": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/basic-error"
            }
          },
          "application/scim+json": {
            "schema": {
              "$ref": "#/components/schemas/scim-error"
            }
          }
        }
      },
      "internal_error": {
        "description": "Internal Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/basic-error"
            }
          }
        }
      },
      "found": {
        "description": "Found"
      },
      "scim_not_found": {
        "description": "Resource Not Found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/scim-error"
            }
          },
          "application/scim+json": {
            "schema": {
              "$ref": "#/components/schemas/scim-error"
            }
          }
        }
      },
      "scim_forbidden": {
        "description": "Forbidden",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/scim-error"
            }
          },
          "application/scim+json": {
            "schema": {
              "$ref": "#/components/schemas/scim-error"
            }
          }
        }
      },
      "scim_bad_request": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/scim-error"
            }
          },
          "application/scim+json": {
            "schema": {
              "$ref": "#/components/schemas/scim-error"
            }
          }
        }
      },
      "scim_internal_error": {
        "description": "Internal Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/scim-error"
            }
          },
          "application/scim+json": {
            "schema": {
              "$ref": "#/components/schemas/scim-error"
            }
          }
        }
      },
      "scim_conflict": {
        "description": "Conflict",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/scim-error"
            }
          },
          "application/scim+json": {
            "schema": {
              "$ref": "#/components/schemas/scim-error"
            }
          }
        }
      }
    },
    "parameters": {
      "per_page": {
        "name": "per_page",
        "description": "Results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        }
      },
      "page": {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        }
      },
      "since": {
        "name": "since",
        "description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "installation_id": {
        "name": "installation_id",
        "description": "installation_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        }
      },
      "grant_id": {
        "name": "grant_id",
        "description": "grant_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        }
      },
      "client-id": {
        "name": "client_id",
        "in": "path",
        "required": true,
        "description": "The client ID of your GitHub app.",
        "schema": {
          "type": "string"
        }
      },
      "access-token": {
        "name": "access_token",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "app_slug": {
        "name": "app_slug",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "authorization_id": {
        "name": "authorization_id",
        "description": "authorization_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        }
      },
      "enterprise": {
        "name": "enterprise",
        "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "org_id": {
        "name": "org_id",
        "description": "Unique identifier of an organization.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        }
      },
      "runner_group_id": {
        "name": "runner_group_id",
        "description": "Unique identifier of the self-hosted runner group.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        }
      },
      "runner_id": {
        "name": "runner_id",
        "description": "Unique identifier of the self-hosted runner.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        }
      },
      "audit-log-phrase": {
        "name": "phrase",
        "description": "A search phrase. For more information, see [Searching the audit log](https://docs.github.com/github/setting-up-and-managing-organizations-and-teams/reviewing-the-audit-log-for-your-organization#searching-the-audit-log).",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "audit-log-include": {
        "name": "include",
        "description": "The event types to include:\n\n- `web` - returns web (non-Git) events\n- `git` - returns Git events\n- `all` - returns both web and Git events\n\nThe default is `web`.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "web",
            "git",
            "all"
          ]
        }
      },
      "audit-log-after": {
        "name": "after",
        "description": "A cursor, as given in the [Link header](https://docs.github.com/rest/overview/resources-in-the-rest-api#link-header). If specified, the query only searches for events after this cursor.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "audit-log-before": {
        "name": "before",
        "description": "A cursor, as given in the [Link header](https://docs.github.com/rest/overview/resources-in-the-rest-api#link-header). If specified, the query only searches for events before this cursor.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "audit-log-order": {
        "name": "order",
        "description": "The order of audit log events. To list newest events first, specify `desc`. To list oldest events first, specify `asc`.\n\nThe default is `desc`.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "desc",
            "asc"
          ]
        }
      },
      "gist_id": {
        "name": "gist_id",
        "description": "gist_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "comment_id": {
        "name": "comment_id",
        "description": "comment_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        }
      },
      "labels": {
        "name": "labels",
        "description": "A list of comma separated label names. Example: `bug,ui,@high`",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "direction": {
        "name": "direction",
        "description": "One of `asc` (ascending) or `desc` (descending).",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "asc",
            "desc"
          ],
          "default": "desc"
        }
      },
      "account_id": {
        "name": "account_id",
        "description": "account_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        }
      },
      "plan_id": {
        "name": "plan_id",
        "description": "plan_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        }
      },
      "sort": {
        "name": "sort",
        "description": "One of `created` (when the repository was starred) or `updated` (when it was last pushed to).",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "created",
            "updated"
          ],
          "default": "created"
        }
      },
      "owner": {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "repo": {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "all": {
        "name": "all",
        "description": "If `true`, show notifications marked as read.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "boolean",
          "default": false
        }
      },
      "participating": {
        "name": "participating",
        "description": "If `true`, only shows notifications in which the user is directly participating or mentioned.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "boolean",
          "default": false
        }
      },
      "before": {
        "name": "before",
        "description": "Only show notifications updated before the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "thread_id": {
        "name": "thread_id",
        "description": "thread_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        }
      },
      "since-org": {
        "name": "since",
        "description": "An organization ID. Only return organizations with an ID greater than this ID.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "integer"
        }
      },
      "org": {
        "name": "org",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "repository_id": {
        "name": "repository_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        }
      },
      "secret_name": {
        "name": "secret_name",
        "description": "secret_name parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "username": {
        "name": "username",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "hook-id": {
        "name": "hook_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        }
      },
      "invitation_id": {
        "name": "invitation_id",
        "description": "invitation_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        }
      },
      "migration_id": {
        "name": "migration_id",
        "description": "migration_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        }
      },
      "repo_name": {
        "name": "repo_name",
        "description": "repo_name parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "package_type": {
        "name": "package_type",
        "description": "The type of supported package. Can be one of `npm`, `maven`, `rubygems`, `nuget`, `docker`, or `container`. For Docker images that use the package namespace `https://ghcr.io/owner/package-name`, use `container`.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "enum": [
            "npm",
            "maven",
            "rubygems",
            "docker",
            "nuget",
            "container"
          ]
        }
      },
      "package_name": {
        "name": "package_name",
        "description": "The name of the package.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "package_version_id": {
        "name": "package_version_id",
        "description": "Unique identifier of the package version.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        }
      },
      "team_slug": {
        "name": "team_slug",
        "description": "team_slug parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "discussion-number": {
        "name": "discussion_number",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        }
      },
      "comment-number": {
        "name": "comment_number",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        }
      },
      "reaction-id": {
        "name": "reaction_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        }
      },
      "project-id": {
        "name": "project_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        }
      },
      "card_id": {
        "name": "card_id",
        "description": "card_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        }
      },
      "column_id": {
        "name": "column_id",
        "description": "column_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        }
      },
      "artifact_id": {
        "name": "artifact_id",
        "description": "artifact_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        }
      },
      "job_id": {
        "name": "job_id",
        "description": "job_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        }
      },
      "actor": {
        "name": "actor",
        "description": "Returns someone's workflow runs. Use the login for the user who created the `push` associated with the check suite or workflow run.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "workflow-run-branch": {
        "name": "branch",
        "description": "Returns workflow runs associated with a branch. Use the name of the branch of the `push`.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "event": {
        "name": "event",
        "description": "Returns workflow run triggered by the event you specify. For example, `push`, `pull_request` or `issue`. For more information, see \"[Events that trigger workflows](https://help.github.com/en/actions/automating-your-workflow-with-github-actions/events-that-trigger-workflows).\"",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "workflow-run-status": {
        "name": "status",
        "description": "Returns workflow runs with the check run `status` or `conclusion` that you specify. For example, a conclusion can be `success` or a status can be `in_progress`. Only GitHub can set a status of `waiting` or `requested`. For a list of the possible `status` and `conclusion` options, see \"[Create a check run](https://docs.github.com/rest/reference/checks#create-a-check-run).\"",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "completed",
            "action_required",
            "cancelled",
            "failure",
            "neutral",
            "skipped",
            "stale",
            "success",
            "timed_out",
            "in_progress",
            "queued",
            "requested",
            "waiting"
          ]
        }
      },
      "run-id": {
        "name": "run_id",
        "description": "The id of the workflow run",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        }
      },
      "workflow-id": {
        "name": "workflow_id",
        "in": "path",
        "description": "The ID of the workflow. You can also pass the workflow file name as a string.",
        "required": true,
        "schema": {
          "oneOf": [{
              "type": "integer"
            },
            {
              "type": "string"
            }
          ]
        }
      },
      "branch": {
        "name": "branch",
        "description": "The name of the branch.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-multi-segment": true
      },
      "check_run_id": {
        "name": "check_run_id",
        "description": "check_run_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        }
      },
      "check_suite_id": {
        "name": "check_suite_id",
        "description": "check_suite_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        }
      },
      "check_name": {
        "name": "check_name",
        "description": "Returns check runs with the specified `name`.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "status": {
        "name": "status",
        "description": "Returns check runs with the specified `status`. Can be one of `queued`, `in_progress`, or `completed`.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "queued",
            "in_progress",
            "completed"
          ]
        }
      },
      "tool_name": {
        "name": "tool_name",
        "description": "The name of a code scanning tool. Only results by this tool will be listed. You can specify the tool by using either `tool_name` or `tool_guid`, but not both.",
        "in": "query",
        "required": false,
        "schema": {
          "$ref": "#/components/schemas/code-scanning-analysis-tool-name"
        }
      },
      "tool_guid": {
        "name": "tool_guid",
        "description": "The GUID of a code scanning tool. Only results by this tool will be listed. Note that some code scanning tools may not include a GUID in their analysis data. You can specify the tool by using either `tool_guid` or `tool_name`, but not both.",
        "in": "query",
        "required": false,
        "schema": {
          "$ref": "#/components/schemas/code-scanning-analysis-tool-guid"
        }
      },
      "git_ref": {
        "name": "ref",
        "description": "The Git reference for the results you want to list. The `ref` for a branch can be formatted either as `refs/heads/<branch name>` or simply `<branch name>`. To reference a pull request use `refs/pull/<number>/merge`.",
        "in": "query",
        "required": false,
        "schema": {
          "$ref": "#/components/schemas/code-scanning-ref"
        }
      },
      "alert_number": {
        "name": "alert_number",
        "in": "path",
        "description": "The number that identifies an alert. You can find this at the end of the URL for a code scanning alert within GitHub, and in the `number` field in the response from the `GET /repos/{owner}/{repo}/code-scanning/alerts` operation.",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/alert-number"
        }
      },
      "commit_sha": {
        "name": "commit_sha",
        "description": "commit_sha parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-multi-segment": true
      },
      "deployment_id": {
        "name": "deployment_id",
        "description": "deployment_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        }
      },
      "environment_name": {
        "name": "environment_name",
        "in": "path",
        "required": true,
        "description": "The name of the environment",
        "schema": {
          "type": "string"
        }
      },
      "since-user": {
        "name": "since",
        "description": "A user ID. Only return users with an ID greater than this ID.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "integer"
        }
      },
      "issue_number": {
        "name": "issue_number",
        "description": "issue_number parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        }
      },
      "key_id": {
        "name": "key_id",
        "description": "key_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        }
      },
      "milestone_number": {
        "name": "milestone_number",
        "description": "milestone_number parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        }
      },
      "pull-number": {
        "name": "pull_number",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        }
      },
      "review_id": {
        "name": "review_id",
        "description": "review_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        }
      },
      "asset_id": {
        "name": "asset_id",
        "description": "asset_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        }
      },
      "release_id": {
        "name": "release_id",
        "description": "release_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        }
      },
      "per": {
        "name": "per",
        "description": "Must be one of: `day`, `week`.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "day",
            "week"
          ],
          "default": "day"
        }
      },
      "since-repo": {
        "name": "since",
        "description": "A repository ID. Only return repositories with an ID greater than this ID.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "integer"
        }
      },
      "start_index": {
        "name": "startIndex",
        "description": "Used for pagination: the index of the first result to return.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "integer"
        }
      },
      "count": {
        "name": "count",
        "description": "Used for pagination: the number of results to return.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "integer"
        }
      },
      "scim_group_id": {
        "name": "scim_group_id",
        "description": "Identifier generated by the GitHub SCIM endpoint.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "scim_user_id": {
        "name": "scim_user_id",
        "description": "scim_user_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "order": {
        "name": "order",
        "description": "Determines whether the first search result returned is the highest number of matches (`desc`) or lowest number of matches (`asc`). This parameter is ignored unless you provide `sort`.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "desc",
            "asc"
          ],
          "default": "desc"
        }
      },
      "team-id": {
        "name": "team_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        }
      },
      "gpg_key_id": {
        "name": "gpg_key_id",
        "description": "gpg_key_id parameter",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        }
      }
    },
    "headers": {
      "link": {
        "example": "<https://api.github.com/resource?page=2>; rel=\"next\", <https://api.github.com/resource?page=5>; rel=\"last\"",
        "schema": {
          "type": "string"
        }
      },
      "content-type": {
        "example": "text/html",
        "schema": {
          "type": "string"
        }
      },
      "x-common-marker-version": {
        "example": "0.17.4",
        "schema": {
          "type": "string"
        }
      },
      "x-rate-limit-limit": {
        "example": 5000,
        "schema": {
          "type": "integer"
        }
      },
      "x-rate-limit-remaining": {
        "example": 4999,
        "schema": {
          "type": "integer"
        }
      },
      "x-rate-limit-reset": {
        "example": 1590701888,
        "schema": {
          "type": "integer",
          "format": "timestamp"
        }
      },
      "location": {
        "example": "https://pipelines.actions.githubusercontent.com/OhgS4QRKqmgx7bKC27GKU83jnQjyeqG8oIMTge8eqtheppcmw8/_apis/pipelines/1/runs/176/signedlogcontent?urlExpires=2020-01-24T18%3A10%3A31.5729946Z&urlSigningMethod=HMACV1&urlSignature=agG73JakPYkHrh06seAkvmH7rBR4Ji4c2%2B6a2ejYh3E%3D",
        "schema": {
          "type": "string"
        }
      }
    }
  }
}