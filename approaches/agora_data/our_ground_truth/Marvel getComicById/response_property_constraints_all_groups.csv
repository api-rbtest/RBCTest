operation,response resource,attribute,group,description
get-/v1/public/comics/{comicid},ComicDataContainer,offset,data.offset,"The requested offset (number of skipped results) of the call. schema: {""type"": ""integer"", ""format"": ""int32""} schema: {""type"": ""integer"", ""format"": ""int32""}"
get-/v1/public/comics/{comicid},ComicDataContainer,limit,data.limit,"The requested result limit. schema: {""type"": ""integer"", ""format"": ""int32""} schema: {""type"": ""integer"", ""format"": ""int32""}"
get-/v1/public/comics/{comicid},ComicDataContainer,total,data.total,"The total number of resources available given the current filter set. schema: {""type"": ""integer"", ""format"": ""int32""} schema: {""type"": ""integer"", ""format"": ""int32""}"
get-/v1/public/comics/{comicid},ComicDataContainer,count,data.count,"The total number of results returned by this call. schema: {""type"": ""integer"", ""format"": ""int32""} schema: {""type"": ""integer"", ""format"": ""int32""}"
get-/v1/public/comics/{comicid},Comic,id,data.results.id,"The unique ID of the comic resource. schema: {""type"": ""integer"", ""format"": ""int32""} schema: {""type"": ""integer"", ""format"": ""int32""}"
get-/v1/public/comics/{comicid},Comic,digitalId,data.results.digitalId,"The ID of the digital comic representation of this comic. Will be 0 if the comic is not available digitally. schema: {""type"": ""integer"", ""format"": ""int32""} schema: {""type"": ""integer"", ""format"": ""int32""}"
get-/v1/public/comics/{comicid},Comic,issueNumber,data.results.issueNumber,"The number of the issue in the series (will generally be 0 for collection formats). schema: {""type"": ""number"", ""format"": ""double""} schema: {""type"": ""number"", ""format"": ""double""}"
get-/v1/public/comics/{comicid},Comic,isbn,data.results.isbn,"The ISBN for the comic (generally only populated for collection formats). schema: {""type"": ""string""} schema: {""type"": ""string""}"
get-/v1/public/comics/{comicid},Comic,upc,data.results.upc,"The UPC barcode number for the comic (generally only populated for periodical formats). schema: {""type"": ""string""} schema: {""type"": ""string""}"
get-/v1/public/comics/{comicid},Comic,diamondCode,data.results.diamondCode,"The Diamond code for the comic. schema: {""type"": ""string""} schema: {""type"": ""string""}"
get-/v1/public/comics/{comicid},Comic,ean,data.results.ean,"The EAN barcode for the comic. schema: {""type"": ""string""} schema: {""type"": ""string""}"
get-/v1/public/comics/{comicid},Comic,issn,data.results.issn,"The ISSN barcode for the comic. schema: {""type"": ""string""} schema: {""type"": ""string""}"
get-/v1/public/comics/{comicid},Comic,format,data.results.format,"The publication format of the comic e.g. comic, hardcover, trade paperback. schema: {""type"": ""string""} schema: {""type"": ""string""}"
get-/v1/public/comics/{comicid},Comic,pageCount,data.results.pageCount,"The number of story pages in the comic. schema: {""type"": ""integer"", ""format"": ""int32""} schema: {""type"": ""integer"", ""format"": ""int32""}"
get-/v1/public/comics/{comicid},TextObject,language,data.results.textObjects.language,"The IETF language tag denoting the language the text object is written in. schema: {""type"": ""string""} schema: {""type"": ""string""}"
get-/v1/public/comics/{comicid},Comic,resourceURI,data.results.resourceURI,"The canonical URL identifier for this resource. schema: {""type"": ""string""} schema: {""type"": ""string""}"
get-/v1/public/comics/{comicid},Url,type,data.results.urls.type,"A text identifier for the URL. schema: {""type"": ""string""} schema: {""type"": ""string""}"
get-/v1/public/comics/{comicid},ComicSummary,resourceURI,data.results.variants.resourceURI,"The path to the individual comic resource. schema: {""type"": ""string""} schema: {""type"": ""string""}"
get-/v1/public/comics/{comicid},ComicSummary,resourceURI,data.results.collections.resourceURI,"The path to the individual comic resource. schema: {""type"": ""string""} schema: {""type"": ""string""}"
get-/v1/public/comics/{comicid},ComicSummary,resourceURI,data.results.collectedIssues.resourceURI,"The path to the individual comic resource. schema: {""type"": ""string""} schema: {""type"": ""string""}"
get-/v1/public/comics/{comicid},ComicDate,type,data.results.dates.type,"A description of the date (e.g. onsale date, FOC date). schema: {""type"": ""string""} schema: {""type"": ""string""}"
get-/v1/public/comics/{comicid},ComicDate,date,data.results.dates.date,"The date. schema: {""type"": ""string""} schema: {""type"": ""string""}"
get-/v1/public/comics/{comicid},ComicPrice,type,data.results.prices.type,"A description of the price (e.g. print price, digital price). schema: {""type"": ""string""} schema: {""type"": ""string""}"
get-/v1/public/comics/{comicid},ComicPrice,price,data.results.prices.price,"The price (all prices in USD). schema: {""type"": ""number"", ""format"": ""float""} schema: {""type"": ""number"", ""format"": ""float""}"
get-/v1/public/comics/{comicid},Image,path,data.results.thumbnail.path,"The directory path of to the image. schema: {""type"": ""string""} schema: {""type"": ""string""}"
get-/v1/public/comics/{comicid},Image,path,data.results.images.path,"The directory path of to the image. schema: {""type"": ""string""} schema: {""type"": ""string""}"
get-/v1/public/comics/{comicid},Image,extension,data.results.thumbnail.extension,"The file extension for the image. schema: {""type"": ""string""} schema: {""type"": ""string""}"
get-/v1/public/comics/{comicid},Image,extension,data.results.images.extension,"The file extension for the image. schema: {""type"": ""string""} schema: {""type"": ""string""}"
get-/v1/public/comics/{comicid},CreatorList,available,data.results.creators.available,"The number of total available creators in this list. Will always be greater than or equal to the ""returned"" value. schema: {""type"": ""integer"", ""format"": ""int32""} schema: {""type"": ""integer"", ""format"": ""int32""}"
get-/v1/public/comics/{comicid},CreatorList,returned,data.results.creators.returned,"The number of creators returned in this collection (up to 20). schema: {""type"": ""integer"", ""format"": ""int32""} schema: {""type"": ""integer"", ""format"": ""int32""}"
get-/v1/public/comics/{comicid},CharacterList,available,data.results.characters.available,"The number of total available characters in this list. Will always be greater than or equal to the ""returned"" value. schema: {""type"": ""integer"", ""format"": ""int32""} schema: {""type"": ""integer"", ""format"": ""int32""}"
get-/v1/public/comics/{comicid},CharacterList,returned,data.results.characters.returned,"The number of characters returned in this collection (up to 20). schema: {""type"": ""integer"", ""format"": ""int32""} schema: {""type"": ""integer"", ""format"": ""int32""}"
get-/v1/public/comics/{comicid},StoryList,available,data.results.stories.available,"The number of total available stories in this list. Will always be greater than or equal to the ""returned"" value. schema: {""type"": ""integer"", ""format"": ""int32""} schema: {""type"": ""integer"", ""format"": ""int32""}"
get-/v1/public/comics/{comicid},StoryList,returned,data.results.stories.returned,"The number of stories returned in this collection (up to 20). schema: {""type"": ""integer"", ""format"": ""int32""} schema: {""type"": ""integer"", ""format"": ""int32""}"
get-/v1/public/comics/{comicid},EventList,available,data.results.events.available,"The number of total available events in this list. Will always be greater than or equal to the ""returned"" value. schema: {""type"": ""integer"", ""format"": ""int32""} schema: {""type"": ""integer"", ""format"": ""int32""}"
