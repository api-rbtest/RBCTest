endpoint,group,response resource,attribute,description
get+v1_public_comics_{comicid},data.results.id,Comic,id,Attribute comicId is responded to by parameter Comic with a description: A single comic
get+v1_public_comics_{comicid},data.offset,ComicDataContainer,offset,"The requested offset (number of skipped results) of the call. schema: {""type"": ""integer"", ""format"": ""int32""} schema: {""type"": ""integer"", ""format"": ""int32""}"
get+v1_public_comics_{comicid},data.limit,ComicDataContainer,limit,"The requested result limit. schema: {""type"": ""integer"", ""format"": ""int32""} schema: {""type"": ""integer"", ""format"": ""int32""}"
get+v1_public_comics_{comicid},data.total,ComicDataContainer,total,"The total number of resources available given the current filter set. schema: {""type"": ""integer"", ""format"": ""int32""} schema: {""type"": ""integer"", ""format"": ""int32""}"
get+v1_public_comics_{comicid},data.count,ComicDataContainer,count,"The total number of results returned by this call. schema: {""type"": ""integer"", ""format"": ""int32""} schema: {""type"": ""integer"", ""format"": ""int32""}"
get+v1_public_comics_{comicid},data.results.id,Comic,id,"The unique ID of the comic resource. schema: {""type"": ""integer"", ""format"": ""int32""} schema: {""type"": ""integer"", ""format"": ""int32""}"
get+v1_public_comics_{comicid},data.results.digitalId,Comic,digitalId,"The ID of the digital comic representation of this comic. Will be 0 if the comic is not available digitally. schema: {""type"": ""integer"", ""format"": ""int32""} schema: {""type"": ""integer"", ""format"": ""int32""}"
get+v1_public_comics_{comicid},data.results.issueNumber,Comic,issueNumber,"The number of the issue in the series (will generally be 0 for collection formats). schema: {""type"": ""number"", ""format"": ""double""} schema: {""type"": ""number"", ""format"": ""double""}"
get+v1_public_comics_{comicid},data.results.isbn,Comic,isbn,"The ISBN for the comic (generally only populated for collection formats). schema: {""type"": ""string""} schema: {""type"": ""string""}"
get+v1_public_comics_{comicid},data.results.upc,Comic,upc,"The UPC barcode number for the comic (generally only populated for periodical formats). schema: {""type"": ""string""} schema: {""type"": ""string""}"
get+v1_public_comics_{comicid},data.results.diamondCode,Comic,diamondCode,"The Diamond code for the comic. schema: {""type"": ""string""} schema: {""type"": ""string""}"
get+v1_public_comics_{comicid},data.results.ean,Comic,ean,"The EAN barcode for the comic. schema: {""type"": ""string""} schema: {""type"": ""string""}"
get+v1_public_comics_{comicid},data.results.issn,Comic,issn,"The ISSN barcode for the comic. schema: {""type"": ""string""} schema: {""type"": ""string""}"
get+v1_public_comics_{comicid},data.results.format,Comic,format,"The publication format of the comic e.g. comic, hardcover, trade paperback. schema: {""type"": ""string""} schema: {""type"": ""string""}"
get+v1_public_comics_{comicid},data.results.pageCount,Comic,pageCount,"The number of story pages in the comic. schema: {""type"": ""integer"", ""format"": ""int32""} schema: {""type"": ""integer"", ""format"": ""int32""}"
get+v1_public_comics_{comicid},data.results.textObjects.language,TextObject,language,"The IETF language tag denoting the language the text object is written in. schema: {""type"": ""string""} schema: {""type"": ""string""}"
get+v1_public_comics_{comicid},data.results.resourceURI,Comic,resourceURI,"The canonical URL identifier for this resource. schema: {""type"": ""string""} schema: {""type"": ""string""}"
get+v1_public_comics_{comicid},data.results.urls.type,Url,type,"A text identifier for the URL. schema: {""type"": ""string""} schema: {""type"": ""string""}"
get+v1_public_comics_{comicid},data.results.variants.resourceURI,ComicSummary,resourceURI,"The path to the individual comic resource. schema: {""type"": ""string""} schema: {""type"": ""string""}"
get+v1_public_comics_{comicid},data.results.collections.resourceURI,ComicSummary,resourceURI,"The path to the individual comic resource. schema: {""type"": ""string""} schema: {""type"": ""string""}"
get+v1_public_comics_{comicid},data.results.collectedIssues.resourceURI,ComicSummary,resourceURI,"The path to the individual comic resource. schema: {""type"": ""string""} schema: {""type"": ""string""}"
get+v1_public_comics_{comicid},data.results.dates.type,ComicDate,type,"A description of the date (e.g. onsale date, FOC date). schema: {""type"": ""string""} schema: {""type"": ""string""}"
get+v1_public_comics_{comicid},data.results.dates.date,ComicDate,date,"The date. schema: {""type"": ""string""} schema: {""type"": ""string""}"
get+v1_public_comics_{comicid},data.results.prices.type,ComicPrice,type,"A description of the price (e.g. print price, digital price). schema: {""type"": ""string""} schema: {""type"": ""string""}"
get+v1_public_comics_{comicid},data.results.prices.price,ComicPrice,price,"The price (all prices in USD). schema: {""type"": ""number"", ""format"": ""float""} schema: {""type"": ""number"", ""format"": ""float""}"
get+v1_public_comics_{comicid},data.results.thumbnail.path,Image,path,"The directory path of to the image. schema: {""type"": ""string""} schema: {""type"": ""string""}"
get+v1_public_comics_{comicid},data.results.images.path,Image,path,"The directory path of to the image. schema: {""type"": ""string""} schema: {""type"": ""string""}"
get+v1_public_comics_{comicid},data.results.thumbnail.extension,Image,extension,"The file extension for the image. schema: {""type"": ""string""} schema: {""type"": ""string""}"
get+v1_public_comics_{comicid},data.results.images.extension,Image,extension,"The file extension for the image. schema: {""type"": ""string""} schema: {""type"": ""string""}"
get+v1_public_comics_{comicid},data.results.creators.available,CreatorList,available,"The number of total available creators in this list. Will always be greater than or equal to the ""returned"" value. schema: {""type"": ""integer"", ""format"": ""int32""} schema: {""type"": ""integer"", ""format"": ""int32""}"
get+v1_public_comics_{comicid},data.results.creators.returned,CreatorList,returned,"The number of creators returned in this collection (up to 20). schema: {""type"": ""integer"", ""format"": ""int32""} schema: {""type"": ""integer"", ""format"": ""int32""}"
get+v1_public_comics_{comicid},data.results.characters.available,CharacterList,available,"The number of total available characters in this list. Will always be greater than or equal to the ""returned"" value. schema: {""type"": ""integer"", ""format"": ""int32""} schema: {""type"": ""integer"", ""format"": ""int32""}"
get+v1_public_comics_{comicid},data.results.characters.returned,CharacterList,returned,"The number of characters returned in this collection (up to 20). schema: {""type"": ""integer"", ""format"": ""int32""} schema: {""type"": ""integer"", ""format"": ""int32""}"
get+v1_public_comics_{comicid},data.results.stories.available,StoryList,available,"The number of total available stories in this list. Will always be greater than or equal to the ""returned"" value. schema: {""type"": ""integer"", ""format"": ""int32""} schema: {""type"": ""integer"", ""format"": ""int32""}"
get+v1_public_comics_{comicid},data.results.stories.returned,StoryList,returned,"The number of stories returned in this collection (up to 20). schema: {""type"": ""integer"", ""format"": ""int32""} schema: {""type"": ""integer"", ""format"": ""int32""}"
get+v1_public_comics_{comicid},data.results.events.available,EventList,available,"The number of total available events in this list. Will always be greater than or equal to the ""returned"" value. schema: {""type"": ""integer"", ""format"": ""int32""} schema: {""type"": ""integer"", ""format"": ""int32""}"
