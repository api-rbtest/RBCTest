operation,response resource,attribute,group,description
get-/shopping/hotel-offers,HotelOffer,id,data.offers.id,"Unique identifier of this offer. Might be valid for a temporary period only. schema: {""example"": ""63A93695B58821ABB0EC2B33FE9FAB24D72BF34B1BD7D707293763D8D9378FC3"", ""type"": ""string"", ""minLength"": 2, ""maxLength"": 100, ""pattern"": ""^[A-Z0-9]*$""} schema: {""example"": ""63A93695B58821ABB0EC2B33FE9FAB24D72BF34B1BD7D707293763D8D9378FC3"", ""type"": ""string"", ""minLength"": 2, ""maxLength"": 100, ""pattern"": ""^[A-Z0-9]*$""}"
get-/shopping/hotel-offers,HotelOffer,checkInDate,data.offers.checkInDate,"check-in date of the stay (hotel local date). Format YYYY-MM-DD
The lowest accepted value is today date (no dates in the past). schema: {""example"": ""2020-12-30"", ""type"": ""string"", ""format"": ""date""} schema: {""example"": ""2020-12-30"", ""type"": ""string"", ""format"": ""date""}"
get-/shopping/hotel-offers,HotelOffer,checkOutDate,data.offers.checkOutDate,"check-out date of the stay (hotel local date). Format YYYY-MM-DD
The lowest accepted value is `checkInDate`+1. schema: {""example"": ""2020-12-31"", ""type"": ""string"", ""format"": ""date""} schema: {""example"": ""2020-12-31"", ""type"": ""string"", ""format"": ""date""}"
get-/shopping/hotel-offers,HotelOffer,roomQuantity,data.offers.roomQuantity,"number of rooms (1-9) schema: {""example"": ""1"", ""type"": ""string""} schema: {""example"": ""1"", ""type"": ""string""}"
get-/shopping/hotel-offers,HotelOffer,rateCode,data.offers.rateCode,"Special Rate - Provider Response Code (3 chars)
Examples

  * RAC - Rack

  * BAR - Best Available Rate

  * PRO - Promotional

  * COR - Corporate

  * GOV - Government (qualified)

  * AAA - AAA (qualified)

  * BNB - Bed and Breakfast

  * PKG - Package

  * TVL - Travel Industry

  * SPC - Special Promo Rate

  * WKD - Weekend

  * CON - Convention

  * SNR - Senior (Europe) (qualified)

  * ARP - AARP - American Association of Retired People (50+) (qualified)

  * SRS - Senior (qualified)

  * ROR - Room Only Rate (no breakfast)

  * FAM - Family

  * DAY - Day rate schema: {""example"": ""RAC"", ""type"": ""string"", ""minLength"": 3, ""maxLength"": 3, ""pattern"": ""^[A-Z0-9*]{3}$""} schema: {""example"": ""RAC"", ""type"": ""string"", ""minLength"": 3, ""maxLength"": 3, ""pattern"": ""^[A-Z0-9*]{3}$""}"
get-/shopping/hotel-offers,HotelProduct_RateFamily,code,data.offers.rateFamilyEstimated.code,"The estimated rate family (PRO,FAM,GOV) schema: {""type"": ""string"", ""pattern"": ""[A-Z0-9]{3}""} schema: {""type"": ""string"", ""pattern"": ""[A-Z0-9]{3}""}"
get-/shopping/hotel-offers,HotelProduct_RateFamily,type,data.offers.rateFamilyEstimated.type,"The type of the rate (public=P, negotiated=N, conditional=C) schema: {""type"": ""string"", ""pattern"": ""[PNC]""} schema: {""type"": ""string"", ""pattern"": ""[PNC]""}"
get-/shopping/hotel-offers,HotelOffer,category,data.offers.category,"Special Rate Category
Examples:
  ASSOCIATION
  FAMILY_PLAN schema: {""example"": ""FAMILY_PLAN"", ""type"": ""string""} schema: {""example"": ""FAMILY_PLAN"", ""type"": ""string""}"
get-/shopping/hotel-offers,QualifiedFreeText,lang,data.offers.description.lang,"see RFC 5646 schema: {""example"": ""fr-FR"", ""type"": ""string""} schema: {""example"": ""fr-FR"", ""type"": ""string""}"
get-/shopping/hotel-offers,QualifiedFreeText,lang,data.offers.commission.description.lang,"see RFC 5646 schema: {""example"": ""fr-FR"", ""type"": ""string""} schema: {""example"": ""fr-FR"", ""type"": ""string""}"
get-/shopping/hotel-offers,QualifiedFreeText,lang,data.offers.room.description.lang,"see RFC 5646 schema: {""example"": ""fr-FR"", ""type"": ""string""} schema: {""example"": ""fr-FR"", ""type"": ""string""}"
get-/shopping/hotel-offers,QualifiedFreeText,lang,data.offers.policies.guarantee.description.lang,"see RFC 5646 schema: {""example"": ""fr-FR"", ""type"": ""string""} schema: {""example"": ""fr-FR"", ""type"": ""string""}"
get-/shopping/hotel-offers,QualifiedFreeText,lang,data.offers.policies.deposit.description.lang,"see RFC 5646 schema: {""example"": ""fr-FR"", ""type"": ""string""} schema: {""example"": ""fr-FR"", ""type"": ""string""}"
get-/shopping/hotel-offers,QualifiedFreeText,lang,data.offers.policies.prepay.description.lang,"see RFC 5646 schema: {""example"": ""fr-FR"", ""type"": ""string""} schema: {""example"": ""fr-FR"", ""type"": ""string""}"
get-/shopping/hotel-offers,QualifiedFreeText,lang,data.offers.policies.cancellation.description.lang,"see RFC 5646 schema: {""example"": ""fr-FR"", ""type"": ""string""} schema: {""example"": ""fr-FR"", ""type"": ""string""}"
get-/shopping/hotel-offers,QualifiedFreeText,lang,data.offers.policies.checkInOut.checkInDescription.lang,"see RFC 5646 schema: {""example"": ""fr-FR"", ""type"": ""string""} schema: {""example"": ""fr-FR"", ""type"": ""string""}"
get-/shopping/hotel-offers,QualifiedFreeText,lang,data.offers.policies.checkInOut.checkOutDescription.lang,"see RFC 5646 schema: {""example"": ""fr-FR"", ""type"": ""string""} schema: {""example"": ""fr-FR"", ""type"": ""string""}"
get-/shopping/hotel-offers,HotelProduct_Commission,percentage,data.offers.commission.percentage,"Percentage of the commission paid to the travel seller. Value is between 0 and 100 schema: {""type"": ""string""} schema: {""type"": ""string""}"
get-/shopping/hotel-offers,HotelProduct_RoomDetails,type,data.offers.room.type,"Room type code, 3 character identifier of the room.
The first character identifies the room type category. 
The second numeric character identifies the number of beds. 
The third character identifies the bed type. 
There is a special case where ROH is returned, this value stands for Run Of House. schema: {""type"": ""string"", ""pattern"": ""^[A-Z0-9*]{3}$""} schema: {""type"": ""string"", ""pattern"": ""^[A-Z0-9*]{3}$""}"
get-/shopping/hotel-offers,HotelProduct_EstimatedRoomType,beds,data.offers.room.typeEstimated.beds,"Number of beds in the room (1-9) schema: {""type"": ""integer"", ""format"": ""int32""} schema: {""type"": ""integer"", ""format"": ""int32""}"
get-/shopping/hotel-offers,HotelProduct_Guests,adults,data.offers.guests.adults,"number of adult guests (1-9) per room schema: {""example"": 2, ""type"": ""integer"", ""minimum"": 1, ""maximum"": 9, ""format"": ""int32""} schema: {""example"": 2, ""type"": ""integer"", ""minimum"": 1, ""maximum"": 9, ""format"": ""int32""}"
get-/shopping/hotel-offers,HotelProduct_Guests,childAges,data.offers.guests.childAges,"Comma separated list of ages of each child at the time of check-out from the hotel. If several children have the same age, the ages will be repeated. schema: {""type"": ""array"", ""minimum"": 0, ""maximum"": 20} schema: {""type"": ""array"", ""minimum"": 0, ""maximum"": 20}"
get-/shopping/hotel-offers,HotelProduct_HotelPrice,sellingTotal,data.offers.price.sellingTotal,"sellingTotal = Total + margins + markup + totalFees - discounts schema: {""type"": ""string""} schema: {""type"": ""string""}"
get-/shopping/hotel-offers,HotelProduct_HotelPrice,total,data.offers.price.total,"total = base + totalTaxes schema: {""type"": ""string""} schema: {""type"": ""string""}"
get-/shopping/hotel-offers,Tax,currency,data.offers.price.taxes.currency,"Defines a monetary unit. It is a three alpha code (iata code). Example: EUR for Euros, USD for US dollar, etc. schema: {""type"": ""string"", ""minLength"": 1, ""maxLength"": 3} schema: {""type"": ""string"", ""minLength"": 1, ""maxLength"": 3}"
get-/shopping/hotel-offers,HotelProduct_PriceVariation,startDate,data.offers.price.variations.changes.startDate,"Begin date of the period
Format: YYYY-MM-DD schema: {""type"": ""string"", ""format"": ""date""} schema: {""type"": ""string"", ""format"": ""date""}"
get-/shopping/hotel-offers,HotelProduct_PriceVariation,endDate,data.offers.price.variations.changes.endDate,"End date of the period
Format: YYYY-MM-DD schema: {""type"": ""string"", ""format"": ""date""} schema: {""type"": ""string"", ""format"": ""date""}"
get-/shopping/hotel-offers,HotelProduct_PriceVariation,currency,data.offers.price.variations.changes.currency,"currency Code apply to all elements of the price schema: {""type"": ""string""} schema: {""type"": ""string""}"
get-/shopping/hotel-offers,HotelProduct_PriceVariation,sellingTotal,data.offers.price.variations.changes.sellingTotal,"sellingTotal = Total + margins + markup + totalFees - discounts schema: {""type"": ""string""} schema: {""type"": ""string""}"
get-/shopping/hotel-offers,HotelProduct_PriceVariation,total,data.offers.price.variations.changes.total,"total = base + totalTaxes schema: {""type"": ""string""} schema: {""type"": ""string""}"
get-/shopping/hotel-offers,HotelProduct_PaymentPolicy,creditCards,data.offers.policies.guarantee.acceptedPayments.creditCards,"Accepted Payment Card Types for the `method` CREDIT_CARD schema: {""type"": ""array"", ""minLength"": 2, ""maxLength"": 2, ""pattern"": ""^[A-Z]{2}$""} schema: {""type"": ""array"", ""minLength"": 2, ""maxLength"": 2, ""pattern"": ""^[A-Z]{2}$""}"
get-/shopping/hotel-offers,HotelProduct_PaymentPolicy,creditCards,data.offers.policies.deposit.acceptedPayments.creditCards,"Accepted Payment Card Types for the `method` CREDIT_CARD schema: {""type"": ""array"", ""minLength"": 2, ""maxLength"": 2, ""pattern"": ""^[A-Z]{2}$""} schema: {""type"": ""array"", ""minLength"": 2, ""maxLength"": 2, ""pattern"": ""^[A-Z]{2}$""}"
get-/shopping/hotel-offers,HotelProduct_PaymentPolicy,creditCards,data.offers.policies.prepay.acceptedPayments.creditCards,"Accepted Payment Card Types for the `method` CREDIT_CARD schema: {""type"": ""array"", ""minLength"": 2, ""maxLength"": 2, ""pattern"": ""^[A-Z]{2}$""} schema: {""type"": ""array"", ""minLength"": 2, ""maxLength"": 2, ""pattern"": ""^[A-Z]{2}$""}"
get-/shopping/hotel-offers,HotelProduct_CancellationPolicy,numberOfNights,data.offers.policies.cancellation.numberOfNights,"Number of nights due as fee in case of cancellation. schema: {""type"": ""integer"", ""minimum"": 0, ""format"": ""int32""} schema: {""type"": ""integer"", ""minimum"": 0, ""format"": ""int32""}"
get-/shopping/hotel-offers,HotelProduct_CheckInOutPolicy,checkIn,data.offers.policies.checkInOut.checkIn,"Check-in From time limit in ISO-8601 format [http://www.w3.org/TR/xmlschema-2/#time] schema: {""example"": ""13:00:00"", ""type"": ""string""} schema: {""example"": ""13:00:00"", ""type"": ""string""}"
get-/shopping/hotel-offers,HotelProduct_CheckInOutPolicy,checkOut,data.offers.policies.checkInOut.checkOut,"Check-out Until time limit in ISO-8601 format [http://www.w3.org/TR/xmlschema-2/#time] schema: {""example"": ""11:00:00"", ""type"": ""string""} schema: {""example"": ""11:00:00"", ""type"": ""string""}"
get-/shopping/hotel-offers,Hotel,hotelId,data.hotel.hotelId,"Amadeus Property Code (8 chars) schema: {""example"": ""ADPAR001"", ""type"": ""string"", ""pattern"": ""^[A-Z0-9]{8}$""} schema: {""example"": ""ADPAR001"", ""type"": ""string"", ""pattern"": ""^[A-Z0-9]{8}$""}"
get-/shopping/hotel-offers,Hotel,chainCode,data.hotel.chainCode,"Brand (RT...) or Merchant (AD...) (Amadeus 2 chars Code) schema: {""example"": ""AD"", ""type"": ""string"", ""pattern"": ""^[A-Z]{2}$""} schema: {""example"": ""AD"", ""type"": ""string"", ""pattern"": ""^[A-Z]{2}$""}"
get-/shopping/hotel-offers,Hotel,brandCode,data.hotel.brandCode,"Brand (RT...) (Amadeus 2 chars Code). Small Properties distributed by Merchants may not have a Brand.
Example - AD (Value Hotels) is the Provider/Merchant, and RT (Accor) is the Brand of the Property schema: {""example"": ""RT"", ""type"": ""string"", ""pattern"": ""^[A-Z]{2}$""} schema: {""example"": ""RT"", ""type"": ""string"", ""pattern"": ""^[A-Z]{2}$""}"
get-/shopping/hotel-offers,Hotel,cityCode,data.hotel.cityCode,"Warning: The IATA city code associated to the hotel (not necessary the real Hotel City) schema: {""example"": ""PAR"", ""type"": ""string"", ""pattern"": ""^[A-Z]{3}$""} schema: {""example"": ""PAR"", ""type"": ""string"", ""pattern"": ""^[A-Z]{3}$""}"
get-/shopping/hotel-offers,Hotel,latitude,data.hotel.latitude,"Latitude schema: {""type"": ""number""} schema: {""type"": ""number""}"
get-/shopping/hotel-offers,Hotel,longitude,data.hotel.longitude,"Longitude schema: {""type"": ""number""} schema: {""type"": ""number""}"
