endpoint,group,response resource,attribute,description,tp
post+orgs_{org}_repos,name,repository,name,Attribute name is responded to by parameter repository with a description: The name of the repository,0
post+orgs_{org}_repos,description,repository,description,Attribute description is responded to by parameter repository with a description: A short description of the repository,1
post+orgs_{org}_repos,homepage,repository,homepage,Attribute homepage is responded to by parameter repository with a description: A URL with more information about the repository,1
post+orgs_{org}_repos,private,repository,private,Attribute private is responded to by parameter repository with a description: Whether the repository is private,0
post+orgs_{org}_repos,visibility,repository,visibility,"Attribute visibility is responded to by parameter repository with a description: Can be `public` or `private`. If your organization is associated with an enterprise account using GitHub Enterprise Cloud or GitHub Enterprise Server 2.20+, `visibility` can also be `internal`. Note: For GitHub Enterprise Server and GitHub AE, this endpoint will only list repositories available to all users on the enterprise. For more information, see ""[Creating an internal repository](https://help.github.com/en/github/creating-cloning-and-archiving-repositories/about-repository-visibility#about-internal-repositories)"" in the GitHub Help documentation.  
The `visibility` parameter overrides the `private` parameter when you use both parameters with the `nebula-preview` preview header",1
post+orgs_{org}_repos,has_issues,repository,has_issues,Attribute has_issues is responded to by parameter repository with a description: Either `true` to enable issues for this repository or `false` to disable them,1
post+orgs_{org}_repos,has_projects,repository,has_projects,"Attribute has_projects is responded to by parameter repository with a description: Either `true` to enable projects for this repository or `false` to disable them. **Note:** If you're creating a repository in an organization that has disabled repository projects, the default is `false`, and if you pass `true`, the API returns an error",1
post+orgs_{org}_repos,has_wiki,repository,has_wiki,Attribute has_wiki is responded to by parameter repository with a description: Either `true` to enable the wiki for this repository or `false` to disable it,1
post+orgs_{org}_repos,is_template,repository,is_template,Attribute is_template is responded to by parameter repository with a description: Either `true` to make this repo available as a template repository or `false` to prevent it,1
post+orgs_{org}_repos,license.key,license-simple,key,"Attribute license_template is responded to by parameter license-simple with a description: Choose an [open source license template](https://choosealicense.com/) that best suits your needs, and then use the [license keyword](https://help.github.com/articles/licensing-a-repository/#searching-github-by-license-type) as the `license_template` string. For example, ""mit"" or ""mpl-2.0""",0
post+orgs_{org}_repos,allow_squash_merge,repository,allow_squash_merge,"Attribute allow_squash_merge is responded to by parameter repository with a description: Either `true` to allow squash-merging pull requests, or `false` to prevent squash-merging",1
post+orgs_{org}_repos,allow_merge_commit,repository,allow_merge_commit,"Attribute allow_merge_commit is responded to by parameter repository with a description: Either `true` to allow merging pull requests with a merge commit, or `false` to prevent merging pull requests with merge commits",0
post+orgs_{org}_repos,allow_rebase_merge,repository,allow_rebase_merge,"Attribute allow_rebase_merge is responded to by parameter repository with a description: Either `true` to allow rebase-merging pull requests, or `false` to prevent rebase-merging",1
post+orgs_{org}_repos,delete_branch_on_merge,repository,delete_branch_on_merge,"Attribute delete_branch_on_merge is responded to by parameter repository with a description: Either `true` to allow automatically deleting head branches when pull requests are merged, or `false` to prevent automatic deletion",1
post+orgs_{org}_repos,has_downloads,repository,has_downloads,"Whether downloads are enabled, schema: {""type"": ""boolean"", ""example"": true}",0
post+orgs_{org}_repos,deployments_url,repository,deployments_url,"{""type"": ""string"", ""format"": ""uri""}",1
post+orgs_{org}_repos,assignees_url,repository,assignees_url,"{""type"": ""string"", ""example"": ""http://api.github.com/repos/octocat/Hello-World/assignees{/user}""}",1
post+orgs_{org}_repos,statuses_url,repository,statuses_url,"{""type"": ""string"", ""example"": ""http://api.github.com/repos/octocat/Hello-World/statuses/{sha}""}",1
post+orgs_{org}_repos,has_projects,repository,has_projects,"Whether projects are enabled, schema: {""type"": ""boolean"", ""example"": true}",0
post+orgs_{org}_repos,visibility,repository,visibility,"The repository visibility: public, private, or internal",1
post+orgs_{org}_repos,issues_url,repository,issues_url,"{""type"": ""string"", ""example"": ""http://api.github.com/repos/octocat/Hello-World/issues{/number}""}",1
post+orgs_{org}_repos,owner.html_url,simple-user,html_url,"{""type"": ""string"", ""format"": ""uri""}",1
post+orgs_{org}_repos,organization.html_url,simple-user,html_url,"{""type"": ""string"", ""format"": ""uri""}",1
post+orgs_{org}_repos,template_repository.owner.html_url,simple-user,html_url,"{""type"": ""string"", ""format"": ""uri""}",1
post+orgs_{org}_repos,template_repository.html_url,simple-user,html_url,"{""type"": ""string"", ""format"": ""uri""}",1
post+orgs_{org}_repos,owner.gists_url,simple-user,gists_url,"{""type"": ""string"", ""example"": ""https://api.github.com/users/octocat/gists{/gist_id}""}",1
post+orgs_{org}_repos,organization.gists_url,simple-user,gists_url,"{""type"": ""string"", ""example"": ""https://api.github.com/users/octocat/gists{/gist_id}""}",1
post+orgs_{org}_repos,template_repository.owner.gists_url,simple-user,gists_url,"{""type"": ""string"", ""example"": ""https://api.github.com/users/octocat/gists{/gist_id}""}",1
post+orgs_{org}_repos,owner.url,simple-user,url,"{""type"": ""string"", ""format"": ""uri""}",1
post+orgs_{org}_repos,organization.url,simple-user,url,"{""type"": ""string"", ""format"": ""uri""}",1
post+orgs_{org}_repos,template_repository.owner.url,simple-user,url,"{""type"": ""string"", ""format"": ""uri""}",1
post+orgs_{org}_repos,template_repository.url,simple-user,url,"{""type"": ""string"", ""format"": ""uri""}",1
post+orgs_{org}_repos,owner.followers_url,simple-user,followers_url,"{""type"": ""string"", ""format"": ""uri""}",1
post+orgs_{org}_repos,organization.followers_url,simple-user,followers_url,"{""type"": ""string"", ""format"": ""uri""}",1
post+orgs_{org}_repos,template_repository.owner.followers_url,simple-user,followers_url,"{""type"": ""string"", ""format"": ""uri""}",1
post+orgs_{org}_repos,is_template,repository,is_template,"Whether this repository acts as a template that can be used to generate new repositories, schema: {""type"": ""boolean"", ""example"": true}",0
post+orgs_{org}_repos,starred_at,repository,starred_at,"{""type"": ""string"", ""example"": ""\""2020-07-09T00:17:42Z\""""}",1
post+orgs_{org}_repos,owner.starred_at,simple-user,starred_at,"{""type"": ""string"", ""example"": ""\""2020-07-09T00:17:55Z\""""}",1
post+orgs_{org}_repos,organization.starred_at,simple-user,starred_at,"{""type"": ""string"", ""example"": ""\""2020-07-09T00:17:55Z\""""}",1
post+orgs_{org}_repos,forks_url,repository,forks_url,"{""type"": ""string"", ""format"": ""uri""}",1
post+orgs_{org}_repos,allow_squash_merge,repository,allow_squash_merge,"Whether to allow squash merges for pull requests, schema: {""type"": ""boolean"", ""example"": true}",0
post+orgs_{org}_repos,milestones_url,repository,milestones_url,"{""type"": ""string"", ""example"": ""http://api.github.com/repos/octocat/Hello-World/milestones{/number}""}",1
post+orgs_{org}_repos,id,repository,id,"Unique identifier of the repository, schema: {""type"": ""integer"", ""example"": 42}",0
post+orgs_{org}_repos,compare_url,repository,compare_url,"{""type"": ""string"", ""example"": ""http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}""}",1
post+orgs_{org}_repos,subscription_url,repository,subscription_url,"{""type"": ""string"", ""format"": ""uri""}",1
post+orgs_{org}_repos,git_commits_url,repository,git_commits_url,"{""type"": ""string"", ""example"": ""http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}""}",1
post+orgs_{org}_repos,blobs_url,repository,blobs_url,"{""type"": ""string"", ""example"": ""http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}""}",1
post+orgs_{org}_repos,license.html_url,license-simple,html_url,"{""type"": ""string"", ""format"": ""uri""}",1
post+orgs_{org}_repos,branches_url,repository,branches_url,"{""type"": ""string"", ""example"": ""http://api.github.com/repos/octocat/Hello-World/branches{/branch}""}",1
post+orgs_{org}_repos,license.url,license-simple,url,"{""type"": ""string"", ""format"": ""uri""}",1
post+orgs_{org}_repos,created_at,repository,created_at,"{""type"": ""string"", ""format"": ""date-time""}",1
post+orgs_{org}_repos,archive_url,repository,archive_url,"{""type"": ""string"", ""example"": ""http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}""}",1
post+orgs_{org}_repos,updated_at,repository,updated_at,"{""type"": ""string"", ""format"": ""date-time""}",1
post+orgs_{org}_repos,homepage,repository,homepage,"{""type"": ""string"", ""format"": ""uri""}",1
post+orgs_{org}_repos,pulls_url,repository,pulls_url,"{""type"": ""string"", ""example"": ""http://api.github.com/repos/octocat/Hello-World/pulls{/number}""}",1
post+orgs_{org}_repos,downloads_url,repository,downloads_url,"{""type"": ""string"", ""format"": ""uri""}",1
post+orgs_{org}_repos,html_url,repository,html_url,"{""type"": ""string"", ""format"": ""uri""}",1
post+orgs_{org}_repos,private,repository,private,Whether the repository is private or public,0
post+orgs_{org}_repos,mirror_url,repository,mirror_url,"{""type"": ""string"", ""format"": ""uri""}",1
post+orgs_{org}_repos,url,repository,url,"{""type"": ""string"", ""format"": ""uri""}",1
post+orgs_{org}_repos,git_refs_url,repository,git_refs_url,"{""type"": ""string"", ""example"": ""http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}""}",1
post+orgs_{org}_repos,owner.starred_url,simple-user,starred_url,"{""type"": ""string"", ""example"": ""https://api.github.com/users/octocat/starred{/owner}{/repo}""}",1
post+orgs_{org}_repos,organization.starred_url,simple-user,starred_url,"{""type"": ""string"", ""example"": ""https://api.github.com/users/octocat/starred{/owner}{/repo}""}",1
post+orgs_{org}_repos,template_repository.owner.starred_url,simple-user,starred_url,"{""type"": ""string"", ""example"": ""https://api.github.com/users/octocat/starred{/owner}{/repo}""}",1
post+orgs_{org}_repos,owner.repos_url,simple-user,repos_url,"{""type"": ""string"", ""format"": ""uri""}",1
post+orgs_{org}_repos,organization.repos_url,simple-user,repos_url,"{""type"": ""string"", ""format"": ""uri""}",1
post+orgs_{org}_repos,template_repository.owner.repos_url,simple-user,repos_url,"{""type"": ""string"", ""format"": ""uri""}",1
post+orgs_{org}_repos,tags_url,repository,tags_url,"{""type"": ""string"", ""format"": ""uri""}",1
post+orgs_{org}_repos,owner.following_url,simple-user,following_url,"{""type"": ""string"", ""example"": ""https://api.github.com/users/octocat/following{/other_user}""}",1
post+orgs_{org}_repos,organization.following_url,simple-user,following_url,"{""type"": ""string"", ""example"": ""https://api.github.com/users/octocat/following{/other_user}""}",1
post+orgs_{org}_repos,template_repository.owner.following_url,simple-user,following_url,"{""type"": ""string"", ""example"": ""https://api.github.com/users/octocat/following{/other_user}""}",1
post+orgs_{org}_repos,comments_url,repository,comments_url,"{""type"": ""string"", ""example"": ""http://api.github.com/repos/octocat/Hello-World/comments{/number}""}",1
post+orgs_{org}_repos,owner.organizations_url,simple-user,organizations_url,"{""type"": ""string"", ""format"": ""uri""}",1
post+orgs_{org}_repos,organization.organizations_url,simple-user,organizations_url,"{""type"": ""string"", ""format"": ""uri""}",1
post+orgs_{org}_repos,template_repository.owner.organizations_url,simple-user,organizations_url,"{""type"": ""string"", ""format"": ""uri""}",1
post+orgs_{org}_repos,owner.received_events_url,simple-user,received_events_url,"{""type"": ""string"", ""format"": ""uri""}",1
post+orgs_{org}_repos,organization.received_events_url,simple-user,received_events_url,"{""type"": ""string"", ""format"": ""uri""}",1
post+orgs_{org}_repos,template_repository.owner.received_events_url,simple-user,received_events_url,"{""type"": ""string"", ""format"": ""uri""}",1
post+orgs_{org}_repos,events_url,repository,events_url,"{""type"": ""string"", ""format"": ""uri""}",1
post+orgs_{org}_repos,ssh_url,repository,ssh_url,"{""type"": ""string"", ""example"": ""git@github.com:octocat/Hello-World.git""}",1
post+orgs_{org}_repos,languages_url,repository,languages_url,"{""type"": ""string"", ""format"": ""uri""}",1
post+orgs_{org}_repos,stargazers_url,repository,stargazers_url,"{""type"": ""string"", ""format"": ""uri""}",1
post+orgs_{org}_repos,allow_rebase_merge,repository,allow_rebase_merge,"Whether to allow rebase merges for pull requests, schema: {""type"": ""boolean"", ""example"": true}",0
post+orgs_{org}_repos,collaborators_url,repository,collaborators_url,"{""type"": ""string"", ""example"": ""http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}""}",1
post+orgs_{org}_repos,allow_merge_commit,repository,allow_merge_commit,"Whether to allow merge commits for pull requests, schema: {""type"": ""boolean"", ""example"": true}",0
post+orgs_{org}_repos,clone_url,repository,clone_url,"{""type"": ""string"", ""example"": ""https://github.com/octocat/Hello-World.git""}",1
post+orgs_{org}_repos,teams_url,repository,teams_url,"{""type"": ""string"", ""format"": ""uri""}",1
post+orgs_{org}_repos,subscribers_url,repository,subscribers_url,"{""type"": ""string"", ""format"": ""uri""}",1
post+orgs_{org}_repos,has_issues,repository,has_issues,"Whether issues are enabled, schema: {""type"": ""boolean"", ""example"": true}",0
post+orgs_{org}_repos,svn_url,repository,svn_url,"{""type"": ""string"", ""format"": ""uri""}",1
post+orgs_{org}_repos,owner.subscriptions_url,simple-user,subscriptions_url,"{""type"": ""string"", ""format"": ""uri""}",1
post+orgs_{org}_repos,organization.subscriptions_url,simple-user,subscriptions_url,"{""type"": ""string"", ""format"": ""uri""}",1
post+orgs_{org}_repos,template_repository.owner.subscriptions_url,simple-user,subscriptions_url,"{""type"": ""string"", ""format"": ""uri""}",1
post+orgs_{org}_repos,hooks_url,repository,hooks_url,"{""type"": ""string"", ""format"": ""uri""}",1
post+orgs_{org}_repos,issue_events_url,repository,issue_events_url,"{""type"": ""string"", ""example"": ""http://api.github.com/repos/octocat/Hello-World/issues/events{/number}""}",1
post+orgs_{org}_repos,owner.events_url,simple-user,events_url,"{""type"": ""string"", ""example"": ""https://api.github.com/users/octocat/events{/privacy}""}",1
post+orgs_{org}_repos,organization.events_url,simple-user,events_url,"{""type"": ""string"", ""example"": ""https://api.github.com/users/octocat/events{/privacy}""}",1
post+orgs_{org}_repos,template_repository.owner.events_url,simple-user,events_url,"{""type"": ""string"", ""example"": ""https://api.github.com/users/octocat/events{/privacy}""}",1
post+orgs_{org}_repos,template_repository.events_url,simple-user,events_url,"{""type"": ""string"", ""example"": ""https://api.github.com/users/octocat/events{/privacy}""}",1
