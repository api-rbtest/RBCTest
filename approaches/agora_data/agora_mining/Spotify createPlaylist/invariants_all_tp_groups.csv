group,invariant,invariantType,variables,pptname,tp
collaborative,input.collaborative == return.collaborative,daikon.inv.binary.twoScalar.IntEqual,"(input.collaborative, return.collaborative)",main.users{user_id}playlists.createPlaylist&201(main.createPlaylist&Input):::EXIT,1.0
description,input.description == return.description,daikon.inv.binary.twoString.StringEqual,"(input.description, return.description)",main.users{user_id}playlists.createPlaylist&201(main.createPlaylist&Input):::EXIT,1.0
external_urls.spotify,"return.id is a substring of return.external_urls.spotify
return.type is a substring of return.external_urls.spotify
return.external_urls.spotify is Url
LENGTH(return.external_urls.spotify)==56","daikon.inv.binary.twoString.StdString$SubString
daikon.inv.binary.twoString.StdString$SubString
daikon.inv.unary.string.IsUrl
daikon.inv.unary.string.FixedLengthString","(return.external_urls.spotify, return.id)
(return.external_urls.spotify, return.type)
(return.external_urls.spotify)
(return.external_urls.spotify)","main.users{user_id}playlists.createPlaylist&201(main.createPlaylist&Input):::EXIT
main.users{user_id}playlists.createPlaylist&201(main.createPlaylist&Input):::EXIT
main.users{user_id}playlists.createPlaylist&201(main.createPlaylist&Input):::EXIT
main.users{user_id}playlists.createPlaylist&201(main.createPlaylist&Input):::EXIT",1.0
followers.total,"return.followers.total == return.tracks.offset
return.followers.total == return.tracks.total
return.followers.total == size(return.images[])
return.followers.total == size(return.tracks.items[])","daikon.inv.binary.twoScalar.IntEqual
daikon.inv.binary.twoScalar.IntEqual
daikon.inv.binary.twoScalar.IntEqual
daikon.inv.binary.twoScalar.IntEqual","(return.followers.total, return.tracks.offset)
(return.followers.total, return.tracks.total)
(return.followers.total, size(return.images[..]))
(return.followers.total, size(return.tracks.items[..]))","main.users{user_id}playlists.createPlaylist&201(main.createPlaylist&Input):::EXIT
main.users{user_id}playlists.createPlaylist&201(main.createPlaylist&Input):::EXIT
main.users{user_id}playlists.createPlaylist&201(main.createPlaylist&Input):::EXIT
main.users{user_id}playlists.createPlaylist&201(main.createPlaylist&Input):::EXIT",1.0
href,"return.id is a substring of return.href
return.href is a substring of return.tracks.href
return.type is a substring of return.href
return.href is Url
LENGTH(return.href)==59","daikon.inv.binary.twoString.StdString$SubString
daikon.inv.binary.twoString.StdString$SubString
daikon.inv.binary.twoString.StdString$SubString
daikon.inv.unary.string.IsUrl
daikon.inv.unary.string.FixedLengthString","(return.href, return.id)
(return.href, return.tracks.href)
(return.href, return.type)
(return.href)
(return.href)","main.users{user_id}playlists.createPlaylist&201(main.createPlaylist&Input):::EXIT
main.users{user_id}playlists.createPlaylist&201(main.createPlaylist&Input):::EXIT
main.users{user_id}playlists.createPlaylist&201(main.createPlaylist&Input):::EXIT
main.users{user_id}playlists.createPlaylist&201(main.createPlaylist&Input):::EXIT
main.users{user_id}playlists.createPlaylist&201(main.createPlaylist&Input):::EXIT",1.0
id,"return.id is a substring of return.uri
LENGTH(return.id)==22","daikon.inv.binary.twoString.StdString$SubString
daikon.inv.unary.string.FixedLengthString","(return.id, return.uri)
(return.id)","main.users{user_id}playlists.createPlaylist&201(main.createPlaylist&Input):::EXIT
main.users{user_id}playlists.createPlaylist&201(main.createPlaylist&Input):::EXIT",1.0
images,return.images[] == [],daikon.inv.unary.sequence.OneOfSequence,(return.images[..]),main.users{user_id}playlists.createPlaylist&201(main.createPlaylist&Input):::EXIT,1.0
name,input.name == return.name,daikon.inv.binary.twoString.StringEqual,"(input.name, return.name)",main.users{user_id}playlists.createPlaylist&201(main.createPlaylist&Input):::EXIT,1.0
owner.external_urls.spotify,"input.user_id is a substring of return.owner.external_urls.spotify
return.owner.type is a substring of return.owner.external_urls.spotify
return.owner.external_urls.spotify is Url","daikon.inv.binary.twoString.StdString$SubString
daikon.inv.binary.twoString.StdString$SubString
daikon.inv.unary.string.IsUrl","(input.user_id, return.owner.external_urls.spotify)
(return.owner.external_urls.spotify, return.owner.type)
(return.owner.external_urls.spotify)","main.users{user_id}playlists.createPlaylist&201(main.createPlaylist&Input):::EXIT
main.users{user_id}playlists.createPlaylist&201(main.createPlaylist&Input):::EXIT
main.users{user_id}playlists.createPlaylist&201(main.createPlaylist&Input):::EXIT",1.0
owner.followers,return.owner.followers == null,daikon.inv.unary.scalar.OneOfScalar,(return.owner.followers),main.users{user_id}playlists.createPlaylist&201(main.createPlaylist&Input):::EXIT,1.0
owner.href,"input.user_id is a substring of return.owner.href
return.owner.type is a substring of return.owner.href
return.owner.href is Url","daikon.inv.binary.twoString.StdString$SubString
daikon.inv.binary.twoString.StdString$SubString
daikon.inv.unary.string.IsUrl","(input.user_id, return.owner.href)
(return.owner.href, return.owner.type)
(return.owner.href)","main.users{user_id}playlists.createPlaylist&201(main.createPlaylist&Input):::EXIT
main.users{user_id}playlists.createPlaylist&201(main.createPlaylist&Input):::EXIT
main.users{user_id}playlists.createPlaylist&201(main.createPlaylist&Input):::EXIT",1.0
owner.id,input.user_id == return.owner.id,daikon.inv.binary.twoString.StringEqual,"(input.user_id, return.owner.id)",main.users{user_id}playlists.createPlaylist&201(main.createPlaylist&Input):::EXIT,1.0
owner.type,"return.owner.type is a substring of return.owner.uri
LENGTH(return.owner.type)==4
return.owner.type == ""user""","daikon.inv.binary.twoString.StdString$SubString
daikon.inv.unary.string.FixedLengthString
daikon.inv.unary.string.OneOfString","(return.owner.type, return.owner.uri)
(return.owner.type)
(return.owner.type)","main.users{user_id}playlists.createPlaylist&201(main.createPlaylist&Input):::EXIT
main.users{user_id}playlists.createPlaylist&201(main.createPlaylist&Input):::EXIT
main.users{user_id}playlists.createPlaylist&201(main.createPlaylist&Input):::EXIT",1.0
owner.uri,input.user_id is a substring of return.owner.uri,daikon.inv.binary.twoString.StdString$SubString,"(input.user_id, return.owner.uri)",main.users{user_id}playlists.createPlaylist&201(main.createPlaylist&Input):::EXIT,1.0
public,input.public == return.public,daikon.inv.binary.twoScalar.IntEqual,"(input.public, return.public)",main.users{user_id}playlists.createPlaylist&201(main.createPlaylist&Input):::EXIT,1.0
snapshot_id,LENGTH(return.snapshot_id)==56,daikon.inv.unary.string.FixedLengthString,(return.snapshot_id),main.users{user_id}playlists.createPlaylist&201(main.createPlaylist&Input):::EXIT,1.0
tracks.href,"return.tracks.href is Url
LENGTH(return.tracks.href)==66","daikon.inv.unary.string.IsUrl
daikon.inv.unary.string.FixedLengthString","(return.tracks.href)
(return.tracks.href)","main.users{user_id}playlists.createPlaylist&201(main.createPlaylist&Input):::EXIT
main.users{user_id}playlists.createPlaylist&201(main.createPlaylist&Input):::EXIT",1.0
tracks.items,return.tracks.items[] == [],daikon.inv.unary.sequence.OneOfSequence,(return.tracks.items[..]),main.users{user_id}playlists.createPlaylist&201(main.createPlaylist&Input):::EXIT,1.0
tracks.limit,return.tracks.limit == 100,daikon.inv.unary.scalar.OneOfScalar,(return.tracks.limit),main.users{user_id}playlists.createPlaylist&201(main.createPlaylist&Input):::EXIT,1.0
type,"return.type is a substring of return.uri
LENGTH(return.type)==8
return.type == ""playlist""","daikon.inv.binary.twoString.StdString$SubString
daikon.inv.unary.string.FixedLengthString
daikon.inv.unary.string.OneOfString","(return.type, return.uri)
(return.type)
(return.type)","main.users{user_id}playlists.createPlaylist&201(main.createPlaylist&Input):::EXIT
main.users{user_id}playlists.createPlaylist&201(main.createPlaylist&Input):::EXIT
main.users{user_id}playlists.createPlaylist&201(main.createPlaylist&Input):::EXIT",1.0
uri,LENGTH(return.uri)==39,daikon.inv.unary.string.FixedLengthString,(return.uri),main.users{user_id}playlists.createPlaylist&201(main.createPlaylist&Input):::EXIT,1.0
