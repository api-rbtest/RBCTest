{
  "components": {
    "schemas": {
      "reporting.report_type": {
        "description": "The Report Type resource corresponds to a particular type of report, such as\nthe \"Activity summary\" or \"Itemized payouts\" reports. These objects are\nidentified by an ID belonging to a set of enumerated values. See\n[API Access to Reports documentation](https://stripe.com/docs/reporting/statements/api)\nfor those Report Type IDs, along with required and optional parameters.\n\nNote that certain report types can only be run based on your live-mode data (not test-mode\ndata), and will error when queried without a [live-mode API key](https://stripe.com/docs/keys#test-live-modes).",
        "properties": {
          "data_available_end": {
            "description": "Most recent time for which this Report Type is available. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "data_available_start": {
            "description": "Earliest time for which this Report Type is available. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "default_columns": {
            "description": "List of column names that are included by default when this Report Type gets run. (If the Report Type doesn't support the `columns` parameter, this will be null.)",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "id": {
            "description": "The [ID of the Report Type](https://stripe.com/docs/reporting/statements/api#available-report-types), such as `balance.summary.1`.",
            "maxLength": 5000,
            "type": "string"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "name": {
            "description": "Human-readable name of the Report Type",
            "maxLength": 5000,
            "type": "string"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "reporting.report_type"
            ],
            "type": "string"
          },
          "updated": {
            "description": "When this Report Type was latest updated. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "version": {
            "description": "Version of the Report Type. Different versions report with the same ID will have the same purpose, but may take different run parameters or have different result schemas.",
            "type": "integer"
          }
        },
        "required": [
          "data_available_end",
          "data_available_start",
          "id",
          "livemode",
          "name",
          "object",
          "updated",
          "version"
        ],
        "title": "reporting_report_type",
        "type": "object",
        "x-expandableFields": [],
        "x-resourceId": "reporting.report_type"
      },
      "account_link": {
        "description": "Account Links are the means by which a Connect platform grants a connected account permission to access\nStripe-hosted applications, such as Connect Onboarding.\n\nRelated guide: [Connect Onboarding](https://stripe.com/docs/connect/custom/hosted-onboarding)",
        "properties": {
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "expires_at": {
            "description": "The timestamp at which this account link will expire.",
            "format": "unix-time",
            "type": "integer"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "account_link"
            ],
            "type": "string"
          },
          "url": {
            "description": "The URL for the account link.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "created",
          "expires_at",
          "object",
          "url"
        ],
        "title": "AccountLink",
        "type": "object",
        "x-expandableFields": [],
        "x-resourceId": "account_link"
      },

      "apple_pay_domain": {
        "description": "",
        "properties": {
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "domain_name": {
            "maxLength": 5000,
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "apple_pay_domain"
            ],
            "type": "string"
          }
        },
        "required": [
          "created",
          "domain_name",
          "id",
          "livemode",
          "object"
        ],
        "title": "ApplePayDomain",
        "type": "object",
        "x-expandableFields": [],
        "x-resourceId": "apple_pay_domain"
      },

      "ephemeral_key": {
        "description": "",
        "properties": {
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "expires": {
            "description": "Time at which the key will expire. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "ephemeral_key"
            ],
            "type": "string"
          },
          "secret": {
            "description": "The key's secret. You can use this value to make authorized requests to the Stripe API.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "created",
          "expires",
          "id",
          "livemode",
          "object"
        ],
        "title": "EphemeralKey",
        "type": "object",
        "x-expandableFields": [],
        "x-resourceId": "ephemeral_key"
      },

      "radar.value_list_item": {
        "description": "Value list items allow you to add specific values to a given Radar value list, which can then be used in rules.\n\nRelated guide: [Managing list items](https://stripe.com/docs/radar/lists#managing-list-items)",
        "properties": {
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "created_by": {
            "description": "The name or email address of the user who added this item to the value list.",
            "maxLength": 5000,
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "radar.value_list_item"
            ],
            "type": "string"
          },
          "value": {
            "description": "The value of the item.",
            "maxLength": 5000,
            "type": "string"
          },
          "value_list": {
            "description": "The identifier of the value list this item belongs to.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "created",
          "created_by",
          "id",
          "livemode",
          "object",
          "value",
          "value_list"
        ],
        "title": "RadarListListItem",
        "type": "object",
        "x-expandableFields": [],
        "x-resourceId": "radar.value_list_item"
      },

      "tax_rate": {
        "description": "Tax rates can be applied to [invoices](https://stripe.com/docs/billing/invoices/tax-rates), [subscriptions](https://stripe.com/docs/billing/subscriptions/taxes) and [Checkout Sessions](https://stripe.com/docs/payments/checkout/set-up-a-subscription#tax-rates) to collect tax.\n\nRelated guide: [Tax rates](https://stripe.com/docs/billing/taxes/tax-rates)",
        "properties": {
          "active": {
            "description": "Defaults to `true`. When set to `false`, this tax rate cannot be used with new applications or Checkout Sessions, but will still work for subscriptions and invoices that already have it set.",
            "type": "boolean"
          },
          "country": {
            "description": "Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "description": {
            "description": "An arbitrary string attached to the tax rate for your internal use only. It will not be visible to your customers.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "display_name": {
            "description": "The display name of the tax rates as it will appear to your customer on their receipt email, PDF, and the hosted invoice page.",
            "maxLength": 5000,
            "type": "string"
          },
          "effective_percentage": {
            "description": "Actual/effective tax rate percentage out of 100. For tax calculations with automatic_tax[enabled]=true,\nthis percentage reflects the rate actually used to calculate tax based on the product's taxability\nand whether the user is registered to collect taxes in the corresponding jurisdiction.",
            "nullable": true,
            "type": "number"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "inclusive": {
            "description": "This specifies if the tax rate is inclusive or exclusive.",
            "type": "boolean"
          },
          "jurisdiction": {
            "description": "The jurisdiction for the tax rate. You can use this label field for tax reporting purposes. It also appears on your customer’s invoice.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "jurisdiction_level": {
            "description": "The level of the jurisdiction that imposes this tax rate. Will be `null` for manually defined tax rates.",
            "enum": [
              "city",
              "country",
              "county",
              "district",
              "multiple",
              "state"
            ],
            "nullable": true,
            "type": "string"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "metadata": {
            "additionalProperties": {
              "maxLength": 500,
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
            "nullable": true,
            "type": "object"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "tax_rate"
            ],
            "type": "string"
          },
          "percentage": {
            "description": "Tax rate percentage out of 100. For tax calculations with automatic_tax[enabled]=true, this percentage includes the statutory tax rate of non-taxable jurisdictions.",
            "type": "number"
          },
          "state": {
            "description": "[ISO 3166-2 subdivision code](https://en.wikipedia.org/wiki/ISO_3166-2:US), without country prefix. For example, \"NY\" for New York, United States.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "tax_type": {
            "description": "The high-level tax type, such as `vat` or `sales_tax`.",
            "enum": [
              "amusement_tax",
              "communications_tax",
              "gst",
              "hst",
              "igst",
              "jct",
              "lease_tax",
              "pst",
              "qst",
              "rst",
              "sales_tax",
              "vat"
            ],
            "nullable": true,
            "type": "string",
            "x-stripeBypassValidation": true
          }
        },
        "required": [
          "active",
          "created",
          "display_name",
          "id",
          "inclusive",
          "livemode",
          "object",
          "percentage"
        ],
        "title": "TaxRate",
        "type": "object",
        "x-expandableFields": [],
        "x-resourceId": "tax_rate"
      },

      "test_helpers.test_clock": {
        "description": "A test clock enables deterministic control over objects in testmode. With a test clock, you can create\nobjects at a frozen time in the past or future, and advance to a specific future time to observe webhooks and state changes. After the clock advances,\nyou can either validate the current state of your scenario (and test your assumptions), change the current state of your scenario (and test more complex scenarios), or keep advancing forward in time.",
        "properties": {
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "deletes_after": {
            "description": "Time at which this clock is scheduled to auto delete.",
            "format": "unix-time",
            "type": "integer"
          },
          "frozen_time": {
            "description": "Time at which all objects belonging to this clock are frozen.",
            "format": "unix-time",
            "type": "integer"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "name": {
            "description": "The custom name supplied at creation.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "test_helpers.test_clock"
            ],
            "type": "string"
          },
          "status": {
            "description": "The status of the Test Clock.",
            "enum": [
              "advancing",
              "internal_failure",
              "ready"
            ],
            "type": "string"
          }
        },
        "required": [
          "created",
          "deletes_after",
          "frozen_time",
          "id",
          "livemode",
          "object",
          "status"
        ],
        "title": "TestClock",
        "type": "object",
        "x-expandableFields": [],
        "x-resourceId": "test_helpers.test_clock"
      },

      "webhook_endpoint": {
        "description": "You can configure [webhook endpoints](https://stripe.com/docs/webhooks/) via the API to be\nnotified about events that happen in your Stripe account or connected\naccounts.\n\nMost users configure webhooks from [the dashboard](https://dashboard.stripe.com/webhooks), which provides a user interface for registering and testing your webhook endpoints.\n\nRelated guide: [Setting up webhooks](https://stripe.com/docs/webhooks/configure)",
        "properties": {
          "api_version": {
            "description": "The API version events are rendered as for this webhook endpoint.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "application": {
            "description": "The ID of the associated Connect application.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "description": {
            "description": "An optional description of what the webhook is used for.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "enabled_events": {
            "description": "The list of events to enable for this endpoint. `['*']` indicates that all events are enabled, except those that require explicit selection.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "type": "array"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "metadata": {
            "additionalProperties": {
              "maxLength": 500,
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
            "type": "object"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "webhook_endpoint"
            ],
            "type": "string"
          },
          "secret": {
            "description": "The endpoint's secret, used to generate [webhook signatures](https://stripe.com/docs/webhooks/signatures). Only returned at creation.",
            "maxLength": 5000,
            "type": "string"
          },
          "status": {
            "description": "The status of the webhook. It can be `enabled` or `disabled`.",
            "maxLength": 5000,
            "type": "string"
          },
          "url": {
            "description": "The URL of the webhook endpoint.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "created",
          "enabled_events",
          "id",
          "livemode",
          "metadata",
          "object",
          "status",
          "url"
        ],
        "title": "NotificationWebhookEndpoint",
        "type": "object",
        "x-expandableFields": [],
        "x-resourceId": "webhook_endpoint"
      }
    }
  },
  "info": {
    "contact": {
      "email": "dev-platform@stripe.com",
      "name": "Stripe Dev Platform Team",
      "url": "https://stripe.com"
    },
    "description": "The Stripe REST API. Please see https://stripe.com/docs/api for more details.",
    "termsOfService": "https://stripe.com/us/terms/",
    "title": "StripeClone API",
    "version": "2023-10-16",
    "x-stripeSpecFilename": "spec3"
  },
  "openapi": "3.0.0",
  "paths": {

    "/v1/account_links": {
      "post": {
        "description": "<p>Creates an AccountLink object that includes a single-use Stripe URL that the platform can redirect their user to in order to take them through the Connect Onboarding flow.</p>",
        "operationId": "PostAccountLinks",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {
                "collection_options": {
                  "explode": true,
                  "style": "deepObject"
                },
                "expand": {
                  "explode": true,
                  "style": "deepObject"
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "account": {
                    "description": "The identifier of the account to create an account link for.",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "collect": {
                    "description": "The collect parameter is deprecated. Use `collection_options` instead.",
                    "enum": [
                      "currently_due",
                      "eventually_due"
                    ],
                    "type": "string"
                  },
                  "collection_options": {
                    "description": "Specifies the requirements that Stripe collects from connected accounts in the Connect Onboarding flow.",
                    "properties": {
                      "fields": {
                        "enum": [
                          "currently_due",
                          "eventually_due"
                        ],
                        "type": "string"
                      },
                      "future_requirements": {
                        "enum": [
                          "include",
                          "omit"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "fields"
                    ],
                    "title": "collection_options_params",
                    "type": "object"
                  },
                  "expand": {
                    "description": "Specifies which fields in the response should be expanded.",
                    "items": {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "refresh_url": {
                    "description": "The URL the user will be redirected to if the account link is expired, has been previously-visited, or is otherwise invalid. The URL you specify should attempt to generate a new account link with the same parameters used to create the original account link, then redirect the user to the new account link's URL so they can continue with Connect Onboarding. If a new account link cannot be generated or the redirect fails you should display a useful error to the user.",
                    "type": "string"
                  },
                  "return_url": {
                    "description": "The URL that the user will be redirected to upon leaving or completing the linked flow.",
                    "type": "string"
                  },
                  "type": {
                    "description": "The type of account link the user is requesting. Possible values are `account_onboarding` or `account_update`.",
                    "enum": [
                      "account_onboarding",
                      "account_update"
                    ],
                    "type": "string",
                    "x-stripeBypassValidation": true
                  }
                },
                "required": [
                  "account",
                  "type"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/account_link"
                }
              }
            },
            "description": "Successful response."
          }
        }
      }
    },

    "/v1/apple_pay/domains": {
      "get": {
        "description": "<p>List apple pay domains.</p>",
        "operationId": "GetApplePayDomains",
        "parameters": [{
            "in": "query",
            "name": "domain_name",
            "required": false,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "name": "ending_before",
            "required": false,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "explode": true,
            "in": "query",
            "name": "expand",
            "required": false,
            "schema": {
              "items": {
                "maxLength": 5000,
                "type": "string"
              },
              "type": "array"
            },
            "style": "deepObject"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "style": "form"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "name": "starting_after",
            "required": false,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "form"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "additionalProperties": false,
                "properties": {},
                "type": "object"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/apple_pay_domain"
                      },
                      "type": "array"
                    },
                    "has_more": {
                      "description": "True if this list has another page of items after this one that can be fetched.",
                      "type": "boolean"
                    },
                    "object": {
                      "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                      "enum": [
                        "list"
                      ],
                      "type": "string"
                    },
                    "url": {
                      "description": "The URL where this list can be accessed.",
                      "maxLength": 5000,
                      "pattern": "^/v1/apple_pay/domains",
                      "type": "string"
                    }
                  },
                  "required": [
                    "data",
                    "has_more",
                    "object",
                    "url"
                  ],
                  "title": "ApplePayDomainList",
                  "type": "object",
                  "x-expandableFields": [
                    "data"
                  ]
                }
              }
            },
            "description": "Successful response."
          }
        }
      },
      "post": {
        "description": "<p>Create an apple pay domain.</p>",
        "operationId": "PostApplePayDomains",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {
                "expand": {
                  "explode": true,
                  "style": "deepObject"
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "domain_name": {
                    "type": "string"
                  },
                  "expand": {
                    "description": "Specifies which fields in the response should be expanded.",
                    "items": {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "domain_name"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apple_pay_domain"
                }
              }
            },
            "description": "Successful response."
          }
        }
      }
    },

    "/v1/ephemeral_keys": {
      "post": {
        "description": "<p>Creates a short-lived API key for a given resource.</p>",
        "operationId": "PostEphemeralKeys",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {
                "expand": {
                  "explode": true,
                  "style": "deepObject"
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "customer": {
                    "description": "The ID of the Customer you'd like to modify using the resulting ephemeral key.",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "expand": {
                    "description": "Specifies which fields in the response should be expanded.",
                    "items": {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "issuing_card": {
                    "description": "The ID of the Issuing Card you'd like to access using the resulting ephemeral key.",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "nonce": {
                    "description": "A single-use token, created by Stripe.js, used for creating ephemeral keys for Issuing Cards without exchanging sensitive information.",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "verification_session": {
                    "description": "The ID of the Identity VerificationSession you'd like to access using the resulting ephemeral key",
                    "maxLength": 5000,
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ephemeral_key"
                }
              }
            },
            "description": "Successful response."
          }
        }
      }
    },
    "/v1/radar/value_list_items": {
      "get": {
        "description": "<p>Returns a list of <code>ValueListItem</code> objects. The objects are sorted in descending order by creation date, with the most recently created object appearing first.</p>",
        "operationId": "GetRadarValueListItems",
        "parameters": [{
            "explode": true,
            "in": "query",
            "name": "created",
            "required": false,
            "schema": {
              "anyOf": [{
                  "properties": {
                    "gt": {
                      "type": "integer"
                    },
                    "gte": {
                      "type": "integer"
                    },
                    "lt": {
                      "type": "integer"
                    },
                    "lte": {
                      "type": "integer"
                    }
                  },
                  "title": "range_query_specs",
                  "type": "object"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "style": "deepObject"
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "name": "ending_before",
            "required": false,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "explode": true,
            "in": "query",
            "name": "expand",
            "required": false,
            "schema": {
              "items": {
                "maxLength": 5000,
                "type": "string"
              },
              "type": "array"
            },
            "style": "deepObject"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "style": "form"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "name": "starting_after",
            "required": false,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Return items belonging to the parent list whose value matches the specified value (using an \"is like\" match).",
            "in": "query",
            "name": "value",
            "required": false,
            "schema": {
              "maxLength": 800,
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Identifier for the parent value list this item belongs to.",
            "in": "query",
            "name": "value_list",
            "required": true,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "form"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "additionalProperties": false,
                "properties": {},
                "type": "object"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/radar.value_list_item"
                      },
                      "type": "array"
                    },
                    "has_more": {
                      "description": "True if this list has another page of items after this one that can be fetched.",
                      "type": "boolean"
                    },
                    "object": {
                      "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                      "enum": [
                        "list"
                      ],
                      "type": "string"
                    },
                    "url": {
                      "description": "The URL where this list can be accessed.",
                      "maxLength": 5000,
                      "pattern": "^/v1/radar/value_list_items",
                      "type": "string"
                    }
                  },
                  "required": [
                    "data",
                    "has_more",
                    "object",
                    "url"
                  ],
                  "title": "RadarListListItemList",
                  "type": "object",
                  "x-expandableFields": [
                    "data"
                  ]
                }
              }
            },
            "description": "Successful response."
          }
        }
      },
      "post": {
        "description": "<p>Creates a new <code>ValueListItem</code> object, which is added to the specified parent value list.</p>",
        "operationId": "PostRadarValueListItems",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {
                "expand": {
                  "explode": true,
                  "style": "deepObject"
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "expand": {
                    "description": "Specifies which fields in the response should be expanded.",
                    "items": {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "value": {
                    "description": "The value of the item (whose type must match the type of the parent value list).",
                    "maxLength": 800,
                    "type": "string"
                  },
                  "value_list": {
                    "description": "The identifier of the value list which the created item will be added to.",
                    "maxLength": 5000,
                    "type": "string"
                  }
                },
                "required": [
                  "value",
                  "value_list"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/radar.value_list_item"
                }
              }
            },
            "description": "Successful response."
          }
        }
      }
    },
    "/v1/tax_rates": {
      "get": {
        "description": "<p>Returns a list of your tax rates. Tax rates are returned sorted by creation date, with the most recently created tax rates appearing first.</p>",
        "operationId": "GetTaxRates",
        "parameters": [{
            "description": "Optional flag to filter by tax rates that are either active or inactive (archived).",
            "in": "query",
            "name": "active",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form"
          },
          {
            "description": "Optional range for filtering created date.",
            "explode": true,
            "in": "query",
            "name": "created",
            "required": false,
            "schema": {
              "anyOf": [{
                  "properties": {
                    "gt": {
                      "type": "integer"
                    },
                    "gte": {
                      "type": "integer"
                    },
                    "lt": {
                      "type": "integer"
                    },
                    "lte": {
                      "type": "integer"
                    }
                  },
                  "title": "range_query_specs",
                  "type": "object"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "style": "deepObject"
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "name": "ending_before",
            "required": false,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "explode": true,
            "in": "query",
            "name": "expand",
            "required": false,
            "schema": {
              "items": {
                "maxLength": 5000,
                "type": "string"
              },
              "type": "array"
            },
            "style": "deepObject"
          },
          {
            "description": "Optional flag to filter by tax rates that are inclusive (or those that are not inclusive).",
            "in": "query",
            "name": "inclusive",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "style": "form"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "name": "starting_after",
            "required": false,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "form"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "additionalProperties": false,
                "properties": {},
                "type": "object"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/tax_rate"
                      },
                      "type": "array"
                    },
                    "has_more": {
                      "description": "True if this list has another page of items after this one that can be fetched.",
                      "type": "boolean"
                    },
                    "object": {
                      "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                      "enum": [
                        "list"
                      ],
                      "type": "string"
                    },
                    "url": {
                      "description": "The URL where this list can be accessed.",
                      "maxLength": 5000,
                      "pattern": "^/v1/tax_rates",
                      "type": "string"
                    }
                  },
                  "required": [
                    "data",
                    "has_more",
                    "object",
                    "url"
                  ],
                  "title": "TaxRatesList",
                  "type": "object",
                  "x-expandableFields": [
                    "data"
                  ]
                }
              }
            },
            "description": "Successful response."
          }
        }
      },
      "post": {
        "description": "<p>Creates a new tax rate.</p>",
        "operationId": "PostTaxRates",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {
                "expand": {
                  "explode": true,
                  "style": "deepObject"
                },
                "metadata": {
                  "explode": true,
                  "style": "deepObject"
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "active": {
                    "description": "Flag determining whether the tax rate is active or inactive (archived). Inactive tax rates cannot be used with new applications or Checkout Sessions, but will still work for subscriptions and invoices that already have it set.",
                    "type": "boolean"
                  },
                  "country": {
                    "description": "Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "description": {
                    "description": "An arbitrary string attached to the tax rate for your internal use only. It will not be visible to your customers.",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "display_name": {
                    "description": "The display name of the tax rate, which will be shown to users.",
                    "maxLength": 50,
                    "type": "string"
                  },
                  "expand": {
                    "description": "Specifies which fields in the response should be expanded.",
                    "items": {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "inclusive": {
                    "description": "This specifies if the tax rate is inclusive or exclusive.",
                    "type": "boolean"
                  },
                  "jurisdiction": {
                    "description": "The jurisdiction for the tax rate. You can use this label field for tax reporting purposes. It also appears on your customer’s invoice.",
                    "maxLength": 50,
                    "type": "string"
                  },
                  "metadata": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.",
                    "type": "object"
                  },
                  "percentage": {
                    "description": "This represents the tax rate percent out of 100.",
                    "type": "number"
                  },
                  "state": {
                    "description": "[ISO 3166-2 subdivision code](https://en.wikipedia.org/wiki/ISO_3166-2:US), without country prefix. For example, \"NY\" for New York, United States.",
                    "maxLength": 2,
                    "type": "string"
                  },
                  "tax_type": {
                    "description": "The high-level tax type, such as `vat` or `sales_tax`.",
                    "enum": [
                      "amusement_tax",
                      "communications_tax",
                      "gst",
                      "hst",
                      "igst",
                      "jct",
                      "lease_tax",
                      "pst",
                      "qst",
                      "rst",
                      "sales_tax",
                      "vat"
                    ],
                    "type": "string",
                    "x-stripeBypassValidation": true
                  }
                },
                "required": [
                  "display_name",
                  "inclusive",
                  "percentage"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tax_rate"
                }
              }
            },
            "description": "Successful response."
          }
        }
      }
    },
    "/v1/test_helpers/test_clocks": {
      "get": {
        "description": "<p>Returns a list of your test clocks.</p>",
        "operationId": "GetTestHelpersTestClocks",
        "parameters": [{
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "name": "ending_before",
            "required": false,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "explode": true,
            "in": "query",
            "name": "expand",
            "required": false,
            "schema": {
              "items": {
                "maxLength": 5000,
                "type": "string"
              },
              "type": "array"
            },
            "style": "deepObject"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "style": "form"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "name": "starting_after",
            "required": false,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "form"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "additionalProperties": false,
                "properties": {},
                "type": "object"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/test_helpers.test_clock"
                      },
                      "type": "array"
                    },
                    "has_more": {
                      "description": "True if this list has another page of items after this one that can be fetched.",
                      "type": "boolean"
                    },
                    "object": {
                      "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                      "enum": [
                        "list"
                      ],
                      "type": "string"
                    },
                    "url": {
                      "description": "The URL where this list can be accessed.",
                      "maxLength": 5000,
                      "pattern": "^/v1/test_helpers/test_clocks",
                      "type": "string"
                    }
                  },
                  "required": [
                    "data",
                    "has_more",
                    "object",
                    "url"
                  ],
                  "title": "BillingClocksResourceBillingClockList",
                  "type": "object",
                  "x-expandableFields": [
                    "data"
                  ]
                }
              }
            },
            "description": "Successful response."
          }
        }
      },
      "post": {
        "description": "<p>Creates a new test clock that can be attached to new customers and quotes.</p>",
        "operationId": "PostTestHelpersTestClocks",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {
                "expand": {
                  "explode": true,
                  "style": "deepObject"
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "expand": {
                    "description": "Specifies which fields in the response should be expanded.",
                    "items": {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "frozen_time": {
                    "description": "The initial frozen time for this test clock.",
                    "format": "unix-time",
                    "type": "integer"
                  },
                  "name": {
                    "description": "The name for this test clock.",
                    "maxLength": 300,
                    "type": "string"
                  }
                },
                "required": [
                  "frozen_time"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/test_helpers.test_clock"
                }
              }
            },
            "description": "Successful response."
          }
        }
      }
    },
    "/v1/webhook_endpoints": {
      "get": {
        "description": "<p>Returns a list of your webhook endpoints.</p>",
        "operationId": "GetWebhookEndpoints",
        "parameters": [{
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "name": "ending_before",
            "required": false,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "explode": true,
            "in": "query",
            "name": "expand",
            "required": false,
            "schema": {
              "items": {
                "maxLength": 5000,
                "type": "string"
              },
              "type": "array"
            },
            "style": "deepObject"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "style": "form"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "name": "starting_after",
            "required": false,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "form"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "additionalProperties": false,
                "properties": {},
                "type": "object"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/webhook_endpoint"
                      },
                      "type": "array"
                    },
                    "has_more": {
                      "description": "True if this list has another page of items after this one that can be fetched.",
                      "type": "boolean"
                    },
                    "object": {
                      "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                      "enum": [
                        "list"
                      ],
                      "type": "string"
                    },
                    "url": {
                      "description": "The URL where this list can be accessed.",
                      "maxLength": 5000,
                      "pattern": "^/v1/webhook_endpoints",
                      "type": "string"
                    }
                  },
                  "required": [
                    "data",
                    "has_more",
                    "object",
                    "url"
                  ],
                  "title": "NotificationWebhookEndpointList",
                  "type": "object",
                  "x-expandableFields": [
                    "data"
                  ]
                }
              }
            },
            "description": "Successful response."
          }
        }
      },
      "post": {
        "description": "<p>A webhook endpoint must have a <code>url</code> and a list of <code>enabled_events</code>. You may optionally specify the Boolean <code>connect</code> parameter. If set to true, then a Connect webhook endpoint that notifies the specified <code>url</code> about events from all connected accounts is created; otherwise an account webhook endpoint that notifies the specified <code>url</code> only about events from your account is created. You can also create webhook endpoints in the <a href=\"https://dashboard.stripe.com/account/webhooks\">webhooks settings</a> section of the Dashboard.</p>",
        "operationId": "PostWebhookEndpoints",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {
                "description": {
                  "explode": true,
                  "style": "deepObject"
                },
                "enabled_events": {
                  "explode": true,
                  "style": "deepObject"
                },
                "expand": {
                  "explode": true,
                  "style": "deepObject"
                },
                "metadata": {
                  "explode": true,
                  "style": "deepObject"
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "api_version": {
                    "description": "Events sent to this endpoint will be generated with this Stripe Version instead of your account's default Stripe Version.",
                    "enum": [
                      "2011-01-01",
                      "2011-06-21",
                      "2011-06-28",
                      "2011-08-01",
                      "2011-09-15",
                      "2011-11-17",
                      "2012-02-23",
                      "2012-03-25",
                      "2012-06-18",
                      "2012-06-28",
                      "2012-07-09",
                      "2012-09-24",
                      "2012-10-26",
                      "2012-11-07",
                      "2013-02-11",
                      "2013-02-13",
                      "2013-07-05",
                      "2013-08-12",
                      "2013-08-13",
                      "2013-10-29",
                      "2013-12-03",
                      "2014-01-31",
                      "2014-03-13",
                      "2014-03-28",
                      "2014-05-19",
                      "2014-06-13",
                      "2014-06-17",
                      "2014-07-22",
                      "2014-07-26",
                      "2014-08-04",
                      "2014-08-20",
                      "2014-09-08",
                      "2014-10-07",
                      "2014-11-05",
                      "2014-11-20",
                      "2014-12-08",
                      "2014-12-17",
                      "2014-12-22",
                      "2015-01-11",
                      "2015-01-26",
                      "2015-02-10",
                      "2015-02-16",
                      "2015-02-18",
                      "2015-03-24",
                      "2015-04-07",
                      "2015-06-15",
                      "2015-07-07",
                      "2015-07-13",
                      "2015-07-28",
                      "2015-08-07",
                      "2015-08-19",
                      "2015-09-03",
                      "2015-09-08",
                      "2015-09-23",
                      "2015-10-01",
                      "2015-10-12",
                      "2015-10-16",
                      "2016-02-03",
                      "2016-02-19",
                      "2016-02-22",
                      "2016-02-23",
                      "2016-02-29",
                      "2016-03-07",
                      "2016-06-15",
                      "2016-07-06",
                      "2016-10-19",
                      "2017-01-27",
                      "2017-02-14",
                      "2017-04-06",
                      "2017-05-25",
                      "2017-06-05",
                      "2017-08-15",
                      "2017-12-14",
                      "2018-01-23",
                      "2018-02-05",
                      "2018-02-06",
                      "2018-02-28",
                      "2018-05-21",
                      "2018-07-27",
                      "2018-08-23",
                      "2018-09-06",
                      "2018-09-24",
                      "2018-10-31",
                      "2018-11-08",
                      "2019-02-11",
                      "2019-02-19",
                      "2019-03-14",
                      "2019-05-16",
                      "2019-08-14",
                      "2019-09-09",
                      "2019-10-08",
                      "2019-10-17",
                      "2019-11-05",
                      "2019-12-03",
                      "2020-03-02",
                      "2020-08-27",
                      "2022-08-01",
                      "2022-11-15",
                      "2023-08-16",
                      "2023-10-16"
                    ],
                    "maxLength": 5000,
                    "type": "string",
                    "x-stripeBypassValidation": true
                  },
                  "connect": {
                    "description": "Whether this endpoint should receive events from connected accounts (`true`), or from your account (`false`). Defaults to `false`.",
                    "type": "boolean"
                  },
                  "description": {
                    "anyOf": [{
                        "maxLength": 5000,
                        "type": "string"
                      },
                      {
                        "enum": [
                          ""
                        ],
                        "type": "string"
                      }
                    ],
                    "description": "An optional description of what the webhook is used for."
                  },
                  "enabled_events": {
                    "description": "The list of events to enable for this endpoint. You may specify `['*']` to enable all events, except those that require explicit selection.",
                    "items": {
                      "enum": [
                        "*",
                        "account.application.authorized",
                        "account.application.deauthorized",
                        "account.external_account.created",
                        "account.external_account.deleted",
                        "account.external_account.updated",
                        "account.updated",
                        "application_fee.created",
                        "application_fee.refund.updated",
                        "application_fee.refunded",
                        "balance.available",
                        "billing_portal.configuration.created",
                        "billing_portal.configuration.updated",
                        "billing_portal.session.created",
                        "capability.updated",
                        "cash_balance.funds_available",
                        "charge.captured",
                        "charge.dispute.closed",
                        "charge.dispute.created",
                        "charge.dispute.funds_reinstated",
                        "charge.dispute.funds_withdrawn",
                        "charge.dispute.updated",
                        "charge.expired",
                        "charge.failed",
                        "charge.pending",
                        "charge.refund.updated",
                        "charge.refunded",
                        "charge.succeeded",
                        "charge.updated",
                        "checkout.session.async_payment_failed",
                        "checkout.session.async_payment_succeeded",
                        "checkout.session.completed",
                        "checkout.session.expired",
                        "climate.order.canceled",
                        "climate.order.created",
                        "climate.order.delayed",
                        "climate.order.delivered",
                        "climate.order.product_substituted",
                        "climate.product.created",
                        "climate.product.pricing_updated",
                        "coupon.created",
                        "coupon.deleted",
                        "coupon.updated",
                        "credit_note.created",
                        "credit_note.updated",
                        "credit_note.voided",
                        "customer.created",
                        "customer.deleted",
                        "customer.discount.created",
                        "customer.discount.deleted",
                        "customer.discount.updated",
                        "customer.source.created",
                        "customer.source.deleted",
                        "customer.source.expiring",
                        "customer.source.updated",
                        "customer.subscription.created",
                        "customer.subscription.deleted",
                        "customer.subscription.paused",
                        "customer.subscription.pending_update_applied",
                        "customer.subscription.pending_update_expired",
                        "customer.subscription.resumed",
                        "customer.subscription.trial_will_end",
                        "customer.subscription.updated",
                        "customer.tax_id.created",
                        "customer.tax_id.deleted",
                        "customer.tax_id.updated",
                        "customer.updated",
                        "customer_cash_balance_transaction.created",
                        "file.created",
                        "financial_connections.account.created",
                        "financial_connections.account.deactivated",
                        "financial_connections.account.disconnected",
                        "financial_connections.account.reactivated",
                        "financial_connections.account.refreshed_balance",
                        "financial_connections.account.refreshed_ownership",
                        "financial_connections.account.refreshed_transactions",
                        "identity.verification_session.canceled",
                        "identity.verification_session.created",
                        "identity.verification_session.processing",
                        "identity.verification_session.redacted",
                        "identity.verification_session.requires_input",
                        "identity.verification_session.verified",
                        "invoice.created",
                        "invoice.deleted",
                        "invoice.finalization_failed",
                        "invoice.finalized",
                        "invoice.marked_uncollectible",
                        "invoice.paid",
                        "invoice.payment_action_required",
                        "invoice.payment_failed",
                        "invoice.payment_succeeded",
                        "invoice.sent",
                        "invoice.upcoming",
                        "invoice.updated",
                        "invoice.voided",
                        "invoiceitem.created",
                        "invoiceitem.deleted",
                        "issuing_authorization.created",
                        "issuing_authorization.request",
                        "issuing_authorization.updated",
                        "issuing_card.created",
                        "issuing_card.updated",
                        "issuing_cardholder.created",
                        "issuing_cardholder.updated",
                        "issuing_dispute.closed",
                        "issuing_dispute.created",
                        "issuing_dispute.funds_reinstated",
                        "issuing_dispute.submitted",
                        "issuing_dispute.updated",
                        "issuing_token.created",
                        "issuing_token.updated",
                        "issuing_transaction.created",
                        "issuing_transaction.updated",
                        "mandate.updated",
                        "payment_intent.amount_capturable_updated",
                        "payment_intent.canceled",
                        "payment_intent.created",
                        "payment_intent.partially_funded",
                        "payment_intent.payment_failed",
                        "payment_intent.processing",
                        "payment_intent.requires_action",
                        "payment_intent.succeeded",
                        "payment_link.created",
                        "payment_link.updated",
                        "payment_method.attached",
                        "payment_method.automatically_updated",
                        "payment_method.detached",
                        "payment_method.updated",
                        "payout.canceled",
                        "payout.created",
                        "payout.failed",
                        "payout.paid",
                        "payout.reconciliation_completed",
                        "payout.updated",
                        "person.created",
                        "person.deleted",
                        "person.updated",
                        "plan.created",
                        "plan.deleted",
                        "plan.updated",
                        "price.created",
                        "price.deleted",
                        "price.updated",
                        "product.created",
                        "product.deleted",
                        "product.updated",
                        "promotion_code.created",
                        "promotion_code.updated",
                        "quote.accepted",
                        "quote.canceled",
                        "quote.created",
                        "quote.finalized",
                        "radar.early_fraud_warning.created",
                        "radar.early_fraud_warning.updated",
                        "refund.created",
                        "refund.updated",
                        "reporting.report_run.failed",
                        "reporting.report_run.succeeded",
                        "reporting.report_type.updated",
                        "review.closed",
                        "review.opened",
                        "setup_intent.canceled",
                        "setup_intent.created",
                        "setup_intent.requires_action",
                        "setup_intent.setup_failed",
                        "setup_intent.succeeded",
                        "sigma.scheduled_query_run.created",
                        "source.canceled",
                        "source.chargeable",
                        "source.failed",
                        "source.mandate_notification",
                        "source.refund_attributes_required",
                        "source.transaction.created",
                        "source.transaction.updated",
                        "subscription_schedule.aborted",
                        "subscription_schedule.canceled",
                        "subscription_schedule.completed",
                        "subscription_schedule.created",
                        "subscription_schedule.expiring",
                        "subscription_schedule.released",
                        "subscription_schedule.updated",
                        "tax.settings.updated",
                        "tax_rate.created",
                        "tax_rate.updated",
                        "terminal.reader.action_failed",
                        "terminal.reader.action_succeeded",
                        "test_helpers.test_clock.advancing",
                        "test_helpers.test_clock.created",
                        "test_helpers.test_clock.deleted",
                        "test_helpers.test_clock.internal_failure",
                        "test_helpers.test_clock.ready",
                        "topup.canceled",
                        "topup.created",
                        "topup.failed",
                        "topup.reversed",
                        "topup.succeeded",
                        "transfer.created",
                        "transfer.reversed",
                        "transfer.updated",
                        "treasury.credit_reversal.created",
                        "treasury.credit_reversal.posted",
                        "treasury.debit_reversal.completed",
                        "treasury.debit_reversal.created",
                        "treasury.debit_reversal.initial_credit_granted",
                        "treasury.financial_account.closed",
                        "treasury.financial_account.created",
                        "treasury.financial_account.features_status_updated",
                        "treasury.inbound_transfer.canceled",
                        "treasury.inbound_transfer.created",
                        "treasury.inbound_transfer.failed",
                        "treasury.inbound_transfer.succeeded",
                        "treasury.outbound_payment.canceled",
                        "treasury.outbound_payment.created",
                        "treasury.outbound_payment.expected_arrival_date_updated",
                        "treasury.outbound_payment.failed",
                        "treasury.outbound_payment.posted",
                        "treasury.outbound_payment.returned",
                        "treasury.outbound_transfer.canceled",
                        "treasury.outbound_transfer.created",
                        "treasury.outbound_transfer.expected_arrival_date_updated",
                        "treasury.outbound_transfer.failed",
                        "treasury.outbound_transfer.posted",
                        "treasury.outbound_transfer.returned",
                        "treasury.received_credit.created",
                        "treasury.received_credit.failed",
                        "treasury.received_credit.succeeded",
                        "treasury.received_debit.created"
                      ],
                      "type": "string",
                      "x-stripeBypassValidation": true
                    },
                    "type": "array"
                  },
                  "expand": {
                    "description": "Specifies which fields in the response should be expanded.",
                    "items": {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "metadata": {
                    "anyOf": [{
                        "additionalProperties": {
                          "type": "string"
                        },
                        "type": "object"
                      },
                      {
                        "enum": [
                          ""
                        ],
                        "type": "string"
                      }
                    ],
                    "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`."
                  },
                  "url": {
                    "description": "The URL of the webhook endpoint.",
                    "type": "string"
                  }
                },
                "required": [
                  "enabled_events",
                  "url"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webhook_endpoint"
                }
              }
            },
            "description": "Successful response."
          }
        }
      }
    },
    "/v1/reporting/report_types": {
      "get": {
        "description": "<p>Returns a full list of Report Types.</p>",
        "operationId": "GetReportingReportTypes",
        "parameters": [{
          "description": "Specifies which fields in the response should be expanded.",
          "explode": true,
          "in": "query",
          "name": "expand",
          "required": false,
          "schema": {
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "type": "array"
          },
          "style": "deepObject"
        }],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "additionalProperties": false,
                "properties": {},
                "type": "object"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/reporting.report_type"
                      },
                      "type": "array"
                    },
                    "has_more": {
                      "description": "True if this list has another page of items after this one that can be fetched.",
                      "type": "boolean"
                    },
                    "object": {
                      "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                      "enum": [
                        "list"
                      ],
                      "type": "string"
                    },
                    "url": {
                      "description": "The URL where this list can be accessed.",
                      "maxLength": 5000,
                      "type": "string"
                    }
                  },
                  "required": [
                    "data",
                    "has_more",
                    "object",
                    "url"
                  ],
                  "title": "FinancialReportingFinanceReportTypeList",
                  "type": "object",
                  "x-expandableFields": [
                    "data"
                  ]
                }
              }
            },
            "description": "Successful response."
          }
        }
      }
    }
  },
  "servers": [{
    "url": "https://api.stripe.com/"
  }]
}