kio,response resource,attribute,description,attribute inferred from operation,part,corresponding attribute,corresponding attribute description,x,name-identical,constraint_correctness,request information,API response,expected_test_outcome,verification script,Example_value,verify_result,satisfied,mismatched,unknown,code error,tp,category
1,BasicProjectDetails,archived,,get-/projects,parameters,archived,Limit by archived status,c,False,TP,"{""id_before"": 5, ""id_after"": 3, ""last_activity_before"": ""2024-03-10T00:00:00Z"", ""last_activity_after"": ""2024-03-01T00:00:00Z"",  ""archived"": false,
  ""repository_storage"": ""default"",
  ""visibility"": ""private"",
  ""with_issues_enabled"": true,
  ""with_merge_requests_enabled"": true}","[{""id"":4,""description"":null,""name"":""test_project_4"",""name_with_namespace"":""Administrator / test_project_4"",""path"":""test_project_4"",""path_with_namespace"":""root/test_project_4"",""created_at"":""2024-03-04T09:07:50.094Z"",""default_branch"":""main"",""tag_list"":[],""topics"":[],""ssh_url_to_repo"":""git@gitlab.example.com:root/test_project_4.git"",""http_url_to_repo"":""http://gitlab.example.com/root/test_project_4.git"",""web_url"":""http://gitlab.example.com/root/test_project_4"",""readme_url"":null,""forks_count"":0,""avatar_url"":null,""star_count"":0,""last_activity_at"":""2024-03-04T09:07:50.094Z"",""namespace"":{""id"":1,""name"":""Administrator"",""path"":""root"",""kind"":""user"",""full_path"":""root"",""parent_id"":null,""avatar_url"":""https://www.gravatar.com/avatar/e64c7d89f26bd1972efa854d13d7dd61?s=80\u0026d=identicon"",""web_url"":""http://gitlab.example.com/root""},""repository_storage"":""default"",""_links"":{""self"":""http://gitlab.example.com/api/v4/projects/4"",""issues"":""http://gitlab.example.com/api/v4/projects/4/issues"",""merge_requests"":""http://gitlab.example.com/api/v4/projects/4/merge_requests"",""repo_branches"":""http://gitlab.example.com/api/v4/projects/4/repository/branches"",""labels"":""http://gitlab.example.com/api/v4/projects/4/labels"",""events"":""http://gitlab.example.com/api/v4/projects/4/events"",""members"":""http://gitlab.example.com/api/v4/projects/4/members"",""cluster_agents"":""http://gitlab.example.com/api/v4/projects/4/cluster_agents""},""packages_enabled"":true,""empty_repo"":true,""archived"":false,""visibility"":""private"",""owner"":{""id"":1,""username"":""root"",""name"":""Administrator"",""state"":""active"",""locked"":false,""avatar_url"":""https://www.gravatar.com/avatar/e64c7d89f26bd1972efa854d13d7dd61?s=80\u0026d=identicon"",""web_url"":""http://gitlab.example.com/root""},""resolve_outdated_diff_discussions"":false,""container_expiration_policy"":{""cadence"":""1d"",""enabled"":false,""keep_n"":10,""older_than"":""90d"",""name_regex"":"".*"",""name_regex_keep"":null,""next_run_at"":""2024-03-05T09:07:50.163Z""},""issues_enabled"":true,""merge_requests_enabled"":true,""wiki_enabled"":true,""jobs_enabled"":true,""snippets_enabled"":true,""container_registry_enabled"":true,""service_desk_enabled"":false,""service_desk_address"":null,""can_create_merge_request_in"":true,""issues_access_level"":""enabled"",""repository_access_level"":""enabled"",""merge_requests_access_level"":""enabled"",""forking_access_level"":""enabled"",""wiki_access_level"":""enabled"",""builds_access_level"":""enabled"",""snippets_access_level"":""enabled"",""pages_access_level"":""private"",""analytics_access_level"":""enabled"",""container_registry_access_level"":""enabled"",""security_and_compliance_access_level"":""private"",""releases_access_level"":""enabled"",""environments_access_level"":""enabled"",""feature_flags_access_level"":""enabled"",""infrastructure_access_level"":""enabled"",""monitor_access_level"":""enabled"",""model_experiments_access_level"":""enabled"",""emails_disabled"":false,""emails_enabled"":true,""shared_runners_enabled"":true,""lfs_enabled"":true,""creator_id"":1,""import_url"":null,""import_type"":null,""import_status"":""none"",""open_issues_count"":0,""description_html"":"""",""updated_at"":""2024-03-04T09:07:50.094Z"",""ci_default_git_depth"":20,""ci_forward_deployment_enabled"":true,""ci_forward_deployment_rollback_allowed"":true,""ci_job_token_scope_enabled"":false,""ci_separated_caches"":true,""ci_allow_fork_pipelines_to_run_in_parent_project"":true,""build_git_strategy"":""fetch"",""keep_latest_artifact"":true,""restrict_user_defined_variables"":false,""runners_token"":""GR1348941-VrHsy7ofk3EnQ6N9jsG"",""runner_token_expiration_interval"":null,""group_runners_enabled"":true,""auto_cancel_pending_pipelines"":""enabled"",""build_timeout"":3600,""auto_devops_enabled"":true,""auto_devops_deploy_strategy"":""continuous"",""ci_config_path"":null,""public_jobs"":true,""shared_with_groups"":[],""only_allow_merge_if_pipeline_succeeds"":false,""allow_merge_on_skipped_pipeline"":null,""request_access_enabled"":true,""only_allow_merge_if_all_discussions_are_resolved"":false,""remove_source_branch_after_merge"":true,""printing_merge_request_link_enabled"":true,""merge_method"":""merge"",""squash_option"":""default_off"",""enforce_auth_checks_on_uploads"":true,""suggestion_commit_message"":null,""merge_commit_template"":null,""squash_commit_template"":null,""issue_branch_template"":null,""autoclose_referenced_issues"":true,""permissions"":{""project_access"":{""access_level"":50,""notification_level"":3},""group_access"":null}}]",unknown,"def verify_latest_response(latest_response, request_info):
    try:
        # Extract the 'archived' parameter from the request_info
        archived_param = request_info.get('archived')
        
        # If 'archived' parameter is not provided in the request_info, return 0
        if archived_param is None:
            return 0
        
        # Convert the 'archived' parameter to a boolean
        archived_param = bool(archived_param)
        
        # Iterate through each project in the response
        for project in latest_response:
            # Check if the 'archived' attribute exists in the project
            if 'archived' not in project:
                return 0
            
            # Verify that the 'archived' attribute matches the 'archived' parameter
            if project['archived'] != archived_param:
                return -1
        
        # If all projects satisfy the constraint, return 1
        return 1
    except Exception as e:
        # If any exception occurs, return -1
        return -1
",False,1,True,False,False,0,1,"range of values, logic"
2,BasicProjectDetails,id,,get-/projects,parameters,id_after,Limit results to projects with IDs greater than the specified ID,c,True,TP,"{""id_before"": 5, ""id_after"": 3, ""last_activity_before"": ""2024-03-10T00:00:00Z"", ""last_activity_after"": ""2024-03-01T00:00:00Z"",  ""archived"": false,
  ""repository_storage"": ""default"",
  ""visibility"": ""private"",
  ""with_issues_enabled"": true,
  ""with_merge_requests_enabled"": true}","[{""id"":4,""description"":null,""name"":""test_project_4"",""name_with_namespace"":""Administrator / test_project_4"",""path"":""test_project_4"",""path_with_namespace"":""root/test_project_4"",""created_at"":""2024-03-04T09:07:50.094Z"",""default_branch"":""main"",""tag_list"":[],""topics"":[],""ssh_url_to_repo"":""git@gitlab.example.com:root/test_project_4.git"",""http_url_to_repo"":""http://gitlab.example.com/root/test_project_4.git"",""web_url"":""http://gitlab.example.com/root/test_project_4"",""readme_url"":null,""forks_count"":0,""avatar_url"":null,""star_count"":0,""last_activity_at"":""2024-03-04T09:07:50.094Z"",""namespace"":{""id"":1,""name"":""Administrator"",""path"":""root"",""kind"":""user"",""full_path"":""root"",""parent_id"":null,""avatar_url"":""https://www.gravatar.com/avatar/e64c7d89f26bd1972efa854d13d7dd61?s=80\u0026d=identicon"",""web_url"":""http://gitlab.example.com/root""},""repository_storage"":""default"",""_links"":{""self"":""http://gitlab.example.com/api/v4/projects/4"",""issues"":""http://gitlab.example.com/api/v4/projects/4/issues"",""merge_requests"":""http://gitlab.example.com/api/v4/projects/4/merge_requests"",""repo_branches"":""http://gitlab.example.com/api/v4/projects/4/repository/branches"",""labels"":""http://gitlab.example.com/api/v4/projects/4/labels"",""events"":""http://gitlab.example.com/api/v4/projects/4/events"",""members"":""http://gitlab.example.com/api/v4/projects/4/members"",""cluster_agents"":""http://gitlab.example.com/api/v4/projects/4/cluster_agents""},""packages_enabled"":true,""empty_repo"":true,""archived"":false,""visibility"":""private"",""owner"":{""id"":1,""username"":""root"",""name"":""Administrator"",""state"":""active"",""locked"":false,""avatar_url"":""https://www.gravatar.com/avatar/e64c7d89f26bd1972efa854d13d7dd61?s=80\u0026d=identicon"",""web_url"":""http://gitlab.example.com/root""},""resolve_outdated_diff_discussions"":false,""container_expiration_policy"":{""cadence"":""1d"",""enabled"":false,""keep_n"":10,""older_than"":""90d"",""name_regex"":"".*"",""name_regex_keep"":null,""next_run_at"":""2024-03-05T09:07:50.163Z""},""issues_enabled"":true,""merge_requests_enabled"":true,""wiki_enabled"":true,""jobs_enabled"":true,""snippets_enabled"":true,""container_registry_enabled"":true,""service_desk_enabled"":false,""service_desk_address"":null,""can_create_merge_request_in"":true,""issues_access_level"":""enabled"",""repository_access_level"":""enabled"",""merge_requests_access_level"":""enabled"",""forking_access_level"":""enabled"",""wiki_access_level"":""enabled"",""builds_access_level"":""enabled"",""snippets_access_level"":""enabled"",""pages_access_level"":""private"",""analytics_access_level"":""enabled"",""container_registry_access_level"":""enabled"",""security_and_compliance_access_level"":""private"",""releases_access_level"":""enabled"",""environments_access_level"":""enabled"",""feature_flags_access_level"":""enabled"",""infrastructure_access_level"":""enabled"",""monitor_access_level"":""enabled"",""model_experiments_access_level"":""enabled"",""emails_disabled"":false,""emails_enabled"":true,""shared_runners_enabled"":true,""lfs_enabled"":true,""creator_id"":1,""import_url"":null,""import_type"":null,""import_status"":""none"",""open_issues_count"":0,""description_html"":"""",""updated_at"":""2024-03-04T09:07:50.094Z"",""ci_default_git_depth"":20,""ci_forward_deployment_enabled"":true,""ci_forward_deployment_rollback_allowed"":true,""ci_job_token_scope_enabled"":false,""ci_separated_caches"":true,""ci_allow_fork_pipelines_to_run_in_parent_project"":true,""build_git_strategy"":""fetch"",""keep_latest_artifact"":true,""restrict_user_defined_variables"":false,""runners_token"":""GR1348941-VrHsy7ofk3EnQ6N9jsG"",""runner_token_expiration_interval"":null,""group_runners_enabled"":true,""auto_cancel_pending_pipelines"":""enabled"",""build_timeout"":3600,""auto_devops_enabled"":true,""auto_devops_deploy_strategy"":""continuous"",""ci_config_path"":null,""public_jobs"":true,""shared_with_groups"":[],""only_allow_merge_if_pipeline_succeeds"":false,""allow_merge_on_skipped_pipeline"":null,""request_access_enabled"":true,""only_allow_merge_if_all_discussions_are_resolved"":false,""remove_source_branch_after_merge"":true,""printing_merge_request_link_enabled"":true,""merge_method"":""merge"",""squash_option"":""default_off"",""enforce_auth_checks_on_uploads"":true,""suggestion_commit_message"":null,""merge_commit_template"":null,""squash_commit_template"":null,""issue_branch_template"":null,""autoclose_referenced_issues"":true,""permissions"":{""project_access"":{""access_level"":50,""notification_level"":3},""group_access"":null}}]",satisfied,"def verify_latest_response(latest_response, request_info):
    try:
        id_after = int(request_info.get(""id_after"", 0))
        for project in latest_response:
            if ""id"" not in project:
                return 0
            if not isinstance(project[""id""], int):
                return -1
            if project[""id""] <= id_after:
                return -1
        return 1
    except Exception as e:
        return -1
",4,1,True,False,False,0,1,logic
3,BasicProjectDetails,last_activity_at,,get-/projects,parameters,last_activity_after,Limit results to projects with last_activity after specified time.ISO 8601 YYYY-MM-DDTHH:MM:SSZ,c,True,TP,"{""id_before"": 5, ""id_after"": 3, ""last_activity_before"": ""2024-03-10T00:00:00Z"", ""last_activity_after"": ""2024-03-01T00:00:00Z"",  ""archived"": false,
  ""repository_storage"": ""default"",
  ""visibility"": ""private"",
  ""with_issues_enabled"": true,
  ""with_merge_requests_enabled"": true}","[{""id"":4,""description"":null,""name"":""test_project_4"",""name_with_namespace"":""Administrator / test_project_4"",""path"":""test_project_4"",""path_with_namespace"":""root/test_project_4"",""created_at"":""2024-03-04T09:07:50.094Z"",""default_branch"":""main"",""tag_list"":[],""topics"":[],""ssh_url_to_repo"":""git@gitlab.example.com:root/test_project_4.git"",""http_url_to_repo"":""http://gitlab.example.com/root/test_project_4.git"",""web_url"":""http://gitlab.example.com/root/test_project_4"",""readme_url"":null,""forks_count"":0,""avatar_url"":null,""star_count"":0,""last_activity_at"":""2024-03-04T09:07:50.094Z"",""namespace"":{""id"":1,""name"":""Administrator"",""path"":""root"",""kind"":""user"",""full_path"":""root"",""parent_id"":null,""avatar_url"":""https://www.gravatar.com/avatar/e64c7d89f26bd1972efa854d13d7dd61?s=80\u0026d=identicon"",""web_url"":""http://gitlab.example.com/root""},""repository_storage"":""default"",""_links"":{""self"":""http://gitlab.example.com/api/v4/projects/4"",""issues"":""http://gitlab.example.com/api/v4/projects/4/issues"",""merge_requests"":""http://gitlab.example.com/api/v4/projects/4/merge_requests"",""repo_branches"":""http://gitlab.example.com/api/v4/projects/4/repository/branches"",""labels"":""http://gitlab.example.com/api/v4/projects/4/labels"",""events"":""http://gitlab.example.com/api/v4/projects/4/events"",""members"":""http://gitlab.example.com/api/v4/projects/4/members"",""cluster_agents"":""http://gitlab.example.com/api/v4/projects/4/cluster_agents""},""packages_enabled"":true,""empty_repo"":true,""archived"":false,""visibility"":""private"",""owner"":{""id"":1,""username"":""root"",""name"":""Administrator"",""state"":""active"",""locked"":false,""avatar_url"":""https://www.gravatar.com/avatar/e64c7d89f26bd1972efa854d13d7dd61?s=80\u0026d=identicon"",""web_url"":""http://gitlab.example.com/root""},""resolve_outdated_diff_discussions"":false,""container_expiration_policy"":{""cadence"":""1d"",""enabled"":false,""keep_n"":10,""older_than"":""90d"",""name_regex"":"".*"",""name_regex_keep"":null,""next_run_at"":""2024-03-05T09:07:50.163Z""},""issues_enabled"":true,""merge_requests_enabled"":true,""wiki_enabled"":true,""jobs_enabled"":true,""snippets_enabled"":true,""container_registry_enabled"":true,""service_desk_enabled"":false,""service_desk_address"":null,""can_create_merge_request_in"":true,""issues_access_level"":""enabled"",""repository_access_level"":""enabled"",""merge_requests_access_level"":""enabled"",""forking_access_level"":""enabled"",""wiki_access_level"":""enabled"",""builds_access_level"":""enabled"",""snippets_access_level"":""enabled"",""pages_access_level"":""private"",""analytics_access_level"":""enabled"",""container_registry_access_level"":""enabled"",""security_and_compliance_access_level"":""private"",""releases_access_level"":""enabled"",""environments_access_level"":""enabled"",""feature_flags_access_level"":""enabled"",""infrastructure_access_level"":""enabled"",""monitor_access_level"":""enabled"",""model_experiments_access_level"":""enabled"",""emails_disabled"":false,""emails_enabled"":true,""shared_runners_enabled"":true,""lfs_enabled"":true,""creator_id"":1,""import_url"":null,""import_type"":null,""import_status"":""none"",""open_issues_count"":0,""description_html"":"""",""updated_at"":""2024-03-04T09:07:50.094Z"",""ci_default_git_depth"":20,""ci_forward_deployment_enabled"":true,""ci_forward_deployment_rollback_allowed"":true,""ci_job_token_scope_enabled"":false,""ci_separated_caches"":true,""ci_allow_fork_pipelines_to_run_in_parent_project"":true,""build_git_strategy"":""fetch"",""keep_latest_artifact"":true,""restrict_user_defined_variables"":false,""runners_token"":""GR1348941-VrHsy7ofk3EnQ6N9jsG"",""runner_token_expiration_interval"":null,""group_runners_enabled"":true,""auto_cancel_pending_pipelines"":""enabled"",""build_timeout"":3600,""auto_devops_enabled"":true,""auto_devops_deploy_strategy"":""continuous"",""ci_config_path"":null,""public_jobs"":true,""shared_with_groups"":[],""only_allow_merge_if_pipeline_succeeds"":false,""allow_merge_on_skipped_pipeline"":null,""request_access_enabled"":true,""only_allow_merge_if_all_discussions_are_resolved"":false,""remove_source_branch_after_merge"":true,""printing_merge_request_link_enabled"":true,""merge_method"":""merge"",""squash_option"":""default_off"",""enforce_auth_checks_on_uploads"":true,""suggestion_commit_message"":null,""merge_commit_template"":null,""squash_commit_template"":null,""issue_branch_template"":null,""autoclose_referenced_issues"":true,""permissions"":{""project_access"":{""access_level"":50,""notification_level"":3},""group_access"":null}}]",mismatched,"from datetime import datetime
import json

def verify_latest_response(latest_response, request_info):
    try:
        last_activity_after = request_info.get(""last_activity_after"")
        if not last_activity_after:
            return 0
        
        last_activity_after_dt = datetime.strptime(last_activity_after, ""%Y-%m-%dT%H:%M:%SZ"")
        
        for project in latest_response:
            last_activity_at = project.get(""last_activity_at"")
            if not last_activity_at:
                return 0
            
            last_activity_at_dt = datetime.strptime(last_activity_at, ""%Y-%m-%dT%H:%M:%SZ"")
            if last_activity_at_dt <= last_activity_after_dt:
                return -1
        
        return 1
    except Exception as e:
        return -1
",2013-09-30T13:46:02Z,1,False,True,False,0,1,"logic, format"
4,BasicProjectDetails,last_activity_at,,get-/projects,parameters,last_activity_before,Limit results to projects with last_activity before specified time. ISO 8601 YYYY-MM-DDTHH:MM:SSZ,c,True,TP,"{""id_before"": 5, ""id_after"": 3, ""last_activity_before"": ""2024-03-10T00:00:00Z"", ""last_activity_after"": ""2024-03-01T00:00:00Z"",  ""archived"": false,
  ""repository_storage"": ""default"",
  ""visibility"": ""private"",
  ""with_issues_enabled"": true,
  ""with_merge_requests_enabled"": true}","[{""id"":4,""description"":null,""name"":""test_project_4"",""name_with_namespace"":""Administrator / test_project_4"",""path"":""test_project_4"",""path_with_namespace"":""root/test_project_4"",""created_at"":""2024-03-04T09:07:50.094Z"",""default_branch"":""main"",""tag_list"":[],""topics"":[],""ssh_url_to_repo"":""git@gitlab.example.com:root/test_project_4.git"",""http_url_to_repo"":""http://gitlab.example.com/root/test_project_4.git"",""web_url"":""http://gitlab.example.com/root/test_project_4"",""readme_url"":null,""forks_count"":0,""avatar_url"":null,""star_count"":0,""last_activity_at"":""2024-03-04T09:07:50.094Z"",""namespace"":{""id"":1,""name"":""Administrator"",""path"":""root"",""kind"":""user"",""full_path"":""root"",""parent_id"":null,""avatar_url"":""https://www.gravatar.com/avatar/e64c7d89f26bd1972efa854d13d7dd61?s=80\u0026d=identicon"",""web_url"":""http://gitlab.example.com/root""},""repository_storage"":""default"",""_links"":{""self"":""http://gitlab.example.com/api/v4/projects/4"",""issues"":""http://gitlab.example.com/api/v4/projects/4/issues"",""merge_requests"":""http://gitlab.example.com/api/v4/projects/4/merge_requests"",""repo_branches"":""http://gitlab.example.com/api/v4/projects/4/repository/branches"",""labels"":""http://gitlab.example.com/api/v4/projects/4/labels"",""events"":""http://gitlab.example.com/api/v4/projects/4/events"",""members"":""http://gitlab.example.com/api/v4/projects/4/members"",""cluster_agents"":""http://gitlab.example.com/api/v4/projects/4/cluster_agents""},""packages_enabled"":true,""empty_repo"":true,""archived"":false,""visibility"":""private"",""owner"":{""id"":1,""username"":""root"",""name"":""Administrator"",""state"":""active"",""locked"":false,""avatar_url"":""https://www.gravatar.com/avatar/e64c7d89f26bd1972efa854d13d7dd61?s=80\u0026d=identicon"",""web_url"":""http://gitlab.example.com/root""},""resolve_outdated_diff_discussions"":false,""container_expiration_policy"":{""cadence"":""1d"",""enabled"":false,""keep_n"":10,""older_than"":""90d"",""name_regex"":"".*"",""name_regex_keep"":null,""next_run_at"":""2024-03-05T09:07:50.163Z""},""issues_enabled"":true,""merge_requests_enabled"":true,""wiki_enabled"":true,""jobs_enabled"":true,""snippets_enabled"":true,""container_registry_enabled"":true,""service_desk_enabled"":false,""service_desk_address"":null,""can_create_merge_request_in"":true,""issues_access_level"":""enabled"",""repository_access_level"":""enabled"",""merge_requests_access_level"":""enabled"",""forking_access_level"":""enabled"",""wiki_access_level"":""enabled"",""builds_access_level"":""enabled"",""snippets_access_level"":""enabled"",""pages_access_level"":""private"",""analytics_access_level"":""enabled"",""container_registry_access_level"":""enabled"",""security_and_compliance_access_level"":""private"",""releases_access_level"":""enabled"",""environments_access_level"":""enabled"",""feature_flags_access_level"":""enabled"",""infrastructure_access_level"":""enabled"",""monitor_access_level"":""enabled"",""model_experiments_access_level"":""enabled"",""emails_disabled"":false,""emails_enabled"":true,""shared_runners_enabled"":true,""lfs_enabled"":true,""creator_id"":1,""import_url"":null,""import_type"":null,""import_status"":""none"",""open_issues_count"":0,""description_html"":"""",""updated_at"":""2024-03-04T09:07:50.094Z"",""ci_default_git_depth"":20,""ci_forward_deployment_enabled"":true,""ci_forward_deployment_rollback_allowed"":true,""ci_job_token_scope_enabled"":false,""ci_separated_caches"":true,""ci_allow_fork_pipelines_to_run_in_parent_project"":true,""build_git_strategy"":""fetch"",""keep_latest_artifact"":true,""restrict_user_defined_variables"":false,""runners_token"":""GR1348941-VrHsy7ofk3EnQ6N9jsG"",""runner_token_expiration_interval"":null,""group_runners_enabled"":true,""auto_cancel_pending_pipelines"":""enabled"",""build_timeout"":3600,""auto_devops_enabled"":true,""auto_devops_deploy_strategy"":""continuous"",""ci_config_path"":null,""public_jobs"":true,""shared_with_groups"":[],""only_allow_merge_if_pipeline_succeeds"":false,""allow_merge_on_skipped_pipeline"":null,""request_access_enabled"":true,""only_allow_merge_if_all_discussions_are_resolved"":false,""remove_source_branch_after_merge"":true,""printing_merge_request_link_enabled"":true,""merge_method"":""merge"",""squash_option"":""default_off"",""enforce_auth_checks_on_uploads"":true,""suggestion_commit_message"":null,""merge_commit_template"":null,""squash_commit_template"":null,""issue_branch_template"":null,""autoclose_referenced_issues"":true,""permissions"":{""project_access"":{""access_level"":50,""notification_level"":3},""group_access"":null}}]",mismatched,"from datetime import datetime
import json

def verify_latest_response(latest_response, request_info):
    try:
        last_activity_before = request_info.get(""last_activity_before"")
        if not last_activity_before:
            return 0
        
        last_activity_before_dt = datetime.strptime(last_activity_before, ""%Y-%m-%dT%H:%M:%SZ"")
        
        for project in latest_response:
            last_activity_at = project.get(""last_activity_at"")
            if not last_activity_at:
                return 0
            
            last_activity_at_dt = datetime.strptime(last_activity_at, ""%Y-%m-%dT%H:%M:%SZ"")
            if last_activity_at_dt >= last_activity_before_dt:
                return -1
        
        return 1
    except Exception as e:
        return -1
",2013-09-30T13:46:02Z,1,False,True,False,0,1,"logic, format"
5,BasicProjectDetails,repository_storage,,post-/projects,parameters,repository_storage,Which storage shard the repository is on.(admins only),c,False,TP,"{
  ""repository_storage"": ""default"",
  ""visibility"": ""private"",
  ""issues_enabled"": true,
  ""merge_requests_enabled"": true,
  ""allow_merge_on_skipped_pipeline"": true,
  ""auto_devops_deploy_strategy"": ""continuous"",
  ""auto_devops_enabled"": true,
  ""autoclose_referenced_issues"": true,
  ""container_registry_enabled"": true,
  ""default_branch"": ""main"",
  ""description"": null,
  ""jobs_enabled"": true,
  ""merge_method"": ""merge"",
  ""name"": ""test_project_1"",
  ""only_allow_merge_if_all_discussions_are_resolved"": false,
  ""only_allow_merge_if_pipeline_succeeds"": false,
  ""packages_enabled"": true,
  ""path"": ""test_project_1"",
  ""remove_source_branch_after_merge"": true,
  ""request_access_enabled"": true,
  ""resolve_outdated_diff_discussions"": false,
  ""shared_runners_enabled"": true,
  ""snippets_enabled"": true,
  ""tag_list"": [],
  ""wiki_enabled"": true
}","{""id"":1,""description"":null,""name"":""test_project_1"",""name_with_namespace"":""test / test_project_1"",""path"":""test_project_1"",""path_with_namespace"":""test/test_project_1"",""created_at"":""2024-02-29T12:07:00.562Z"",""default_branch"":""main"",""tag_list"":[],""topics"":[],""ssh_url_to_repo"":""git@gitlab.example.com:test/test_project_1.git"",""http_url_to_repo"":""http://gitlab.example.com/test/test_project_1.git"",""web_url"":""http://gitlab.example.com/test/test_project_1"",""readme_url"":null,""forks_count"":0,""avatar_url"":null,""star_count"":0,""last_activity_at"":""2024-03-10T10:00:40.330Z"",""namespace"":{""id"":8,""name"":""test"",""path"":""test"",""kind"":""group"",""full_path"":""test"",""parent_id"":null,""avatar_url"":null,""web_url"":""http://gitlab.example.com/groups/test""},""repository_storage"":""default"",""_links"":{""self"":""http://gitlab.example.com/api/v4/projects/1"",""issues"":""http://gitlab.example.com/api/v4/projects/1/issues"",""merge_requests"":""http://gitlab.example.com/api/v4/projects/1/merge_requests"",""repo_branches"":""http://gitlab.example.com/api/v4/projects/1/repository/branches"",""labels"":""http://gitlab.example.com/api/v4/projects/1/labels"",""events"":""http://gitlab.example.com/api/v4/projects/1/events"",""members"":""http://gitlab.example.com/api/v4/projects/1/members"",""cluster_agents"":""http://gitlab.example.com/api/v4/projects/1/cluster_agents""},""packages_enabled"":true,""empty_repo"":false,""archived"":false,""visibility"":""private"",""resolve_outdated_diff_discussions"":false,""container_expiration_policy"":{""cadence"":""1d"",""enabled"":false,""keep_n"":10,""older_than"":""90d"",""name_regex"":"".*"",""name_regex_keep"":null,""next_run_at"":""2024-03-01T12:07:00.736Z""},""issues_enabled"":true,""merge_requests_enabled"":true,""wiki_enabled"":true,""jobs_enabled"":true,""snippets_enabled"":true,""container_registry_enabled"":true,""service_desk_enabled"":false,""service_desk_address"":null,""can_create_merge_request_in"":true,""issues_access_level"":""enabled"",""repository_access_level"":""enabled"",""merge_requests_access_level"":""enabled"",""forking_access_level"":""enabled"",""wiki_access_level"":""enabled"",""builds_access_level"":""enabled"",""snippets_access_level"":""enabled"",""pages_access_level"":""private"",""analytics_access_level"":""enabled"",""container_registry_access_level"":""enabled"",""security_and_compliance_access_level"":""private"",""releases_access_level"":""enabled"",""environments_access_level"":""enabled"",""feature_flags_access_level"":""enabled"",""infrastructure_access_level"":""enabled"",""monitor_access_level"":""enabled"",""model_experiments_access_level"":""enabled"",""emails_disabled"":false,""emails_enabled"":true,""shared_runners_enabled"":true,""lfs_enabled"":true,""creator_id"":1,""import_url"":null,""import_type"":null,""import_status"":""none"",""import_error"":null,""open_issues_count"":0,""description_html"":"""",""updated_at"":""2024-03-10T14:19:34.750Z"",""ci_default_git_depth"":20,""ci_forward_deployment_enabled"":true,""ci_forward_deployment_rollback_allowed"":true,""ci_job_token_scope_enabled"":false,""ci_separated_caches"":true,""ci_allow_fork_pipelines_to_run_in_parent_project"":true,""build_git_strategy"":""fetch"",""keep_latest_artifact"":true,""restrict_user_defined_variables"":false,""runners_token"":""GR13489417rNYoRAs8xBMqnVRfbNg"",""runner_token_expiration_interval"":null,""group_runners_enabled"":true,""auto_cancel_pending_pipelines"":""enabled"",""build_timeout"":3600,""auto_devops_enabled"":true,""auto_devops_deploy_strategy"":""continuous"",""ci_config_path"":null,""public_jobs"":true,""shared_with_groups"":[],""only_allow_merge_if_pipeline_succeeds"":false,""allow_merge_on_skipped_pipeline"":true,""request_access_enabled"":true,""only_allow_merge_if_all_discussions_are_resolved"":false,""remove_source_branch_after_merge"":true,""printing_merge_request_link_enabled"":true,""merge_method"":""merge"",""squash_option"":""default_off"",""enforce_auth_checks_on_uploads"":true,""suggestion_commit_message"":null,""merge_commit_template"":null,""squash_commit_template"":null,""issue_branch_template"":null,""autoclose_referenced_issues"":true,""permissions"":{""project_access"":{""access_level"":50,""notification_level"":3},""group_access"":{""access_level"":50,""notification_level"":3}}}",satisfied,"def verify_latest_response(latest_response, request_info):
    try:
        # Extract the repository_storage from the request_info
        expected_repository_storage = request_info.get(""repository_storage"")
        
        # Check if the repository_storage exists in the latest_response
        if ""repository_storage"" not in latest_response:
            return 0
        
        # Extract the repository_storage from the latest_response
        actual_repository_storage = latest_response[""repository_storage""]
        
        # Verify if the actual repository_storage matches the expected repository_storage
        if actual_repository_storage == expected_repository_storage:
            return 1
        else:
            return -1
    except Exception as e:
        # In case of any exception, return -1 indicating the constraint is not satisfied
        return -1
",default,1,True,False,False,0,1,logic
6,BasicProjectDetails,repository_storage,,get-/projects,parameters,repository_storage,Limit results to projects stored on repository_storage. (admins only),c,False,TP,"{""id_before"": 5, ""id_after"": 3, ""last_activity_before"": ""2024-03-10T00:00:00Z"", ""last_activity_after"": ""2024-03-01T00:00:00Z"",  ""archived"": false,
  ""repository_storage"": ""default"",
  ""visibility"": ""private"",
  ""with_issues_enabled"": true,
  ""with_merge_requests_enabled"": true}","[{""id"":4,""description"":null,""name"":""test_project_4"",""name_with_namespace"":""Administrator / test_project_4"",""path"":""test_project_4"",""path_with_namespace"":""root/test_project_4"",""created_at"":""2024-03-04T09:07:50.094Z"",""default_branch"":""main"",""tag_list"":[],""topics"":[],""ssh_url_to_repo"":""git@gitlab.example.com:root/test_project_4.git"",""http_url_to_repo"":""http://gitlab.example.com/root/test_project_4.git"",""web_url"":""http://gitlab.example.com/root/test_project_4"",""readme_url"":null,""forks_count"":0,""avatar_url"":null,""star_count"":0,""last_activity_at"":""2024-03-04T09:07:50.094Z"",""namespace"":{""id"":1,""name"":""Administrator"",""path"":""root"",""kind"":""user"",""full_path"":""root"",""parent_id"":null,""avatar_url"":""https://www.gravatar.com/avatar/e64c7d89f26bd1972efa854d13d7dd61?s=80\u0026d=identicon"",""web_url"":""http://gitlab.example.com/root""},""repository_storage"":""default"",""_links"":{""self"":""http://gitlab.example.com/api/v4/projects/4"",""issues"":""http://gitlab.example.com/api/v4/projects/4/issues"",""merge_requests"":""http://gitlab.example.com/api/v4/projects/4/merge_requests"",""repo_branches"":""http://gitlab.example.com/api/v4/projects/4/repository/branches"",""labels"":""http://gitlab.example.com/api/v4/projects/4/labels"",""events"":""http://gitlab.example.com/api/v4/projects/4/events"",""members"":""http://gitlab.example.com/api/v4/projects/4/members"",""cluster_agents"":""http://gitlab.example.com/api/v4/projects/4/cluster_agents""},""packages_enabled"":true,""empty_repo"":true,""archived"":false,""visibility"":""private"",""owner"":{""id"":1,""username"":""root"",""name"":""Administrator"",""state"":""active"",""locked"":false,""avatar_url"":""https://www.gravatar.com/avatar/e64c7d89f26bd1972efa854d13d7dd61?s=80\u0026d=identicon"",""web_url"":""http://gitlab.example.com/root""},""resolve_outdated_diff_discussions"":false,""container_expiration_policy"":{""cadence"":""1d"",""enabled"":false,""keep_n"":10,""older_than"":""90d"",""name_regex"":"".*"",""name_regex_keep"":null,""next_run_at"":""2024-03-05T09:07:50.163Z""},""issues_enabled"":true,""merge_requests_enabled"":true,""wiki_enabled"":true,""jobs_enabled"":true,""snippets_enabled"":true,""container_registry_enabled"":true,""service_desk_enabled"":false,""service_desk_address"":null,""can_create_merge_request_in"":true,""issues_access_level"":""enabled"",""repository_access_level"":""enabled"",""merge_requests_access_level"":""enabled"",""forking_access_level"":""enabled"",""wiki_access_level"":""enabled"",""builds_access_level"":""enabled"",""snippets_access_level"":""enabled"",""pages_access_level"":""private"",""analytics_access_level"":""enabled"",""container_registry_access_level"":""enabled"",""security_and_compliance_access_level"":""private"",""releases_access_level"":""enabled"",""environments_access_level"":""enabled"",""feature_flags_access_level"":""enabled"",""infrastructure_access_level"":""enabled"",""monitor_access_level"":""enabled"",""model_experiments_access_level"":""enabled"",""emails_disabled"":false,""emails_enabled"":true,""shared_runners_enabled"":true,""lfs_enabled"":true,""creator_id"":1,""import_url"":null,""import_type"":null,""import_status"":""none"",""open_issues_count"":0,""description_html"":"""",""updated_at"":""2024-03-04T09:07:50.094Z"",""ci_default_git_depth"":20,""ci_forward_deployment_enabled"":true,""ci_forward_deployment_rollback_allowed"":true,""ci_job_token_scope_enabled"":false,""ci_separated_caches"":true,""ci_allow_fork_pipelines_to_run_in_parent_project"":true,""build_git_strategy"":""fetch"",""keep_latest_artifact"":true,""restrict_user_defined_variables"":false,""runners_token"":""GR1348941-VrHsy7ofk3EnQ6N9jsG"",""runner_token_expiration_interval"":null,""group_runners_enabled"":true,""auto_cancel_pending_pipelines"":""enabled"",""build_timeout"":3600,""auto_devops_enabled"":true,""auto_devops_deploy_strategy"":""continuous"",""ci_config_path"":null,""public_jobs"":true,""shared_with_groups"":[],""only_allow_merge_if_pipeline_succeeds"":false,""allow_merge_on_skipped_pipeline"":null,""request_access_enabled"":true,""only_allow_merge_if_all_discussions_are_resolved"":false,""remove_source_branch_after_merge"":true,""printing_merge_request_link_enabled"":true,""merge_method"":""merge"",""squash_option"":""default_off"",""enforce_auth_checks_on_uploads"":true,""suggestion_commit_message"":null,""merge_commit_template"":null,""squash_commit_template"":null,""issue_branch_template"":null,""autoclose_referenced_issues"":true,""permissions"":{""project_access"":{""access_level"":50,""notification_level"":3},""group_access"":null}}]",unknown,"def verify_latest_response(latest_response, request_info):
    try:
        # Extract the repository_storage value from the request_info
        requested_repository_storage = request_info.get(""repository_storage"")
        
        # Check if the requested repository_storage is provided
        if not requested_repository_storage:
            return 0
        
        # Iterate through the response to verify the constraint
        for project in latest_response:
            if ""repository_storage"" not in project:
                return 0
            if project[""repository_storage""] != requested_repository_storage:
                return -1
        
        return 1
    except Exception as e:
        return -1
",default,1,True,False,False,0,1,logic
7,BasicProjectDetails,visibility,,post-/projects,parameters,visibility,See project visibility level,c,False,TP,"{
  ""repository_storage"": ""default"",
  ""visibility"": ""private"",
  ""issues_enabled"": true,
  ""merge_requests_enabled"": true,
  ""allow_merge_on_skipped_pipeline"": true,
  ""auto_devops_deploy_strategy"": ""continuous"",
  ""auto_devops_enabled"": true,
  ""autoclose_referenced_issues"": true,
  ""container_registry_enabled"": true,
  ""default_branch"": ""main"",
  ""description"": null,
  ""jobs_enabled"": true,
  ""merge_method"": ""merge"",
  ""name"": ""test_project_1"",
  ""only_allow_merge_if_all_discussions_are_resolved"": false,
  ""only_allow_merge_if_pipeline_succeeds"": false,
  ""packages_enabled"": true,
  ""path"": ""test_project_1"",
  ""remove_source_branch_after_merge"": true,
  ""request_access_enabled"": true,
  ""resolve_outdated_diff_discussions"": false,
  ""shared_runners_enabled"": true,
  ""snippets_enabled"": true,
  ""tag_list"": [],
  ""wiki_enabled"": true
}","{""id"":1,""description"":null,""name"":""test_project_1"",""name_with_namespace"":""test / test_project_1"",""path"":""test_project_1"",""path_with_namespace"":""test/test_project_1"",""created_at"":""2024-02-29T12:07:00.562Z"",""default_branch"":""main"",""tag_list"":[],""topics"":[],""ssh_url_to_repo"":""git@gitlab.example.com:test/test_project_1.git"",""http_url_to_repo"":""http://gitlab.example.com/test/test_project_1.git"",""web_url"":""http://gitlab.example.com/test/test_project_1"",""readme_url"":null,""forks_count"":0,""avatar_url"":null,""star_count"":0,""last_activity_at"":""2024-03-10T10:00:40.330Z"",""namespace"":{""id"":8,""name"":""test"",""path"":""test"",""kind"":""group"",""full_path"":""test"",""parent_id"":null,""avatar_url"":null,""web_url"":""http://gitlab.example.com/groups/test""},""repository_storage"":""default"",""_links"":{""self"":""http://gitlab.example.com/api/v4/projects/1"",""issues"":""http://gitlab.example.com/api/v4/projects/1/issues"",""merge_requests"":""http://gitlab.example.com/api/v4/projects/1/merge_requests"",""repo_branches"":""http://gitlab.example.com/api/v4/projects/1/repository/branches"",""labels"":""http://gitlab.example.com/api/v4/projects/1/labels"",""events"":""http://gitlab.example.com/api/v4/projects/1/events"",""members"":""http://gitlab.example.com/api/v4/projects/1/members"",""cluster_agents"":""http://gitlab.example.com/api/v4/projects/1/cluster_agents""},""packages_enabled"":true,""empty_repo"":false,""archived"":false,""visibility"":""private"",""resolve_outdated_diff_discussions"":false,""container_expiration_policy"":{""cadence"":""1d"",""enabled"":false,""keep_n"":10,""older_than"":""90d"",""name_regex"":"".*"",""name_regex_keep"":null,""next_run_at"":""2024-03-01T12:07:00.736Z""},""issues_enabled"":true,""merge_requests_enabled"":true,""wiki_enabled"":true,""jobs_enabled"":true,""snippets_enabled"":true,""container_registry_enabled"":true,""service_desk_enabled"":false,""service_desk_address"":null,""can_create_merge_request_in"":true,""issues_access_level"":""enabled"",""repository_access_level"":""enabled"",""merge_requests_access_level"":""enabled"",""forking_access_level"":""enabled"",""wiki_access_level"":""enabled"",""builds_access_level"":""enabled"",""snippets_access_level"":""enabled"",""pages_access_level"":""private"",""analytics_access_level"":""enabled"",""container_registry_access_level"":""enabled"",""security_and_compliance_access_level"":""private"",""releases_access_level"":""enabled"",""environments_access_level"":""enabled"",""feature_flags_access_level"":""enabled"",""infrastructure_access_level"":""enabled"",""monitor_access_level"":""enabled"",""model_experiments_access_level"":""enabled"",""emails_disabled"":false,""emails_enabled"":true,""shared_runners_enabled"":true,""lfs_enabled"":true,""creator_id"":1,""import_url"":null,""import_type"":null,""import_status"":""none"",""import_error"":null,""open_issues_count"":0,""description_html"":"""",""updated_at"":""2024-03-10T14:19:34.750Z"",""ci_default_git_depth"":20,""ci_forward_deployment_enabled"":true,""ci_forward_deployment_rollback_allowed"":true,""ci_job_token_scope_enabled"":false,""ci_separated_caches"":true,""ci_allow_fork_pipelines_to_run_in_parent_project"":true,""build_git_strategy"":""fetch"",""keep_latest_artifact"":true,""restrict_user_defined_variables"":false,""runners_token"":""GR13489417rNYoRAs8xBMqnVRfbNg"",""runner_token_expiration_interval"":null,""group_runners_enabled"":true,""auto_cancel_pending_pipelines"":""enabled"",""build_timeout"":3600,""auto_devops_enabled"":true,""auto_devops_deploy_strategy"":""continuous"",""ci_config_path"":null,""public_jobs"":true,""shared_with_groups"":[],""only_allow_merge_if_pipeline_succeeds"":false,""allow_merge_on_skipped_pipeline"":true,""request_access_enabled"":true,""only_allow_merge_if_all_discussions_are_resolved"":false,""remove_source_branch_after_merge"":true,""printing_merge_request_link_enabled"":true,""merge_method"":""merge"",""squash_option"":""default_off"",""enforce_auth_checks_on_uploads"":true,""suggestion_commit_message"":null,""merge_commit_template"":null,""squash_commit_template"":null,""issue_branch_template"":null,""autoclose_referenced_issues"":true,""permissions"":{""project_access"":{""access_level"":50,""notification_level"":3},""group_access"":{""access_level"":50,""notification_level"":3}}}",satisfied,"def verify_latest_response(latest_response, request_info):
    try:
        # Extract the visibility attribute from the response
        visibility = latest_response.get(""visibility"")
        
        # Check if the visibility attribute exists in the response
        if visibility is None:
            return 0
        
        # Define the allowed visibility values
        allowed_values = [""private"", ""internal"", ""public""]
        
        # Verify if the visibility value is within the allowed values
        if visibility in allowed_values:
            return 1
        else:
            return -1
    except Exception as e:
        return -1
",private,1,True,False,False,0,1,"range of values, logic"
8,BasicProjectDetails,visibility,,get-/projects,parameters,visibility,Limit by visibility,c,False,TP,"{""id_before"": 5, ""id_after"": 3, ""last_activity_before"": ""2024-03-10T00:00:00Z"", ""last_activity_after"": ""2024-03-01T00:00:00Z"",  ""archived"": false,
  ""repository_storage"": ""default"",
  ""visibility"": ""private"",
  ""with_issues_enabled"": true,
  ""with_merge_requests_enabled"": true}","[{""id"":4,""description"":null,""name"":""test_project_4"",""name_with_namespace"":""Administrator / test_project_4"",""path"":""test_project_4"",""path_with_namespace"":""root/test_project_4"",""created_at"":""2024-03-04T09:07:50.094Z"",""default_branch"":""main"",""tag_list"":[],""topics"":[],""ssh_url_to_repo"":""git@gitlab.example.com:root/test_project_4.git"",""http_url_to_repo"":""http://gitlab.example.com/root/test_project_4.git"",""web_url"":""http://gitlab.example.com/root/test_project_4"",""readme_url"":null,""forks_count"":0,""avatar_url"":null,""star_count"":0,""last_activity_at"":""2024-03-04T09:07:50.094Z"",""namespace"":{""id"":1,""name"":""Administrator"",""path"":""root"",""kind"":""user"",""full_path"":""root"",""parent_id"":null,""avatar_url"":""https://www.gravatar.com/avatar/e64c7d89f26bd1972efa854d13d7dd61?s=80\u0026d=identicon"",""web_url"":""http://gitlab.example.com/root""},""repository_storage"":""default"",""_links"":{""self"":""http://gitlab.example.com/api/v4/projects/4"",""issues"":""http://gitlab.example.com/api/v4/projects/4/issues"",""merge_requests"":""http://gitlab.example.com/api/v4/projects/4/merge_requests"",""repo_branches"":""http://gitlab.example.com/api/v4/projects/4/repository/branches"",""labels"":""http://gitlab.example.com/api/v4/projects/4/labels"",""events"":""http://gitlab.example.com/api/v4/projects/4/events"",""members"":""http://gitlab.example.com/api/v4/projects/4/members"",""cluster_agents"":""http://gitlab.example.com/api/v4/projects/4/cluster_agents""},""packages_enabled"":true,""empty_repo"":true,""archived"":false,""visibility"":""private"",""owner"":{""id"":1,""username"":""root"",""name"":""Administrator"",""state"":""active"",""locked"":false,""avatar_url"":""https://www.gravatar.com/avatar/e64c7d89f26bd1972efa854d13d7dd61?s=80\u0026d=identicon"",""web_url"":""http://gitlab.example.com/root""},""resolve_outdated_diff_discussions"":false,""container_expiration_policy"":{""cadence"":""1d"",""enabled"":false,""keep_n"":10,""older_than"":""90d"",""name_regex"":"".*"",""name_regex_keep"":null,""next_run_at"":""2024-03-05T09:07:50.163Z""},""issues_enabled"":true,""merge_requests_enabled"":true,""wiki_enabled"":true,""jobs_enabled"":true,""snippets_enabled"":true,""container_registry_enabled"":true,""service_desk_enabled"":false,""service_desk_address"":null,""can_create_merge_request_in"":true,""issues_access_level"":""enabled"",""repository_access_level"":""enabled"",""merge_requests_access_level"":""enabled"",""forking_access_level"":""enabled"",""wiki_access_level"":""enabled"",""builds_access_level"":""enabled"",""snippets_access_level"":""enabled"",""pages_access_level"":""private"",""analytics_access_level"":""enabled"",""container_registry_access_level"":""enabled"",""security_and_compliance_access_level"":""private"",""releases_access_level"":""enabled"",""environments_access_level"":""enabled"",""feature_flags_access_level"":""enabled"",""infrastructure_access_level"":""enabled"",""monitor_access_level"":""enabled"",""model_experiments_access_level"":""enabled"",""emails_disabled"":false,""emails_enabled"":true,""shared_runners_enabled"":true,""lfs_enabled"":true,""creator_id"":1,""import_url"":null,""import_type"":null,""import_status"":""none"",""open_issues_count"":0,""description_html"":"""",""updated_at"":""2024-03-04T09:07:50.094Z"",""ci_default_git_depth"":20,""ci_forward_deployment_enabled"":true,""ci_forward_deployment_rollback_allowed"":true,""ci_job_token_scope_enabled"":false,""ci_separated_caches"":true,""ci_allow_fork_pipelines_to_run_in_parent_project"":true,""build_git_strategy"":""fetch"",""keep_latest_artifact"":true,""restrict_user_defined_variables"":false,""runners_token"":""GR1348941-VrHsy7ofk3EnQ6N9jsG"",""runner_token_expiration_interval"":null,""group_runners_enabled"":true,""auto_cancel_pending_pipelines"":""enabled"",""build_timeout"":3600,""auto_devops_enabled"":true,""auto_devops_deploy_strategy"":""continuous"",""ci_config_path"":null,""public_jobs"":true,""shared_with_groups"":[],""only_allow_merge_if_pipeline_succeeds"":false,""allow_merge_on_skipped_pipeline"":null,""request_access_enabled"":true,""only_allow_merge_if_all_discussions_are_resolved"":false,""remove_source_branch_after_merge"":true,""printing_merge_request_link_enabled"":true,""merge_method"":""merge"",""squash_option"":""default_off"",""enforce_auth_checks_on_uploads"":true,""suggestion_commit_message"":null,""merge_commit_template"":null,""squash_commit_template"":null,""issue_branch_template"":null,""autoclose_referenced_issues"":true,""permissions"":{""project_access"":{""access_level"":50,""notification_level"":3},""group_access"":null}}]",satisfied,"def verify_latest_response(latest_response, request_info):
    try:
        # Extract the visibility constraint from the request_info
        visibility_constraint = request_info.get(""visibility"")
        
        # Check if the visibility constraint is provided
        if visibility_constraint is None:
            return 0
        
        # Define the allowed visibility values
        allowed_visibility_values = [""public"", ""internal"", ""private""]
        
        # Check if the provided visibility constraint is valid
        if visibility_constraint not in allowed_visibility_values:
            return -1
        
        # Verify the visibility attribute in each BasicProjectDetails object in the response
        for project in latest_response:
            if ""visibility"" not in project:
                return 0
            if project[""visibility""] != visibility_constraint:
                return -1
        
        # If all checks pass, return 1
        return 1
    except Exception as e:
        # In case of any exception, return -1
        return -1
",private,1,True,False,False,0,1,"range of values, logic"
9,BasicProjectDetails,issues_enabled,,post-/projects,parameters,issues_enabled,(Deprecated)Enable issues for this project. Use issues_access_level instead,c,False,TP,"{
  ""repository_storage"": ""default"",
  ""visibility"": ""private"",
  ""issues_enabled"": true,
  ""merge_requests_enabled"": true,
  ""allow_merge_on_skipped_pipeline"": true,
  ""auto_devops_deploy_strategy"": ""continuous"",
  ""auto_devops_enabled"": true,
  ""autoclose_referenced_issues"": true,
  ""container_registry_enabled"": true,
  ""default_branch"": ""main"",
  ""description"": null,
  ""jobs_enabled"": true,
  ""merge_method"": ""merge"",
  ""name"": ""test_project_1"",
  ""only_allow_merge_if_all_discussions_are_resolved"": false,
  ""only_allow_merge_if_pipeline_succeeds"": false,
  ""packages_enabled"": true,
  ""path"": ""test_project_1"",
  ""remove_source_branch_after_merge"": true,
  ""request_access_enabled"": true,
  ""resolve_outdated_diff_discussions"": false,
  ""shared_runners_enabled"": true,
  ""snippets_enabled"": true,
  ""tag_list"": [],
  ""wiki_enabled"": true
}","{""id"":1,""description"":null,""name"":""test_project_1"",""name_with_namespace"":""test / test_project_1"",""path"":""test_project_1"",""path_with_namespace"":""test/test_project_1"",""created_at"":""2024-02-29T12:07:00.562Z"",""default_branch"":""main"",""tag_list"":[],""topics"":[],""ssh_url_to_repo"":""git@gitlab.example.com:test/test_project_1.git"",""http_url_to_repo"":""http://gitlab.example.com/test/test_project_1.git"",""web_url"":""http://gitlab.example.com/test/test_project_1"",""readme_url"":null,""forks_count"":0,""avatar_url"":null,""star_count"":0,""last_activity_at"":""2024-03-10T10:00:40.330Z"",""namespace"":{""id"":8,""name"":""test"",""path"":""test"",""kind"":""group"",""full_path"":""test"",""parent_id"":null,""avatar_url"":null,""web_url"":""http://gitlab.example.com/groups/test""},""repository_storage"":""default"",""_links"":{""self"":""http://gitlab.example.com/api/v4/projects/1"",""issues"":""http://gitlab.example.com/api/v4/projects/1/issues"",""merge_requests"":""http://gitlab.example.com/api/v4/projects/1/merge_requests"",""repo_branches"":""http://gitlab.example.com/api/v4/projects/1/repository/branches"",""labels"":""http://gitlab.example.com/api/v4/projects/1/labels"",""events"":""http://gitlab.example.com/api/v4/projects/1/events"",""members"":""http://gitlab.example.com/api/v4/projects/1/members"",""cluster_agents"":""http://gitlab.example.com/api/v4/projects/1/cluster_agents""},""packages_enabled"":true,""empty_repo"":false,""archived"":false,""visibility"":""private"",""resolve_outdated_diff_discussions"":false,""container_expiration_policy"":{""cadence"":""1d"",""enabled"":false,""keep_n"":10,""older_than"":""90d"",""name_regex"":"".*"",""name_regex_keep"":null,""next_run_at"":""2024-03-01T12:07:00.736Z""},""issues_enabled"":true,""merge_requests_enabled"":true,""wiki_enabled"":true,""jobs_enabled"":true,""snippets_enabled"":true,""container_registry_enabled"":true,""service_desk_enabled"":false,""service_desk_address"":null,""can_create_merge_request_in"":true,""issues_access_level"":""enabled"",""repository_access_level"":""enabled"",""merge_requests_access_level"":""enabled"",""forking_access_level"":""enabled"",""wiki_access_level"":""enabled"",""builds_access_level"":""enabled"",""snippets_access_level"":""enabled"",""pages_access_level"":""private"",""analytics_access_level"":""enabled"",""container_registry_access_level"":""enabled"",""security_and_compliance_access_level"":""private"",""releases_access_level"":""enabled"",""environments_access_level"":""enabled"",""feature_flags_access_level"":""enabled"",""infrastructure_access_level"":""enabled"",""monitor_access_level"":""enabled"",""model_experiments_access_level"":""enabled"",""emails_disabled"":false,""emails_enabled"":true,""shared_runners_enabled"":true,""lfs_enabled"":true,""creator_id"":1,""import_url"":null,""import_type"":null,""import_status"":""none"",""import_error"":null,""open_issues_count"":0,""description_html"":"""",""updated_at"":""2024-03-10T14:19:34.750Z"",""ci_default_git_depth"":20,""ci_forward_deployment_enabled"":true,""ci_forward_deployment_rollback_allowed"":true,""ci_job_token_scope_enabled"":false,""ci_separated_caches"":true,""ci_allow_fork_pipelines_to_run_in_parent_project"":true,""build_git_strategy"":""fetch"",""keep_latest_artifact"":true,""restrict_user_defined_variables"":false,""runners_token"":""GR13489417rNYoRAs8xBMqnVRfbNg"",""runner_token_expiration_interval"":null,""group_runners_enabled"":true,""auto_cancel_pending_pipelines"":""enabled"",""build_timeout"":3600,""auto_devops_enabled"":true,""auto_devops_deploy_strategy"":""continuous"",""ci_config_path"":null,""public_jobs"":true,""shared_with_groups"":[],""only_allow_merge_if_pipeline_succeeds"":false,""allow_merge_on_skipped_pipeline"":true,""request_access_enabled"":true,""only_allow_merge_if_all_discussions_are_resolved"":false,""remove_source_branch_after_merge"":true,""printing_merge_request_link_enabled"":true,""merge_method"":""merge"",""squash_option"":""default_off"",""enforce_auth_checks_on_uploads"":true,""suggestion_commit_message"":null,""merge_commit_template"":null,""squash_commit_template"":null,""issue_branch_template"":null,""autoclose_referenced_issues"":true,""permissions"":{""project_access"":{""access_level"":50,""notification_level"":3},""group_access"":{""access_level"":50,""notification_level"":3}}}",satisfied,"def verify_latest_response(latest_response, request_info):
    try:
        # Check if 'issues_enabled' is in the response
        if 'issues_enabled' not in latest_response:
            return 0
        
        # Check if 'issues_enabled' is a boolean
        if not isinstance(latest_response['issues_enabled'], bool):
            return -1
        
        # Check if the request_info contains 'issues_enabled' and compare it with the response
        if 'issues_enabled' in request_info:
            if latest_response['issues_enabled'] != request_info['issues_enabled']:
                return -1
        
        return 1
    except Exception as e:
        return -1
",True,1,True,False,False,0,1,"range of values, logic"
10,BasicProjectDetails,issues_enabled,,get-/projects,parameters,with_issues_enabled,Limit by enabled issues feature,c,True,TP,"{""id_before"": 5, ""id_after"": 3, ""last_activity_before"": ""2024-03-10T00:00:00Z"", ""last_activity_after"": ""2024-03-01T00:00:00Z"",  ""archived"": false,
  ""repository_storage"": ""default"",
  ""visibility"": ""private"",
  ""with_issues_enabled"": true,
  ""with_merge_requests_enabled"": true}","[{""id"":4,""description"":null,""name"":""test_project_4"",""name_with_namespace"":""Administrator / test_project_4"",""path"":""test_project_4"",""path_with_namespace"":""root/test_project_4"",""created_at"":""2024-03-04T09:07:50.094Z"",""default_branch"":""main"",""tag_list"":[],""topics"":[],""ssh_url_to_repo"":""git@gitlab.example.com:root/test_project_4.git"",""http_url_to_repo"":""http://gitlab.example.com/root/test_project_4.git"",""web_url"":""http://gitlab.example.com/root/test_project_4"",""readme_url"":null,""forks_count"":0,""avatar_url"":null,""star_count"":0,""last_activity_at"":""2024-03-04T09:07:50.094Z"",""namespace"":{""id"":1,""name"":""Administrator"",""path"":""root"",""kind"":""user"",""full_path"":""root"",""parent_id"":null,""avatar_url"":""https://www.gravatar.com/avatar/e64c7d89f26bd1972efa854d13d7dd61?s=80\u0026d=identicon"",""web_url"":""http://gitlab.example.com/root""},""repository_storage"":""default"",""_links"":{""self"":""http://gitlab.example.com/api/v4/projects/4"",""issues"":""http://gitlab.example.com/api/v4/projects/4/issues"",""merge_requests"":""http://gitlab.example.com/api/v4/projects/4/merge_requests"",""repo_branches"":""http://gitlab.example.com/api/v4/projects/4/repository/branches"",""labels"":""http://gitlab.example.com/api/v4/projects/4/labels"",""events"":""http://gitlab.example.com/api/v4/projects/4/events"",""members"":""http://gitlab.example.com/api/v4/projects/4/members"",""cluster_agents"":""http://gitlab.example.com/api/v4/projects/4/cluster_agents""},""packages_enabled"":true,""empty_repo"":true,""archived"":false,""visibility"":""private"",""owner"":{""id"":1,""username"":""root"",""name"":""Administrator"",""state"":""active"",""locked"":false,""avatar_url"":""https://www.gravatar.com/avatar/e64c7d89f26bd1972efa854d13d7dd61?s=80\u0026d=identicon"",""web_url"":""http://gitlab.example.com/root""},""resolve_outdated_diff_discussions"":false,""container_expiration_policy"":{""cadence"":""1d"",""enabled"":false,""keep_n"":10,""older_than"":""90d"",""name_regex"":"".*"",""name_regex_keep"":null,""next_run_at"":""2024-03-05T09:07:50.163Z""},""issues_enabled"":true,""merge_requests_enabled"":true,""wiki_enabled"":true,""jobs_enabled"":true,""snippets_enabled"":true,""container_registry_enabled"":true,""service_desk_enabled"":false,""service_desk_address"":null,""can_create_merge_request_in"":true,""issues_access_level"":""enabled"",""repository_access_level"":""enabled"",""merge_requests_access_level"":""enabled"",""forking_access_level"":""enabled"",""wiki_access_level"":""enabled"",""builds_access_level"":""enabled"",""snippets_access_level"":""enabled"",""pages_access_level"":""private"",""analytics_access_level"":""enabled"",""container_registry_access_level"":""enabled"",""security_and_compliance_access_level"":""private"",""releases_access_level"":""enabled"",""environments_access_level"":""enabled"",""feature_flags_access_level"":""enabled"",""infrastructure_access_level"":""enabled"",""monitor_access_level"":""enabled"",""model_experiments_access_level"":""enabled"",""emails_disabled"":false,""emails_enabled"":true,""shared_runners_enabled"":true,""lfs_enabled"":true,""creator_id"":1,""import_url"":null,""import_type"":null,""import_status"":""none"",""open_issues_count"":0,""description_html"":"""",""updated_at"":""2024-03-04T09:07:50.094Z"",""ci_default_git_depth"":20,""ci_forward_deployment_enabled"":true,""ci_forward_deployment_rollback_allowed"":true,""ci_job_token_scope_enabled"":false,""ci_separated_caches"":true,""ci_allow_fork_pipelines_to_run_in_parent_project"":true,""build_git_strategy"":""fetch"",""keep_latest_artifact"":true,""restrict_user_defined_variables"":false,""runners_token"":""GR1348941-VrHsy7ofk3EnQ6N9jsG"",""runner_token_expiration_interval"":null,""group_runners_enabled"":true,""auto_cancel_pending_pipelines"":""enabled"",""build_timeout"":3600,""auto_devops_enabled"":true,""auto_devops_deploy_strategy"":""continuous"",""ci_config_path"":null,""public_jobs"":true,""shared_with_groups"":[],""only_allow_merge_if_pipeline_succeeds"":false,""allow_merge_on_skipped_pipeline"":null,""request_access_enabled"":true,""only_allow_merge_if_all_discussions_are_resolved"":false,""remove_source_branch_after_merge"":true,""printing_merge_request_link_enabled"":true,""merge_method"":""merge"",""squash_option"":""default_off"",""enforce_auth_checks_on_uploads"":true,""suggestion_commit_message"":null,""merge_commit_template"":null,""squash_commit_template"":null,""issue_branch_template"":null,""autoclose_referenced_issues"":true,""permissions"":{""project_access"":{""access_level"":50,""notification_level"":3},""group_access"":null}}]",unknown,"def verify_latest_response(latest_response, request_info):
    try:
        with_issues_enabled = request_info.get(""with_issues_enabled"")
        if with_issues_enabled is None:
            return 0  # No constraint to verify

        for project in latest_response:
            if 'issues_enabled' not in project:
                return 0  # Insufficient information to verify the constraint
            if project['issues_enabled'] != with_issues_enabled:
                return -1  # Constraint not satisfied

        return 1  # Constraint satisfied
    except Exception as e:
        return -1  # In case of any error, return -1
",True,1,True,False,False,0,1,"range of values, logic"
11,BasicProjectDetails,merge_requests_enabled,,post-/projects,parameters,merge_requests_enabled,(Deprecated)Enable merge requests for this project. Use merge_requests_access_level instead,c,False,TP,"{
  ""repository_storage"": ""default"",
  ""visibility"": ""private"",
  ""issues_enabled"": true,
  ""merge_requests_enabled"": true,
  ""allow_merge_on_skipped_pipeline"": true,
  ""auto_devops_deploy_strategy"": ""continuous"",
  ""auto_devops_enabled"": true,
  ""autoclose_referenced_issues"": true,
  ""container_registry_enabled"": true,
  ""default_branch"": ""main"",
  ""description"": null,
  ""jobs_enabled"": true,
  ""merge_method"": ""merge"",
  ""name"": ""test_project_1"",
  ""only_allow_merge_if_all_discussions_are_resolved"": false,
  ""only_allow_merge_if_pipeline_succeeds"": false,
  ""packages_enabled"": true,
  ""path"": ""test_project_1"",
  ""remove_source_branch_after_merge"": true,
  ""request_access_enabled"": true,
  ""resolve_outdated_diff_discussions"": false,
  ""shared_runners_enabled"": true,
  ""snippets_enabled"": true,
  ""tag_list"": [],
  ""wiki_enabled"": true
}","{""id"":1,""description"":null,""name"":""test_project_1"",""name_with_namespace"":""test / test_project_1"",""path"":""test_project_1"",""path_with_namespace"":""test/test_project_1"",""created_at"":""2024-02-29T12:07:00.562Z"",""default_branch"":""main"",""tag_list"":[],""topics"":[],""ssh_url_to_repo"":""git@gitlab.example.com:test/test_project_1.git"",""http_url_to_repo"":""http://gitlab.example.com/test/test_project_1.git"",""web_url"":""http://gitlab.example.com/test/test_project_1"",""readme_url"":null,""forks_count"":0,""avatar_url"":null,""star_count"":0,""last_activity_at"":""2024-03-10T10:00:40.330Z"",""namespace"":{""id"":8,""name"":""test"",""path"":""test"",""kind"":""group"",""full_path"":""test"",""parent_id"":null,""avatar_url"":null,""web_url"":""http://gitlab.example.com/groups/test""},""repository_storage"":""default"",""_links"":{""self"":""http://gitlab.example.com/api/v4/projects/1"",""issues"":""http://gitlab.example.com/api/v4/projects/1/issues"",""merge_requests"":""http://gitlab.example.com/api/v4/projects/1/merge_requests"",""repo_branches"":""http://gitlab.example.com/api/v4/projects/1/repository/branches"",""labels"":""http://gitlab.example.com/api/v4/projects/1/labels"",""events"":""http://gitlab.example.com/api/v4/projects/1/events"",""members"":""http://gitlab.example.com/api/v4/projects/1/members"",""cluster_agents"":""http://gitlab.example.com/api/v4/projects/1/cluster_agents""},""packages_enabled"":true,""empty_repo"":false,""archived"":false,""visibility"":""private"",""resolve_outdated_diff_discussions"":false,""container_expiration_policy"":{""cadence"":""1d"",""enabled"":false,""keep_n"":10,""older_than"":""90d"",""name_regex"":"".*"",""name_regex_keep"":null,""next_run_at"":""2024-03-01T12:07:00.736Z""},""issues_enabled"":true,""merge_requests_enabled"":true,""wiki_enabled"":true,""jobs_enabled"":true,""snippets_enabled"":true,""container_registry_enabled"":true,""service_desk_enabled"":false,""service_desk_address"":null,""can_create_merge_request_in"":true,""issues_access_level"":""enabled"",""repository_access_level"":""enabled"",""merge_requests_access_level"":""enabled"",""forking_access_level"":""enabled"",""wiki_access_level"":""enabled"",""builds_access_level"":""enabled"",""snippets_access_level"":""enabled"",""pages_access_level"":""private"",""analytics_access_level"":""enabled"",""container_registry_access_level"":""enabled"",""security_and_compliance_access_level"":""private"",""releases_access_level"":""enabled"",""environments_access_level"":""enabled"",""feature_flags_access_level"":""enabled"",""infrastructure_access_level"":""enabled"",""monitor_access_level"":""enabled"",""model_experiments_access_level"":""enabled"",""emails_disabled"":false,""emails_enabled"":true,""shared_runners_enabled"":true,""lfs_enabled"":true,""creator_id"":1,""import_url"":null,""import_type"":null,""import_status"":""none"",""import_error"":null,""open_issues_count"":0,""description_html"":"""",""updated_at"":""2024-03-10T14:19:34.750Z"",""ci_default_git_depth"":20,""ci_forward_deployment_enabled"":true,""ci_forward_deployment_rollback_allowed"":true,""ci_job_token_scope_enabled"":false,""ci_separated_caches"":true,""ci_allow_fork_pipelines_to_run_in_parent_project"":true,""build_git_strategy"":""fetch"",""keep_latest_artifact"":true,""restrict_user_defined_variables"":false,""runners_token"":""GR13489417rNYoRAs8xBMqnVRfbNg"",""runner_token_expiration_interval"":null,""group_runners_enabled"":true,""auto_cancel_pending_pipelines"":""enabled"",""build_timeout"":3600,""auto_devops_enabled"":true,""auto_devops_deploy_strategy"":""continuous"",""ci_config_path"":null,""public_jobs"":true,""shared_with_groups"":[],""only_allow_merge_if_pipeline_succeeds"":false,""allow_merge_on_skipped_pipeline"":true,""request_access_enabled"":true,""only_allow_merge_if_all_discussions_are_resolved"":false,""remove_source_branch_after_merge"":true,""printing_merge_request_link_enabled"":true,""merge_method"":""merge"",""squash_option"":""default_off"",""enforce_auth_checks_on_uploads"":true,""suggestion_commit_message"":null,""merge_commit_template"":null,""squash_commit_template"":null,""issue_branch_template"":null,""autoclose_referenced_issues"":true,""permissions"":{""project_access"":{""access_level"":50,""notification_level"":3},""group_access"":{""access_level"":50,""notification_level"":3}}}",unknown,"def verify_latest_response(latest_response, request_info):
    try:
        # Check if 'merge_requests_enabled' is in the response
        if 'merge_requests_enabled' not in latest_response:
            return 0
        
        # Check if 'merge_requests_enabled' is a boolean
        if not isinstance(latest_response['merge_requests_enabled'], bool):
            return -1
        
        # If the request_info contains 'merge_requests_enabled', verify it matches the response
        if 'merge_requests_enabled' in request_info:
            if latest_response['merge_requests_enabled'] != request_info['merge_requests_enabled']:
                return -1
        
        return 1
    except Exception as e:
        return -1
",True,1,True,False,False,0,1,"range of values, logic"
12,BasicProjectDetails,merge_requests_enabled,,get-/projects,parameters,with_merge_requests_enabled,Limit by enabled merge requests feature,c,True,TP,"{""id_before"": 5, ""id_after"": 3, ""last_activity_before"": ""2024-03-10T00:00:00Z"", ""last_activity_after"": ""2024-03-01T00:00:00Z"",  ""archived"": false,
  ""repository_storage"": ""default"",
  ""visibility"": ""private"",
  ""with_issues_enabled"": true,
  ""with_merge_requests_enabled"": true}","[{""id"":4,""description"":null,""name"":""test_project_4"",""name_with_namespace"":""Administrator / test_project_4"",""path"":""test_project_4"",""path_with_namespace"":""root/test_project_4"",""created_at"":""2024-03-04T09:07:50.094Z"",""default_branch"":""main"",""tag_list"":[],""topics"":[],""ssh_url_to_repo"":""git@gitlab.example.com:root/test_project_4.git"",""http_url_to_repo"":""http://gitlab.example.com/root/test_project_4.git"",""web_url"":""http://gitlab.example.com/root/test_project_4"",""readme_url"":null,""forks_count"":0,""avatar_url"":null,""star_count"":0,""last_activity_at"":""2024-03-04T09:07:50.094Z"",""namespace"":{""id"":1,""name"":""Administrator"",""path"":""root"",""kind"":""user"",""full_path"":""root"",""parent_id"":null,""avatar_url"":""https://www.gravatar.com/avatar/e64c7d89f26bd1972efa854d13d7dd61?s=80\u0026d=identicon"",""web_url"":""http://gitlab.example.com/root""},""repository_storage"":""default"",""_links"":{""self"":""http://gitlab.example.com/api/v4/projects/4"",""issues"":""http://gitlab.example.com/api/v4/projects/4/issues"",""merge_requests"":""http://gitlab.example.com/api/v4/projects/4/merge_requests"",""repo_branches"":""http://gitlab.example.com/api/v4/projects/4/repository/branches"",""labels"":""http://gitlab.example.com/api/v4/projects/4/labels"",""events"":""http://gitlab.example.com/api/v4/projects/4/events"",""members"":""http://gitlab.example.com/api/v4/projects/4/members"",""cluster_agents"":""http://gitlab.example.com/api/v4/projects/4/cluster_agents""},""packages_enabled"":true,""empty_repo"":true,""archived"":false,""visibility"":""private"",""owner"":{""id"":1,""username"":""root"",""name"":""Administrator"",""state"":""active"",""locked"":false,""avatar_url"":""https://www.gravatar.com/avatar/e64c7d89f26bd1972efa854d13d7dd61?s=80\u0026d=identicon"",""web_url"":""http://gitlab.example.com/root""},""resolve_outdated_diff_discussions"":false,""container_expiration_policy"":{""cadence"":""1d"",""enabled"":false,""keep_n"":10,""older_than"":""90d"",""name_regex"":"".*"",""name_regex_keep"":null,""next_run_at"":""2024-03-05T09:07:50.163Z""},""issues_enabled"":true,""merge_requests_enabled"":true,""wiki_enabled"":true,""jobs_enabled"":true,""snippets_enabled"":true,""container_registry_enabled"":true,""service_desk_enabled"":false,""service_desk_address"":null,""can_create_merge_request_in"":true,""issues_access_level"":""enabled"",""repository_access_level"":""enabled"",""merge_requests_access_level"":""enabled"",""forking_access_level"":""enabled"",""wiki_access_level"":""enabled"",""builds_access_level"":""enabled"",""snippets_access_level"":""enabled"",""pages_access_level"":""private"",""analytics_access_level"":""enabled"",""container_registry_access_level"":""enabled"",""security_and_compliance_access_level"":""private"",""releases_access_level"":""enabled"",""environments_access_level"":""enabled"",""feature_flags_access_level"":""enabled"",""infrastructure_access_level"":""enabled"",""monitor_access_level"":""enabled"",""model_experiments_access_level"":""enabled"",""emails_disabled"":false,""emails_enabled"":true,""shared_runners_enabled"":true,""lfs_enabled"":true,""creator_id"":1,""import_url"":null,""import_type"":null,""import_status"":""none"",""open_issues_count"":0,""description_html"":"""",""updated_at"":""2024-03-04T09:07:50.094Z"",""ci_default_git_depth"":20,""ci_forward_deployment_enabled"":true,""ci_forward_deployment_rollback_allowed"":true,""ci_job_token_scope_enabled"":false,""ci_separated_caches"":true,""ci_allow_fork_pipelines_to_run_in_parent_project"":true,""build_git_strategy"":""fetch"",""keep_latest_artifact"":true,""restrict_user_defined_variables"":false,""runners_token"":""GR1348941-VrHsy7ofk3EnQ6N9jsG"",""runner_token_expiration_interval"":null,""group_runners_enabled"":true,""auto_cancel_pending_pipelines"":""enabled"",""build_timeout"":3600,""auto_devops_enabled"":true,""auto_devops_deploy_strategy"":""continuous"",""ci_config_path"":null,""public_jobs"":true,""shared_with_groups"":[],""only_allow_merge_if_pipeline_succeeds"":false,""allow_merge_on_skipped_pipeline"":null,""request_access_enabled"":true,""only_allow_merge_if_all_discussions_are_resolved"":false,""remove_source_branch_after_merge"":true,""printing_merge_request_link_enabled"":true,""merge_method"":""merge"",""squash_option"":""default_off"",""enforce_auth_checks_on_uploads"":true,""suggestion_commit_message"":null,""merge_commit_template"":null,""squash_commit_template"":null,""issue_branch_template"":null,""autoclose_referenced_issues"":true,""permissions"":{""project_access"":{""access_level"":50,""notification_level"":3},""group_access"":null}}]",unknown,"def verify_latest_response(latest_response, request_info):
    try:
        # Extract the 'with_merge_requests_enabled' parameter from request_info
        with_merge_requests_enabled = request_info.get(""with_merge_requests_enabled"")
        
        # Check if the parameter is provided
        if with_merge_requests_enabled is None:
            return 0
        
        # Iterate through each project in the response
        for project in latest_response:
            # Check if 'merge_requests_enabled' attribute exists in the project
            if 'merge_requests_enabled' not in project:
                return 0
            
            # Verify the 'merge_requests_enabled' attribute against the input parameter
            if project['merge_requests_enabled'] != with_merge_requests_enabled:
                return -1
        
        # If all projects satisfy the constraint
        return 1
    except Exception as e:
        # In case of any unexpected error
        return -1
",True,1,True,False,False,0,1,"range of values, logic"
13,BasicProjectDetails,allow_merge_on_skipped_pipeline,,post-/projects,parameters,allow_merge_on_skipped_pipeline,Set whether or not merge requests can be merged with skipped jobs,c,False,TP,"{
  ""repository_storage"": ""default"",
  ""visibility"": ""private"",
  ""issues_enabled"": true,
  ""merge_requests_enabled"": true,
  ""allow_merge_on_skipped_pipeline"": true,
  ""auto_devops_deploy_strategy"": ""continuous"",
  ""auto_devops_enabled"": true,
  ""autoclose_referenced_issues"": true,
  ""container_registry_enabled"": true,
  ""default_branch"": ""main"",
  ""description"": null,
  ""jobs_enabled"": true,
  ""merge_method"": ""merge"",
  ""name"": ""test_project_1"",
  ""only_allow_merge_if_all_discussions_are_resolved"": false,
  ""only_allow_merge_if_pipeline_succeeds"": false,
  ""packages_enabled"": true,
  ""path"": ""test_project_1"",
  ""remove_source_branch_after_merge"": true,
  ""request_access_enabled"": true,
  ""resolve_outdated_diff_discussions"": false,
  ""shared_runners_enabled"": true,
  ""snippets_enabled"": true,
  ""tag_list"": [],
  ""wiki_enabled"": true
}","{""id"":1,""description"":null,""name"":""test_project_1"",""name_with_namespace"":""test / test_project_1"",""path"":""test_project_1"",""path_with_namespace"":""test/test_project_1"",""created_at"":""2024-02-29T12:07:00.562Z"",""default_branch"":""main"",""tag_list"":[],""topics"":[],""ssh_url_to_repo"":""git@gitlab.example.com:test/test_project_1.git"",""http_url_to_repo"":""http://gitlab.example.com/test/test_project_1.git"",""web_url"":""http://gitlab.example.com/test/test_project_1"",""readme_url"":null,""forks_count"":0,""avatar_url"":null,""star_count"":0,""last_activity_at"":""2024-03-10T10:00:40.330Z"",""namespace"":{""id"":8,""name"":""test"",""path"":""test"",""kind"":""group"",""full_path"":""test"",""parent_id"":null,""avatar_url"":null,""web_url"":""http://gitlab.example.com/groups/test""},""repository_storage"":""default"",""_links"":{""self"":""http://gitlab.example.com/api/v4/projects/1"",""issues"":""http://gitlab.example.com/api/v4/projects/1/issues"",""merge_requests"":""http://gitlab.example.com/api/v4/projects/1/merge_requests"",""repo_branches"":""http://gitlab.example.com/api/v4/projects/1/repository/branches"",""labels"":""http://gitlab.example.com/api/v4/projects/1/labels"",""events"":""http://gitlab.example.com/api/v4/projects/1/events"",""members"":""http://gitlab.example.com/api/v4/projects/1/members"",""cluster_agents"":""http://gitlab.example.com/api/v4/projects/1/cluster_agents""},""packages_enabled"":true,""empty_repo"":false,""archived"":false,""visibility"":""private"",""resolve_outdated_diff_discussions"":false,""container_expiration_policy"":{""cadence"":""1d"",""enabled"":false,""keep_n"":10,""older_than"":""90d"",""name_regex"":"".*"",""name_regex_keep"":null,""next_run_at"":""2024-03-01T12:07:00.736Z""},""issues_enabled"":true,""merge_requests_enabled"":true,""wiki_enabled"":true,""jobs_enabled"":true,""snippets_enabled"":true,""container_registry_enabled"":true,""service_desk_enabled"":false,""service_desk_address"":null,""can_create_merge_request_in"":true,""issues_access_level"":""enabled"",""repository_access_level"":""enabled"",""merge_requests_access_level"":""enabled"",""forking_access_level"":""enabled"",""wiki_access_level"":""enabled"",""builds_access_level"":""enabled"",""snippets_access_level"":""enabled"",""pages_access_level"":""private"",""analytics_access_level"":""enabled"",""container_registry_access_level"":""enabled"",""security_and_compliance_access_level"":""private"",""releases_access_level"":""enabled"",""environments_access_level"":""enabled"",""feature_flags_access_level"":""enabled"",""infrastructure_access_level"":""enabled"",""monitor_access_level"":""enabled"",""model_experiments_access_level"":""enabled"",""emails_disabled"":false,""emails_enabled"":true,""shared_runners_enabled"":true,""lfs_enabled"":true,""creator_id"":1,""import_url"":null,""import_type"":null,""import_status"":""none"",""import_error"":null,""open_issues_count"":0,""description_html"":"""",""updated_at"":""2024-03-10T14:19:34.750Z"",""ci_default_git_depth"":20,""ci_forward_deployment_enabled"":true,""ci_forward_deployment_rollback_allowed"":true,""ci_job_token_scope_enabled"":false,""ci_separated_caches"":true,""ci_allow_fork_pipelines_to_run_in_parent_project"":true,""build_git_strategy"":""fetch"",""keep_latest_artifact"":true,""restrict_user_defined_variables"":false,""runners_token"":""GR13489417rNYoRAs8xBMqnVRfbNg"",""runner_token_expiration_interval"":null,""group_runners_enabled"":true,""auto_cancel_pending_pipelines"":""enabled"",""build_timeout"":3600,""auto_devops_enabled"":true,""auto_devops_deploy_strategy"":""continuous"",""ci_config_path"":null,""public_jobs"":true,""shared_with_groups"":[],""only_allow_merge_if_pipeline_succeeds"":false,""allow_merge_on_skipped_pipeline"":true,""request_access_enabled"":true,""only_allow_merge_if_all_discussions_are_resolved"":false,""remove_source_branch_after_merge"":true,""printing_merge_request_link_enabled"":true,""merge_method"":""merge"",""squash_option"":""default_off"",""enforce_auth_checks_on_uploads"":true,""suggestion_commit_message"":null,""merge_commit_template"":null,""squash_commit_template"":null,""issue_branch_template"":null,""autoclose_referenced_issues"":true,""permissions"":{""project_access"":{""access_level"":50,""notification_level"":3},""group_access"":{""access_level"":50,""notification_level"":3}}}",unknown,"def verify_latest_response(latest_response, request_info):
    try:
        # Check if 'allow_merge_on_skipped_pipeline' exists in the response
        if 'allow_merge_on_skipped_pipeline' not in latest_response:
            return 0
        
        # Extract the value from the response
        response_value = latest_response['allow_merge_on_skipped_pipeline']
        
        # Check if the value is a boolean
        if not isinstance(response_value, bool):
            return -1
        
        # Extract the value from the request info
        request_value = request_info.get('allow_merge_on_skipped_pipeline')
        
        # Check if the request value is a boolean
        if request_value is not None and not isinstance(request_value, bool):
            return -1
        
        # Compare the response value with the request value if provided
        if request_value is not None and response_value != request_value:
            return -1
        
        return 1
    except Exception as e:
        return -1
",False,1,True,False,False,0,1,"range of values, logic"
14,BasicProjectDetails,auto_devops_deploy_strategy,,post-/projects,parameters,auto_devops_deploy_strategy,Auto Deploy strategy,c,False,TP,"{
  ""repository_storage"": ""default"",
  ""visibility"": ""private"",
  ""issues_enabled"": true,
  ""merge_requests_enabled"": true,
  ""allow_merge_on_skipped_pipeline"": true,
  ""auto_devops_deploy_strategy"": ""continuous"",
  ""auto_devops_enabled"": true,
  ""autoclose_referenced_issues"": true,
  ""container_registry_enabled"": true,
  ""default_branch"": ""main"",
  ""description"": null,
  ""jobs_enabled"": true,
  ""merge_method"": ""merge"",
  ""name"": ""test_project_1"",
  ""only_allow_merge_if_all_discussions_are_resolved"": false,
  ""only_allow_merge_if_pipeline_succeeds"": false,
  ""packages_enabled"": true,
  ""path"": ""test_project_1"",
  ""remove_source_branch_after_merge"": true,
  ""request_access_enabled"": true,
  ""resolve_outdated_diff_discussions"": false,
  ""shared_runners_enabled"": true,
  ""snippets_enabled"": true,
  ""tag_list"": [],
  ""wiki_enabled"": true
}","{""id"":1,""description"":null,""name"":""test_project_1"",""name_with_namespace"":""test / test_project_1"",""path"":""test_project_1"",""path_with_namespace"":""test/test_project_1"",""created_at"":""2024-02-29T12:07:00.562Z"",""default_branch"":""main"",""tag_list"":[],""topics"":[],""ssh_url_to_repo"":""git@gitlab.example.com:test/test_project_1.git"",""http_url_to_repo"":""http://gitlab.example.com/test/test_project_1.git"",""web_url"":""http://gitlab.example.com/test/test_project_1"",""readme_url"":null,""forks_count"":0,""avatar_url"":null,""star_count"":0,""last_activity_at"":""2024-03-10T10:00:40.330Z"",""namespace"":{""id"":8,""name"":""test"",""path"":""test"",""kind"":""group"",""full_path"":""test"",""parent_id"":null,""avatar_url"":null,""web_url"":""http://gitlab.example.com/groups/test""},""repository_storage"":""default"",""_links"":{""self"":""http://gitlab.example.com/api/v4/projects/1"",""issues"":""http://gitlab.example.com/api/v4/projects/1/issues"",""merge_requests"":""http://gitlab.example.com/api/v4/projects/1/merge_requests"",""repo_branches"":""http://gitlab.example.com/api/v4/projects/1/repository/branches"",""labels"":""http://gitlab.example.com/api/v4/projects/1/labels"",""events"":""http://gitlab.example.com/api/v4/projects/1/events"",""members"":""http://gitlab.example.com/api/v4/projects/1/members"",""cluster_agents"":""http://gitlab.example.com/api/v4/projects/1/cluster_agents""},""packages_enabled"":true,""empty_repo"":false,""archived"":false,""visibility"":""private"",""resolve_outdated_diff_discussions"":false,""container_expiration_policy"":{""cadence"":""1d"",""enabled"":false,""keep_n"":10,""older_than"":""90d"",""name_regex"":"".*"",""name_regex_keep"":null,""next_run_at"":""2024-03-01T12:07:00.736Z""},""issues_enabled"":true,""merge_requests_enabled"":true,""wiki_enabled"":true,""jobs_enabled"":true,""snippets_enabled"":true,""container_registry_enabled"":true,""service_desk_enabled"":false,""service_desk_address"":null,""can_create_merge_request_in"":true,""issues_access_level"":""enabled"",""repository_access_level"":""enabled"",""merge_requests_access_level"":""enabled"",""forking_access_level"":""enabled"",""wiki_access_level"":""enabled"",""builds_access_level"":""enabled"",""snippets_access_level"":""enabled"",""pages_access_level"":""private"",""analytics_access_level"":""enabled"",""container_registry_access_level"":""enabled"",""security_and_compliance_access_level"":""private"",""releases_access_level"":""enabled"",""environments_access_level"":""enabled"",""feature_flags_access_level"":""enabled"",""infrastructure_access_level"":""enabled"",""monitor_access_level"":""enabled"",""model_experiments_access_level"":""enabled"",""emails_disabled"":false,""emails_enabled"":true,""shared_runners_enabled"":true,""lfs_enabled"":true,""creator_id"":1,""import_url"":null,""import_type"":null,""import_status"":""none"",""import_error"":null,""open_issues_count"":0,""description_html"":"""",""updated_at"":""2024-03-10T14:19:34.750Z"",""ci_default_git_depth"":20,""ci_forward_deployment_enabled"":true,""ci_forward_deployment_rollback_allowed"":true,""ci_job_token_scope_enabled"":false,""ci_separated_caches"":true,""ci_allow_fork_pipelines_to_run_in_parent_project"":true,""build_git_strategy"":""fetch"",""keep_latest_artifact"":true,""restrict_user_defined_variables"":false,""runners_token"":""GR13489417rNYoRAs8xBMqnVRfbNg"",""runner_token_expiration_interval"":null,""group_runners_enabled"":true,""auto_cancel_pending_pipelines"":""enabled"",""build_timeout"":3600,""auto_devops_enabled"":true,""auto_devops_deploy_strategy"":""continuous"",""ci_config_path"":null,""public_jobs"":true,""shared_with_groups"":[],""only_allow_merge_if_pipeline_succeeds"":false,""allow_merge_on_skipped_pipeline"":true,""request_access_enabled"":true,""only_allow_merge_if_all_discussions_are_resolved"":false,""remove_source_branch_after_merge"":true,""printing_merge_request_link_enabled"":true,""merge_method"":""merge"",""squash_option"":""default_off"",""enforce_auth_checks_on_uploads"":true,""suggestion_commit_message"":null,""merge_commit_template"":null,""squash_commit_template"":null,""issue_branch_template"":null,""autoclose_referenced_issues"":true,""permissions"":{""project_access"":{""access_level"":50,""notification_level"":3},""group_access"":{""access_level"":50,""notification_level"":3}}}",satisfied,"def verify_latest_response(latest_response, request_info):
    try:
        # Extract the auto_devops_deploy_strategy from the response
        auto_devops_deploy_strategy = latest_response.get(""auto_devops_deploy_strategy"")
        
        # Check if the attribute exists in the response
        if auto_devops_deploy_strategy is None:
            return 0
        
        # Define the allowed values for auto_devops_deploy_strategy
        allowed_values = [""continuous"", ""manual"", ""timed_incremental""]
        
        # Verify if the value of auto_devops_deploy_strategy is within the allowed values
        if auto_devops_deploy_strategy in allowed_values:
            return 1
        else:
            return -1
    except Exception as e:
        # In case of any exception, return -1 indicating the constraint is not satisfied
        return -1
",continuous,1,True,False,False,0,1,logic
15,BasicProjectDetails,auto_devops_enabled,,post-/projects,parameters,auto_devops_enabled,Enable Auto DevOps for this project,c,False,TP,"{
  ""repository_storage"": ""default"",
  ""visibility"": ""private"",
  ""issues_enabled"": true,
  ""merge_requests_enabled"": true,
  ""allow_merge_on_skipped_pipeline"": true,
  ""auto_devops_deploy_strategy"": ""continuous"",
  ""auto_devops_enabled"": true,
  ""autoclose_referenced_issues"": true,
  ""container_registry_enabled"": true,
  ""default_branch"": ""main"",
  ""description"": null,
  ""jobs_enabled"": true,
  ""merge_method"": ""merge"",
  ""name"": ""test_project_1"",
  ""only_allow_merge_if_all_discussions_are_resolved"": false,
  ""only_allow_merge_if_pipeline_succeeds"": false,
  ""packages_enabled"": true,
  ""path"": ""test_project_1"",
  ""remove_source_branch_after_merge"": true,
  ""request_access_enabled"": true,
  ""resolve_outdated_diff_discussions"": false,
  ""shared_runners_enabled"": true,
  ""snippets_enabled"": true,
  ""tag_list"": [],
  ""wiki_enabled"": true
}","{""id"":1,""description"":null,""name"":""test_project_1"",""name_with_namespace"":""test / test_project_1"",""path"":""test_project_1"",""path_with_namespace"":""test/test_project_1"",""created_at"":""2024-02-29T12:07:00.562Z"",""default_branch"":""main"",""tag_list"":[],""topics"":[],""ssh_url_to_repo"":""git@gitlab.example.com:test/test_project_1.git"",""http_url_to_repo"":""http://gitlab.example.com/test/test_project_1.git"",""web_url"":""http://gitlab.example.com/test/test_project_1"",""readme_url"":null,""forks_count"":0,""avatar_url"":null,""star_count"":0,""last_activity_at"":""2024-03-10T10:00:40.330Z"",""namespace"":{""id"":8,""name"":""test"",""path"":""test"",""kind"":""group"",""full_path"":""test"",""parent_id"":null,""avatar_url"":null,""web_url"":""http://gitlab.example.com/groups/test""},""repository_storage"":""default"",""_links"":{""self"":""http://gitlab.example.com/api/v4/projects/1"",""issues"":""http://gitlab.example.com/api/v4/projects/1/issues"",""merge_requests"":""http://gitlab.example.com/api/v4/projects/1/merge_requests"",""repo_branches"":""http://gitlab.example.com/api/v4/projects/1/repository/branches"",""labels"":""http://gitlab.example.com/api/v4/projects/1/labels"",""events"":""http://gitlab.example.com/api/v4/projects/1/events"",""members"":""http://gitlab.example.com/api/v4/projects/1/members"",""cluster_agents"":""http://gitlab.example.com/api/v4/projects/1/cluster_agents""},""packages_enabled"":true,""empty_repo"":false,""archived"":false,""visibility"":""private"",""resolve_outdated_diff_discussions"":false,""container_expiration_policy"":{""cadence"":""1d"",""enabled"":false,""keep_n"":10,""older_than"":""90d"",""name_regex"":"".*"",""name_regex_keep"":null,""next_run_at"":""2024-03-01T12:07:00.736Z""},""issues_enabled"":true,""merge_requests_enabled"":true,""wiki_enabled"":true,""jobs_enabled"":true,""snippets_enabled"":true,""container_registry_enabled"":true,""service_desk_enabled"":false,""service_desk_address"":null,""can_create_merge_request_in"":true,""issues_access_level"":""enabled"",""repository_access_level"":""enabled"",""merge_requests_access_level"":""enabled"",""forking_access_level"":""enabled"",""wiki_access_level"":""enabled"",""builds_access_level"":""enabled"",""snippets_access_level"":""enabled"",""pages_access_level"":""private"",""analytics_access_level"":""enabled"",""container_registry_access_level"":""enabled"",""security_and_compliance_access_level"":""private"",""releases_access_level"":""enabled"",""environments_access_level"":""enabled"",""feature_flags_access_level"":""enabled"",""infrastructure_access_level"":""enabled"",""monitor_access_level"":""enabled"",""model_experiments_access_level"":""enabled"",""emails_disabled"":false,""emails_enabled"":true,""shared_runners_enabled"":true,""lfs_enabled"":true,""creator_id"":1,""import_url"":null,""import_type"":null,""import_status"":""none"",""import_error"":null,""open_issues_count"":0,""description_html"":"""",""updated_at"":""2024-03-10T14:19:34.750Z"",""ci_default_git_depth"":20,""ci_forward_deployment_enabled"":true,""ci_forward_deployment_rollback_allowed"":true,""ci_job_token_scope_enabled"":false,""ci_separated_caches"":true,""ci_allow_fork_pipelines_to_run_in_parent_project"":true,""build_git_strategy"":""fetch"",""keep_latest_artifact"":true,""restrict_user_defined_variables"":false,""runners_token"":""GR13489417rNYoRAs8xBMqnVRfbNg"",""runner_token_expiration_interval"":null,""group_runners_enabled"":true,""auto_cancel_pending_pipelines"":""enabled"",""build_timeout"":3600,""auto_devops_enabled"":true,""auto_devops_deploy_strategy"":""continuous"",""ci_config_path"":null,""public_jobs"":true,""shared_with_groups"":[],""only_allow_merge_if_pipeline_succeeds"":false,""allow_merge_on_skipped_pipeline"":true,""request_access_enabled"":true,""only_allow_merge_if_all_discussions_are_resolved"":false,""remove_source_branch_after_merge"":true,""printing_merge_request_link_enabled"":true,""merge_method"":""merge"",""squash_option"":""default_off"",""enforce_auth_checks_on_uploads"":true,""suggestion_commit_message"":null,""merge_commit_template"":null,""squash_commit_template"":null,""issue_branch_template"":null,""autoclose_referenced_issues"":true,""permissions"":{""project_access"":{""access_level"":50,""notification_level"":3},""group_access"":{""access_level"":50,""notification_level"":3}}}",satisfied,"def verify_latest_response(latest_response, request_info):
    try:
        # Check if 'auto_devops_enabled' is in the response
        if 'auto_devops_enabled' not in latest_response:
            return 0
        
        # Extract the value of 'auto_devops_enabled' from the response
        response_value = latest_response['auto_devops_enabled']
        
        # Check if the value is a boolean
        if not isinstance(response_value, bool):
            return -1
        
        # Extract the value of 'auto_devops_enabled' from the request info
        request_value = request_info.get('auto_devops_enabled')
        
        # Convert request_value to boolean if it's a string
        if isinstance(request_value, str):
            request_value = request_value.lower() == 'true'
        
        # Check if the request value matches the response value
        if response_value == request_value:
            return 1
        else:
            return -1
    except Exception as e:
        return -1
",True,1,True,False,False,0,1,"range of values, logic"
16,BasicProjectDetails,autoclose_referenced_issues,,post-/projects,parameters,autoclose_referenced_issues,Set whether auto-closing referenced issues on default branch,c,False,TP,"{
  ""repository_storage"": ""default"",
  ""visibility"": ""private"",
  ""issues_enabled"": true,
  ""merge_requests_enabled"": true,
  ""allow_merge_on_skipped_pipeline"": true,
  ""auto_devops_deploy_strategy"": ""continuous"",
  ""auto_devops_enabled"": true,
  ""autoclose_referenced_issues"": true,
  ""container_registry_enabled"": true,
  ""default_branch"": ""main"",
  ""description"": null,
  ""jobs_enabled"": true,
  ""merge_method"": ""merge"",
  ""name"": ""test_project_1"",
  ""only_allow_merge_if_all_discussions_are_resolved"": false,
  ""only_allow_merge_if_pipeline_succeeds"": false,
  ""packages_enabled"": true,
  ""path"": ""test_project_1"",
  ""remove_source_branch_after_merge"": true,
  ""request_access_enabled"": true,
  ""resolve_outdated_diff_discussions"": false,
  ""shared_runners_enabled"": true,
  ""snippets_enabled"": true,
  ""tag_list"": [],
  ""wiki_enabled"": true
}","{""id"":1,""description"":null,""name"":""test_project_1"",""name_with_namespace"":""test / test_project_1"",""path"":""test_project_1"",""path_with_namespace"":""test/test_project_1"",""created_at"":""2024-02-29T12:07:00.562Z"",""default_branch"":""main"",""tag_list"":[],""topics"":[],""ssh_url_to_repo"":""git@gitlab.example.com:test/test_project_1.git"",""http_url_to_repo"":""http://gitlab.example.com/test/test_project_1.git"",""web_url"":""http://gitlab.example.com/test/test_project_1"",""readme_url"":null,""forks_count"":0,""avatar_url"":null,""star_count"":0,""last_activity_at"":""2024-03-10T10:00:40.330Z"",""namespace"":{""id"":8,""name"":""test"",""path"":""test"",""kind"":""group"",""full_path"":""test"",""parent_id"":null,""avatar_url"":null,""web_url"":""http://gitlab.example.com/groups/test""},""repository_storage"":""default"",""_links"":{""self"":""http://gitlab.example.com/api/v4/projects/1"",""issues"":""http://gitlab.example.com/api/v4/projects/1/issues"",""merge_requests"":""http://gitlab.example.com/api/v4/projects/1/merge_requests"",""repo_branches"":""http://gitlab.example.com/api/v4/projects/1/repository/branches"",""labels"":""http://gitlab.example.com/api/v4/projects/1/labels"",""events"":""http://gitlab.example.com/api/v4/projects/1/events"",""members"":""http://gitlab.example.com/api/v4/projects/1/members"",""cluster_agents"":""http://gitlab.example.com/api/v4/projects/1/cluster_agents""},""packages_enabled"":true,""empty_repo"":false,""archived"":false,""visibility"":""private"",""resolve_outdated_diff_discussions"":false,""container_expiration_policy"":{""cadence"":""1d"",""enabled"":false,""keep_n"":10,""older_than"":""90d"",""name_regex"":"".*"",""name_regex_keep"":null,""next_run_at"":""2024-03-01T12:07:00.736Z""},""issues_enabled"":true,""merge_requests_enabled"":true,""wiki_enabled"":true,""jobs_enabled"":true,""snippets_enabled"":true,""container_registry_enabled"":true,""service_desk_enabled"":false,""service_desk_address"":null,""can_create_merge_request_in"":true,""issues_access_level"":""enabled"",""repository_access_level"":""enabled"",""merge_requests_access_level"":""enabled"",""forking_access_level"":""enabled"",""wiki_access_level"":""enabled"",""builds_access_level"":""enabled"",""snippets_access_level"":""enabled"",""pages_access_level"":""private"",""analytics_access_level"":""enabled"",""container_registry_access_level"":""enabled"",""security_and_compliance_access_level"":""private"",""releases_access_level"":""enabled"",""environments_access_level"":""enabled"",""feature_flags_access_level"":""enabled"",""infrastructure_access_level"":""enabled"",""monitor_access_level"":""enabled"",""model_experiments_access_level"":""enabled"",""emails_disabled"":false,""emails_enabled"":true,""shared_runners_enabled"":true,""lfs_enabled"":true,""creator_id"":1,""import_url"":null,""import_type"":null,""import_status"":""none"",""import_error"":null,""open_issues_count"":0,""description_html"":"""",""updated_at"":""2024-03-10T14:19:34.750Z"",""ci_default_git_depth"":20,""ci_forward_deployment_enabled"":true,""ci_forward_deployment_rollback_allowed"":true,""ci_job_token_scope_enabled"":false,""ci_separated_caches"":true,""ci_allow_fork_pipelines_to_run_in_parent_project"":true,""build_git_strategy"":""fetch"",""keep_latest_artifact"":true,""restrict_user_defined_variables"":false,""runners_token"":""GR13489417rNYoRAs8xBMqnVRfbNg"",""runner_token_expiration_interval"":null,""group_runners_enabled"":true,""auto_cancel_pending_pipelines"":""enabled"",""build_timeout"":3600,""auto_devops_enabled"":true,""auto_devops_deploy_strategy"":""continuous"",""ci_config_path"":null,""public_jobs"":true,""shared_with_groups"":[],""only_allow_merge_if_pipeline_succeeds"":false,""allow_merge_on_skipped_pipeline"":true,""request_access_enabled"":true,""only_allow_merge_if_all_discussions_are_resolved"":false,""remove_source_branch_after_merge"":true,""printing_merge_request_link_enabled"":true,""merge_method"":""merge"",""squash_option"":""default_off"",""enforce_auth_checks_on_uploads"":true,""suggestion_commit_message"":null,""merge_commit_template"":null,""squash_commit_template"":null,""issue_branch_template"":null,""autoclose_referenced_issues"":true,""permissions"":{""project_access"":{""access_level"":50,""notification_level"":3},""group_access"":{""access_level"":50,""notification_level"":3}}}",satisfied,"def verify_latest_response(latest_response, request_info):
    try:
        # Check if 'autoclose_referenced_issues' exists in the response
        if 'autoclose_referenced_issues' not in latest_response:
            return 0
        
        # Extract the value from the response
        response_value = latest_response['autoclose_referenced_issues']
        
        # Check if the value is of boolean type
        if isinstance(response_value, bool):
            return 1
        else:
            return -1
    except Exception as e:
        return -1
",True,1,True,False,False,0,1,"range of values, logic"
18,BasicProjectDetails,container_registry_enabled,,post-/projects,parameters,container_registry_enabled,Enable container registry for this project,c,False,TP,"{
  ""repository_storage"": ""default"",
  ""visibility"": ""private"",
  ""issues_enabled"": true,
  ""merge_requests_enabled"": true,
  ""allow_merge_on_skipped_pipeline"": true,
  ""auto_devops_deploy_strategy"": ""continuous"",
  ""auto_devops_enabled"": true,
  ""autoclose_referenced_issues"": true,
  ""container_registry_enabled"": true,
  ""default_branch"": ""main"",
  ""description"": null,
  ""jobs_enabled"": true,
  ""merge_method"": ""merge"",
  ""name"": ""test_project_1"",
  ""only_allow_merge_if_all_discussions_are_resolved"": false,
  ""only_allow_merge_if_pipeline_succeeds"": false,
  ""packages_enabled"": true,
  ""path"": ""test_project_1"",
  ""remove_source_branch_after_merge"": true,
  ""request_access_enabled"": true,
  ""resolve_outdated_diff_discussions"": false,
  ""shared_runners_enabled"": true,
  ""snippets_enabled"": true,
  ""tag_list"": [],
  ""wiki_enabled"": true
}","{""id"":1,""description"":null,""name"":""test_project_1"",""name_with_namespace"":""test / test_project_1"",""path"":""test_project_1"",""path_with_namespace"":""test/test_project_1"",""created_at"":""2024-02-29T12:07:00.562Z"",""default_branch"":""main"",""tag_list"":[],""topics"":[],""ssh_url_to_repo"":""git@gitlab.example.com:test/test_project_1.git"",""http_url_to_repo"":""http://gitlab.example.com/test/test_project_1.git"",""web_url"":""http://gitlab.example.com/test/test_project_1"",""readme_url"":null,""forks_count"":0,""avatar_url"":null,""star_count"":0,""last_activity_at"":""2024-03-10T10:00:40.330Z"",""namespace"":{""id"":8,""name"":""test"",""path"":""test"",""kind"":""group"",""full_path"":""test"",""parent_id"":null,""avatar_url"":null,""web_url"":""http://gitlab.example.com/groups/test""},""repository_storage"":""default"",""_links"":{""self"":""http://gitlab.example.com/api/v4/projects/1"",""issues"":""http://gitlab.example.com/api/v4/projects/1/issues"",""merge_requests"":""http://gitlab.example.com/api/v4/projects/1/merge_requests"",""repo_branches"":""http://gitlab.example.com/api/v4/projects/1/repository/branches"",""labels"":""http://gitlab.example.com/api/v4/projects/1/labels"",""events"":""http://gitlab.example.com/api/v4/projects/1/events"",""members"":""http://gitlab.example.com/api/v4/projects/1/members"",""cluster_agents"":""http://gitlab.example.com/api/v4/projects/1/cluster_agents""},""packages_enabled"":true,""empty_repo"":false,""archived"":false,""visibility"":""private"",""resolve_outdated_diff_discussions"":false,""container_expiration_policy"":{""cadence"":""1d"",""enabled"":false,""keep_n"":10,""older_than"":""90d"",""name_regex"":"".*"",""name_regex_keep"":null,""next_run_at"":""2024-03-01T12:07:00.736Z""},""issues_enabled"":true,""merge_requests_enabled"":true,""wiki_enabled"":true,""jobs_enabled"":true,""snippets_enabled"":true,""container_registry_enabled"":true,""service_desk_enabled"":false,""service_desk_address"":null,""can_create_merge_request_in"":true,""issues_access_level"":""enabled"",""repository_access_level"":""enabled"",""merge_requests_access_level"":""enabled"",""forking_access_level"":""enabled"",""wiki_access_level"":""enabled"",""builds_access_level"":""enabled"",""snippets_access_level"":""enabled"",""pages_access_level"":""private"",""analytics_access_level"":""enabled"",""container_registry_access_level"":""enabled"",""security_and_compliance_access_level"":""private"",""releases_access_level"":""enabled"",""environments_access_level"":""enabled"",""feature_flags_access_level"":""enabled"",""infrastructure_access_level"":""enabled"",""monitor_access_level"":""enabled"",""model_experiments_access_level"":""enabled"",""emails_disabled"":false,""emails_enabled"":true,""shared_runners_enabled"":true,""lfs_enabled"":true,""creator_id"":1,""import_url"":null,""import_type"":null,""import_status"":""none"",""import_error"":null,""open_issues_count"":0,""description_html"":"""",""updated_at"":""2024-03-10T14:19:34.750Z"",""ci_default_git_depth"":20,""ci_forward_deployment_enabled"":true,""ci_forward_deployment_rollback_allowed"":true,""ci_job_token_scope_enabled"":false,""ci_separated_caches"":true,""ci_allow_fork_pipelines_to_run_in_parent_project"":true,""build_git_strategy"":""fetch"",""keep_latest_artifact"":true,""restrict_user_defined_variables"":false,""runners_token"":""GR13489417rNYoRAs8xBMqnVRfbNg"",""runner_token_expiration_interval"":null,""group_runners_enabled"":true,""auto_cancel_pending_pipelines"":""enabled"",""build_timeout"":3600,""auto_devops_enabled"":true,""auto_devops_deploy_strategy"":""continuous"",""ci_config_path"":null,""public_jobs"":true,""shared_with_groups"":[],""only_allow_merge_if_pipeline_succeeds"":false,""allow_merge_on_skipped_pipeline"":true,""request_access_enabled"":true,""only_allow_merge_if_all_discussions_are_resolved"":false,""remove_source_branch_after_merge"":true,""printing_merge_request_link_enabled"":true,""merge_method"":""merge"",""squash_option"":""default_off"",""enforce_auth_checks_on_uploads"":true,""suggestion_commit_message"":null,""merge_commit_template"":null,""squash_commit_template"":null,""issue_branch_template"":null,""autoclose_referenced_issues"":true,""permissions"":{""project_access"":{""access_level"":50,""notification_level"":3},""group_access"":{""access_level"":50,""notification_level"":3}}}",satisfied,"def verify_latest_response(latest_response, request_info):
    try:
        # Check if 'container_registry_enabled' exists in both request_info and latest_response
        request_value = request_info.get('container_registry_enabled', None)
        response_value = latest_response.get('container_registry_enabled', None)

        # If the attribute does not exist in the response, return 0 indicating insufficient information
        if response_value is None:
            return 0

        # Ensure the type of the response value is boolean
        if not isinstance(response_value, bool):
            return -1

        # If the attribute exists in the request, check if it matches the response
        if request_value is not None:
            if isinstance(request_value, bool) and request_value == response_value:
                return 1
            else:
                return -1

        # If the attribute does not exist in the request, but exists in the response and is a valid boolean
        return 1

    except Exception as e:
        # In case of any error during verification, consider the constraints not satisfied
        return -1
",False,1,True,False,False,0,1,"range of values, logic"
19,BasicProjectDetails,default_branch,,post-/projects,parameters,default_branch,master by default,c,False,TP,"{
  ""repository_storage"": ""default"",
  ""visibility"": ""private"",
  ""issues_enabled"": true,
  ""merge_requests_enabled"": true,
  ""allow_merge_on_skipped_pipeline"": true,
  ""auto_devops_deploy_strategy"": ""continuous"",
  ""auto_devops_enabled"": true,
  ""autoclose_referenced_issues"": true,
  ""container_registry_enabled"": true,
  ""default_branch"": ""main"",
  ""description"": null,
  ""jobs_enabled"": true,
  ""merge_method"": ""merge"",
  ""name"": ""test_project_1"",
  ""only_allow_merge_if_all_discussions_are_resolved"": false,
  ""only_allow_merge_if_pipeline_succeeds"": false,
  ""packages_enabled"": true,
  ""path"": ""test_project_1"",
  ""remove_source_branch_after_merge"": true,
  ""request_access_enabled"": true,
  ""resolve_outdated_diff_discussions"": false,
  ""shared_runners_enabled"": true,
  ""snippets_enabled"": true,
  ""tag_list"": [],
  ""wiki_enabled"": true
}","{""id"":1,""description"":null,""name"":""test_project_1"",""name_with_namespace"":""test / test_project_1"",""path"":""test_project_1"",""path_with_namespace"":""test/test_project_1"",""created_at"":""2024-02-29T12:07:00.562Z"",""default_branch"":""main"",""tag_list"":[],""topics"":[],""ssh_url_to_repo"":""git@gitlab.example.com:test/test_project_1.git"",""http_url_to_repo"":""http://gitlab.example.com/test/test_project_1.git"",""web_url"":""http://gitlab.example.com/test/test_project_1"",""readme_url"":null,""forks_count"":0,""avatar_url"":null,""star_count"":0,""last_activity_at"":""2024-03-10T10:00:40.330Z"",""namespace"":{""id"":8,""name"":""test"",""path"":""test"",""kind"":""group"",""full_path"":""test"",""parent_id"":null,""avatar_url"":null,""web_url"":""http://gitlab.example.com/groups/test""},""repository_storage"":""default"",""_links"":{""self"":""http://gitlab.example.com/api/v4/projects/1"",""issues"":""http://gitlab.example.com/api/v4/projects/1/issues"",""merge_requests"":""http://gitlab.example.com/api/v4/projects/1/merge_requests"",""repo_branches"":""http://gitlab.example.com/api/v4/projects/1/repository/branches"",""labels"":""http://gitlab.example.com/api/v4/projects/1/labels"",""events"":""http://gitlab.example.com/api/v4/projects/1/events"",""members"":""http://gitlab.example.com/api/v4/projects/1/members"",""cluster_agents"":""http://gitlab.example.com/api/v4/projects/1/cluster_agents""},""packages_enabled"":true,""empty_repo"":false,""archived"":false,""visibility"":""private"",""resolve_outdated_diff_discussions"":false,""container_expiration_policy"":{""cadence"":""1d"",""enabled"":false,""keep_n"":10,""older_than"":""90d"",""name_regex"":"".*"",""name_regex_keep"":null,""next_run_at"":""2024-03-01T12:07:00.736Z""},""issues_enabled"":true,""merge_requests_enabled"":true,""wiki_enabled"":true,""jobs_enabled"":true,""snippets_enabled"":true,""container_registry_enabled"":true,""service_desk_enabled"":false,""service_desk_address"":null,""can_create_merge_request_in"":true,""issues_access_level"":""enabled"",""repository_access_level"":""enabled"",""merge_requests_access_level"":""enabled"",""forking_access_level"":""enabled"",""wiki_access_level"":""enabled"",""builds_access_level"":""enabled"",""snippets_access_level"":""enabled"",""pages_access_level"":""private"",""analytics_access_level"":""enabled"",""container_registry_access_level"":""enabled"",""security_and_compliance_access_level"":""private"",""releases_access_level"":""enabled"",""environments_access_level"":""enabled"",""feature_flags_access_level"":""enabled"",""infrastructure_access_level"":""enabled"",""monitor_access_level"":""enabled"",""model_experiments_access_level"":""enabled"",""emails_disabled"":false,""emails_enabled"":true,""shared_runners_enabled"":true,""lfs_enabled"":true,""creator_id"":1,""import_url"":null,""import_type"":null,""import_status"":""none"",""import_error"":null,""open_issues_count"":0,""description_html"":"""",""updated_at"":""2024-03-10T14:19:34.750Z"",""ci_default_git_depth"":20,""ci_forward_deployment_enabled"":true,""ci_forward_deployment_rollback_allowed"":true,""ci_job_token_scope_enabled"":false,""ci_separated_caches"":true,""ci_allow_fork_pipelines_to_run_in_parent_project"":true,""build_git_strategy"":""fetch"",""keep_latest_artifact"":true,""restrict_user_defined_variables"":false,""runners_token"":""GR13489417rNYoRAs8xBMqnVRfbNg"",""runner_token_expiration_interval"":null,""group_runners_enabled"":true,""auto_cancel_pending_pipelines"":""enabled"",""build_timeout"":3600,""auto_devops_enabled"":true,""auto_devops_deploy_strategy"":""continuous"",""ci_config_path"":null,""public_jobs"":true,""shared_with_groups"":[],""only_allow_merge_if_pipeline_succeeds"":false,""allow_merge_on_skipped_pipeline"":true,""request_access_enabled"":true,""only_allow_merge_if_all_discussions_are_resolved"":false,""remove_source_branch_after_merge"":true,""printing_merge_request_link_enabled"":true,""merge_method"":""merge"",""squash_option"":""default_off"",""enforce_auth_checks_on_uploads"":true,""suggestion_commit_message"":null,""merge_commit_template"":null,""squash_commit_template"":null,""issue_branch_template"":null,""autoclose_referenced_issues"":true,""permissions"":{""project_access"":{""access_level"":50,""notification_level"":3},""group_access"":{""access_level"":50,""notification_level"":3}}}",mismatched,"def verify_latest_response(latest_response, request_info):
    try:
        # Extract the default_branch from the response
        default_branch_response = latest_response.get(""default_branch"")
        
        # Check if the default_branch exists in the response
        if default_branch_response is None:
            return 0
        
        # Extract the default_branch from the request info, if provided
        default_branch_request = request_info.get(""default_branch"", ""master"")
        
        # Verify the constraint
        if isinstance(default_branch_response, str) and default_branch_response == default_branch_request:
            return 1
        else:
            return -1
    except Exception as e:
        return -1
",master,1,True,False,False,0,1,logic
20,BasicProjectDetails,description,,post-/projects,parameters,description,Short project description,c,False,TP,"{
  ""repository_storage"": ""default"",
  ""visibility"": ""private"",
  ""issues_enabled"": true,
  ""merge_requests_enabled"": true,
  ""allow_merge_on_skipped_pipeline"": true,
  ""auto_devops_deploy_strategy"": ""continuous"",
  ""auto_devops_enabled"": true,
  ""autoclose_referenced_issues"": true,
  ""container_registry_enabled"": true,
  ""default_branch"": ""main"",
  ""description"": null,
  ""jobs_enabled"": true,
  ""merge_method"": ""merge"",
  ""name"": ""test_project_1"",
  ""only_allow_merge_if_all_discussions_are_resolved"": false,
  ""only_allow_merge_if_pipeline_succeeds"": false,
  ""packages_enabled"": true,
  ""path"": ""test_project_1"",
  ""remove_source_branch_after_merge"": true,
  ""request_access_enabled"": true,
  ""resolve_outdated_diff_discussions"": false,
  ""shared_runners_enabled"": true,
  ""snippets_enabled"": true,
  ""tag_list"": [],
  ""wiki_enabled"": true
}","{""id"":1,""description"":null,""name"":""test_project_1"",""name_with_namespace"":""test / test_project_1"",""path"":""test_project_1"",""path_with_namespace"":""test/test_project_1"",""created_at"":""2024-02-29T12:07:00.562Z"",""default_branch"":""main"",""tag_list"":[],""topics"":[],""ssh_url_to_repo"":""git@gitlab.example.com:test/test_project_1.git"",""http_url_to_repo"":""http://gitlab.example.com/test/test_project_1.git"",""web_url"":""http://gitlab.example.com/test/test_project_1"",""readme_url"":null,""forks_count"":0,""avatar_url"":null,""star_count"":0,""last_activity_at"":""2024-03-10T10:00:40.330Z"",""namespace"":{""id"":8,""name"":""test"",""path"":""test"",""kind"":""group"",""full_path"":""test"",""parent_id"":null,""avatar_url"":null,""web_url"":""http://gitlab.example.com/groups/test""},""repository_storage"":""default"",""_links"":{""self"":""http://gitlab.example.com/api/v4/projects/1"",""issues"":""http://gitlab.example.com/api/v4/projects/1/issues"",""merge_requests"":""http://gitlab.example.com/api/v4/projects/1/merge_requests"",""repo_branches"":""http://gitlab.example.com/api/v4/projects/1/repository/branches"",""labels"":""http://gitlab.example.com/api/v4/projects/1/labels"",""events"":""http://gitlab.example.com/api/v4/projects/1/events"",""members"":""http://gitlab.example.com/api/v4/projects/1/members"",""cluster_agents"":""http://gitlab.example.com/api/v4/projects/1/cluster_agents""},""packages_enabled"":true,""empty_repo"":false,""archived"":false,""visibility"":""private"",""resolve_outdated_diff_discussions"":false,""container_expiration_policy"":{""cadence"":""1d"",""enabled"":false,""keep_n"":10,""older_than"":""90d"",""name_regex"":"".*"",""name_regex_keep"":null,""next_run_at"":""2024-03-01T12:07:00.736Z""},""issues_enabled"":true,""merge_requests_enabled"":true,""wiki_enabled"":true,""jobs_enabled"":true,""snippets_enabled"":true,""container_registry_enabled"":true,""service_desk_enabled"":false,""service_desk_address"":null,""can_create_merge_request_in"":true,""issues_access_level"":""enabled"",""repository_access_level"":""enabled"",""merge_requests_access_level"":""enabled"",""forking_access_level"":""enabled"",""wiki_access_level"":""enabled"",""builds_access_level"":""enabled"",""snippets_access_level"":""enabled"",""pages_access_level"":""private"",""analytics_access_level"":""enabled"",""container_registry_access_level"":""enabled"",""security_and_compliance_access_level"":""private"",""releases_access_level"":""enabled"",""environments_access_level"":""enabled"",""feature_flags_access_level"":""enabled"",""infrastructure_access_level"":""enabled"",""monitor_access_level"":""enabled"",""model_experiments_access_level"":""enabled"",""emails_disabled"":false,""emails_enabled"":true,""shared_runners_enabled"":true,""lfs_enabled"":true,""creator_id"":1,""import_url"":null,""import_type"":null,""import_status"":""none"",""import_error"":null,""open_issues_count"":0,""description_html"":"""",""updated_at"":""2024-03-10T14:19:34.750Z"",""ci_default_git_depth"":20,""ci_forward_deployment_enabled"":true,""ci_forward_deployment_rollback_allowed"":true,""ci_job_token_scope_enabled"":false,""ci_separated_caches"":true,""ci_allow_fork_pipelines_to_run_in_parent_project"":true,""build_git_strategy"":""fetch"",""keep_latest_artifact"":true,""restrict_user_defined_variables"":false,""runners_token"":""GR13489417rNYoRAs8xBMqnVRfbNg"",""runner_token_expiration_interval"":null,""group_runners_enabled"":true,""auto_cancel_pending_pipelines"":""enabled"",""build_timeout"":3600,""auto_devops_enabled"":true,""auto_devops_deploy_strategy"":""continuous"",""ci_config_path"":null,""public_jobs"":true,""shared_with_groups"":[],""only_allow_merge_if_pipeline_succeeds"":false,""allow_merge_on_skipped_pipeline"":true,""request_access_enabled"":true,""only_allow_merge_if_all_discussions_are_resolved"":false,""remove_source_branch_after_merge"":true,""printing_merge_request_link_enabled"":true,""merge_method"":""merge"",""squash_option"":""default_off"",""enforce_auth_checks_on_uploads"":true,""suggestion_commit_message"":null,""merge_commit_template"":null,""squash_commit_template"":null,""issue_branch_template"":null,""autoclose_referenced_issues"":true,""permissions"":{""project_access"":{""access_level"":50,""notification_level"":3},""group_access"":{""access_level"":50,""notification_level"":3}}}",unknown,"def verify_latest_response(latest_response, request_info):
    try:
        # Extract the description from the response
        response_description = latest_response.get(""description"", None)
        
        # Check if the description exists in the response
        if response_description is None:
            return 0
        
        # Extract the description from the request info
        request_description = request_info.get(""description"", None)
        
        # Check if the description exists in the request info
        if request_description is None:
            return 0
        
        # Verify the description matches the request description
        if response_description == request_description:
            return 1
        else:
            return -1
    except Exception as e:
        # Handle any unexpected errors
        return -1
",GitLab Community Edition,1,False,False,True,0,1,logic
21,BasicProjectDetails,jobs_enabled,,post-/projects,parameters,jobs_enabled,(Deprecated)Enable jobs for this project. Use builds_access_level instead,c,False,TP,"{
  ""repository_storage"": ""default"",
  ""visibility"": ""private"",
  ""issues_enabled"": true,
  ""merge_requests_enabled"": true,
  ""allow_merge_on_skipped_pipeline"": true,
  ""auto_devops_deploy_strategy"": ""continuous"",
  ""auto_devops_enabled"": true,
  ""autoclose_referenced_issues"": true,
  ""container_registry_enabled"": true,
  ""default_branch"": ""main"",
  ""description"": null,
  ""jobs_enabled"": true,
  ""merge_method"": ""merge"",
  ""name"": ""test_project_1"",
  ""only_allow_merge_if_all_discussions_are_resolved"": false,
  ""only_allow_merge_if_pipeline_succeeds"": false,
  ""packages_enabled"": true,
  ""path"": ""test_project_1"",
  ""remove_source_branch_after_merge"": true,
  ""request_access_enabled"": true,
  ""resolve_outdated_diff_discussions"": false,
  ""shared_runners_enabled"": true,
  ""snippets_enabled"": true,
  ""tag_list"": [],
  ""wiki_enabled"": true
}","{""id"":1,""description"":null,""name"":""test_project_1"",""name_with_namespace"":""test / test_project_1"",""path"":""test_project_1"",""path_with_namespace"":""test/test_project_1"",""created_at"":""2024-02-29T12:07:00.562Z"",""default_branch"":""main"",""tag_list"":[],""topics"":[],""ssh_url_to_repo"":""git@gitlab.example.com:test/test_project_1.git"",""http_url_to_repo"":""http://gitlab.example.com/test/test_project_1.git"",""web_url"":""http://gitlab.example.com/test/test_project_1"",""readme_url"":null,""forks_count"":0,""avatar_url"":null,""star_count"":0,""last_activity_at"":""2024-03-10T10:00:40.330Z"",""namespace"":{""id"":8,""name"":""test"",""path"":""test"",""kind"":""group"",""full_path"":""test"",""parent_id"":null,""avatar_url"":null,""web_url"":""http://gitlab.example.com/groups/test""},""repository_storage"":""default"",""_links"":{""self"":""http://gitlab.example.com/api/v4/projects/1"",""issues"":""http://gitlab.example.com/api/v4/projects/1/issues"",""merge_requests"":""http://gitlab.example.com/api/v4/projects/1/merge_requests"",""repo_branches"":""http://gitlab.example.com/api/v4/projects/1/repository/branches"",""labels"":""http://gitlab.example.com/api/v4/projects/1/labels"",""events"":""http://gitlab.example.com/api/v4/projects/1/events"",""members"":""http://gitlab.example.com/api/v4/projects/1/members"",""cluster_agents"":""http://gitlab.example.com/api/v4/projects/1/cluster_agents""},""packages_enabled"":true,""empty_repo"":false,""archived"":false,""visibility"":""private"",""resolve_outdated_diff_discussions"":false,""container_expiration_policy"":{""cadence"":""1d"",""enabled"":false,""keep_n"":10,""older_than"":""90d"",""name_regex"":"".*"",""name_regex_keep"":null,""next_run_at"":""2024-03-01T12:07:00.736Z""},""issues_enabled"":true,""merge_requests_enabled"":true,""wiki_enabled"":true,""jobs_enabled"":true,""snippets_enabled"":true,""container_registry_enabled"":true,""service_desk_enabled"":false,""service_desk_address"":null,""can_create_merge_request_in"":true,""issues_access_level"":""enabled"",""repository_access_level"":""enabled"",""merge_requests_access_level"":""enabled"",""forking_access_level"":""enabled"",""wiki_access_level"":""enabled"",""builds_access_level"":""enabled"",""snippets_access_level"":""enabled"",""pages_access_level"":""private"",""analytics_access_level"":""enabled"",""container_registry_access_level"":""enabled"",""security_and_compliance_access_level"":""private"",""releases_access_level"":""enabled"",""environments_access_level"":""enabled"",""feature_flags_access_level"":""enabled"",""infrastructure_access_level"":""enabled"",""monitor_access_level"":""enabled"",""model_experiments_access_level"":""enabled"",""emails_disabled"":false,""emails_enabled"":true,""shared_runners_enabled"":true,""lfs_enabled"":true,""creator_id"":1,""import_url"":null,""import_type"":null,""import_status"":""none"",""import_error"":null,""open_issues_count"":0,""description_html"":"""",""updated_at"":""2024-03-10T14:19:34.750Z"",""ci_default_git_depth"":20,""ci_forward_deployment_enabled"":true,""ci_forward_deployment_rollback_allowed"":true,""ci_job_token_scope_enabled"":false,""ci_separated_caches"":true,""ci_allow_fork_pipelines_to_run_in_parent_project"":true,""build_git_strategy"":""fetch"",""keep_latest_artifact"":true,""restrict_user_defined_variables"":false,""runners_token"":""GR13489417rNYoRAs8xBMqnVRfbNg"",""runner_token_expiration_interval"":null,""group_runners_enabled"":true,""auto_cancel_pending_pipelines"":""enabled"",""build_timeout"":3600,""auto_devops_enabled"":true,""auto_devops_deploy_strategy"":""continuous"",""ci_config_path"":null,""public_jobs"":true,""shared_with_groups"":[],""only_allow_merge_if_pipeline_succeeds"":false,""allow_merge_on_skipped_pipeline"":true,""request_access_enabled"":true,""only_allow_merge_if_all_discussions_are_resolved"":false,""remove_source_branch_after_merge"":true,""printing_merge_request_link_enabled"":true,""merge_method"":""merge"",""squash_option"":""default_off"",""enforce_auth_checks_on_uploads"":true,""suggestion_commit_message"":null,""merge_commit_template"":null,""squash_commit_template"":null,""issue_branch_template"":null,""autoclose_referenced_issues"":true,""permissions"":{""project_access"":{""access_level"":50,""notification_level"":3},""group_access"":{""access_level"":50,""notification_level"":3}}}",satisfied,"def verify_latest_response(latest_response, request_info):
    try:
        # Check if 'jobs_enabled' is in the response
        if 'jobs_enabled' not in latest_response:
            return 0  # Attribute does not exist in the response
        
        # Check if 'jobs_enabled' is of type boolean
        if not isinstance(latest_response['jobs_enabled'], bool):
            return -1  # Constraint not satisfied, type mismatch
        
        return 1  # Constraint satisfied
    except Exception as e:
        return -1  # Constraint not satisfied due to an exception
",True,1,True,False,False,0,1,"range of values, logic"
22,BasicProjectDetails,merge_method,,post-/projects,parameters,merge_method,Set the merge method used,c,False,TP,"{
  ""repository_storage"": ""default"",
  ""visibility"": ""private"",
  ""issues_enabled"": true,
  ""merge_requests_enabled"": true,
  ""allow_merge_on_skipped_pipeline"": true,
  ""auto_devops_deploy_strategy"": ""continuous"",
  ""auto_devops_enabled"": true,
  ""autoclose_referenced_issues"": true,
  ""container_registry_enabled"": true,
  ""default_branch"": ""main"",
  ""description"": null,
  ""jobs_enabled"": true,
  ""merge_method"": ""merge"",
  ""name"": ""test_project_1"",
  ""only_allow_merge_if_all_discussions_are_resolved"": false,
  ""only_allow_merge_if_pipeline_succeeds"": false,
  ""packages_enabled"": true,
  ""path"": ""test_project_1"",
  ""remove_source_branch_after_merge"": true,
  ""request_access_enabled"": true,
  ""resolve_outdated_diff_discussions"": false,
  ""shared_runners_enabled"": true,
  ""snippets_enabled"": true,
  ""tag_list"": [],
  ""wiki_enabled"": true
}","{""id"":1,""description"":null,""name"":""test_project_1"",""name_with_namespace"":""test / test_project_1"",""path"":""test_project_1"",""path_with_namespace"":""test/test_project_1"",""created_at"":""2024-02-29T12:07:00.562Z"",""default_branch"":""main"",""tag_list"":[],""topics"":[],""ssh_url_to_repo"":""git@gitlab.example.com:test/test_project_1.git"",""http_url_to_repo"":""http://gitlab.example.com/test/test_project_1.git"",""web_url"":""http://gitlab.example.com/test/test_project_1"",""readme_url"":null,""forks_count"":0,""avatar_url"":null,""star_count"":0,""last_activity_at"":""2024-03-10T10:00:40.330Z"",""namespace"":{""id"":8,""name"":""test"",""path"":""test"",""kind"":""group"",""full_path"":""test"",""parent_id"":null,""avatar_url"":null,""web_url"":""http://gitlab.example.com/groups/test""},""repository_storage"":""default"",""_links"":{""self"":""http://gitlab.example.com/api/v4/projects/1"",""issues"":""http://gitlab.example.com/api/v4/projects/1/issues"",""merge_requests"":""http://gitlab.example.com/api/v4/projects/1/merge_requests"",""repo_branches"":""http://gitlab.example.com/api/v4/projects/1/repository/branches"",""labels"":""http://gitlab.example.com/api/v4/projects/1/labels"",""events"":""http://gitlab.example.com/api/v4/projects/1/events"",""members"":""http://gitlab.example.com/api/v4/projects/1/members"",""cluster_agents"":""http://gitlab.example.com/api/v4/projects/1/cluster_agents""},""packages_enabled"":true,""empty_repo"":false,""archived"":false,""visibility"":""private"",""resolve_outdated_diff_discussions"":false,""container_expiration_policy"":{""cadence"":""1d"",""enabled"":false,""keep_n"":10,""older_than"":""90d"",""name_regex"":"".*"",""name_regex_keep"":null,""next_run_at"":""2024-03-01T12:07:00.736Z""},""issues_enabled"":true,""merge_requests_enabled"":true,""wiki_enabled"":true,""jobs_enabled"":true,""snippets_enabled"":true,""container_registry_enabled"":true,""service_desk_enabled"":false,""service_desk_address"":null,""can_create_merge_request_in"":true,""issues_access_level"":""enabled"",""repository_access_level"":""enabled"",""merge_requests_access_level"":""enabled"",""forking_access_level"":""enabled"",""wiki_access_level"":""enabled"",""builds_access_level"":""enabled"",""snippets_access_level"":""enabled"",""pages_access_level"":""private"",""analytics_access_level"":""enabled"",""container_registry_access_level"":""enabled"",""security_and_compliance_access_level"":""private"",""releases_access_level"":""enabled"",""environments_access_level"":""enabled"",""feature_flags_access_level"":""enabled"",""infrastructure_access_level"":""enabled"",""monitor_access_level"":""enabled"",""model_experiments_access_level"":""enabled"",""emails_disabled"":false,""emails_enabled"":true,""shared_runners_enabled"":true,""lfs_enabled"":true,""creator_id"":1,""import_url"":null,""import_type"":null,""import_status"":""none"",""import_error"":null,""open_issues_count"":0,""description_html"":"""",""updated_at"":""2024-03-10T14:19:34.750Z"",""ci_default_git_depth"":20,""ci_forward_deployment_enabled"":true,""ci_forward_deployment_rollback_allowed"":true,""ci_job_token_scope_enabled"":false,""ci_separated_caches"":true,""ci_allow_fork_pipelines_to_run_in_parent_project"":true,""build_git_strategy"":""fetch"",""keep_latest_artifact"":true,""restrict_user_defined_variables"":false,""runners_token"":""GR13489417rNYoRAs8xBMqnVRfbNg"",""runner_token_expiration_interval"":null,""group_runners_enabled"":true,""auto_cancel_pending_pipelines"":""enabled"",""build_timeout"":3600,""auto_devops_enabled"":true,""auto_devops_deploy_strategy"":""continuous"",""ci_config_path"":null,""public_jobs"":true,""shared_with_groups"":[],""only_allow_merge_if_pipeline_succeeds"":false,""allow_merge_on_skipped_pipeline"":true,""request_access_enabled"":true,""only_allow_merge_if_all_discussions_are_resolved"":false,""remove_source_branch_after_merge"":true,""printing_merge_request_link_enabled"":true,""merge_method"":""merge"",""squash_option"":""default_off"",""enforce_auth_checks_on_uploads"":true,""suggestion_commit_message"":null,""merge_commit_template"":null,""squash_commit_template"":null,""issue_branch_template"":null,""autoclose_referenced_issues"":true,""permissions"":{""project_access"":{""access_level"":50,""notification_level"":3},""group_access"":{""access_level"":50,""notification_level"":3}}}",satisfied,"def verify_latest_response(latest_response, request_info):
    try:
        # Extract the merge_method from the response
        merge_method = latest_response.get(""merge_method"")
        
        # Check if merge_method exists in the response
        if merge_method is None:
            return 0
        
        # Define the allowed values for merge_method
        allowed_merge_methods = [""merge"", ""rebase_merge"", ""ff""]
        
        # Verify if the merge_method in the response is one of the allowed values
        if merge_method in allowed_merge_methods:
            return 1
        else:
            return -1
    except Exception as e:
        # Handle any unexpected errors
        return -1
",merge,1,True,False,False,0,1,"range of values, logic"
23,BasicProjectDetails,name,,post-/projects,parameters,name,"The name of the new project. Either path or name is required, not both",c,False,TP,"{
  ""repository_storage"": ""default"",
  ""visibility"": ""private"",
  ""issues_enabled"": true,
  ""merge_requests_enabled"": true,
  ""allow_merge_on_skipped_pipeline"": true,
  ""auto_devops_deploy_strategy"": ""continuous"",
  ""auto_devops_enabled"": true,
  ""autoclose_referenced_issues"": true,
  ""container_registry_enabled"": true,
  ""default_branch"": ""main"",
  ""description"": null,
  ""jobs_enabled"": true,
  ""merge_method"": ""merge"",
  ""name"": ""test_project_1"",
  ""only_allow_merge_if_all_discussions_are_resolved"": false,
  ""only_allow_merge_if_pipeline_succeeds"": false,
  ""packages_enabled"": true,
  ""path"": ""test_project_1"",
  ""remove_source_branch_after_merge"": true,
  ""request_access_enabled"": true,
  ""resolve_outdated_diff_discussions"": false,
  ""shared_runners_enabled"": true,
  ""snippets_enabled"": true,
  ""tag_list"": [],
  ""wiki_enabled"": true
}","{""id"":1,""description"":null,""name"":""test_project_1"",""name_with_namespace"":""test / test_project_1"",""path"":""test_project_1"",""path_with_namespace"":""test/test_project_1"",""created_at"":""2024-02-29T12:07:00.562Z"",""default_branch"":""main"",""tag_list"":[],""topics"":[],""ssh_url_to_repo"":""git@gitlab.example.com:test/test_project_1.git"",""http_url_to_repo"":""http://gitlab.example.com/test/test_project_1.git"",""web_url"":""http://gitlab.example.com/test/test_project_1"",""readme_url"":null,""forks_count"":0,""avatar_url"":null,""star_count"":0,""last_activity_at"":""2024-03-10T10:00:40.330Z"",""namespace"":{""id"":8,""name"":""test"",""path"":""test"",""kind"":""group"",""full_path"":""test"",""parent_id"":null,""avatar_url"":null,""web_url"":""http://gitlab.example.com/groups/test""},""repository_storage"":""default"",""_links"":{""self"":""http://gitlab.example.com/api/v4/projects/1"",""issues"":""http://gitlab.example.com/api/v4/projects/1/issues"",""merge_requests"":""http://gitlab.example.com/api/v4/projects/1/merge_requests"",""repo_branches"":""http://gitlab.example.com/api/v4/projects/1/repository/branches"",""labels"":""http://gitlab.example.com/api/v4/projects/1/labels"",""events"":""http://gitlab.example.com/api/v4/projects/1/events"",""members"":""http://gitlab.example.com/api/v4/projects/1/members"",""cluster_agents"":""http://gitlab.example.com/api/v4/projects/1/cluster_agents""},""packages_enabled"":true,""empty_repo"":false,""archived"":false,""visibility"":""private"",""resolve_outdated_diff_discussions"":false,""container_expiration_policy"":{""cadence"":""1d"",""enabled"":false,""keep_n"":10,""older_than"":""90d"",""name_regex"":"".*"",""name_regex_keep"":null,""next_run_at"":""2024-03-01T12:07:00.736Z""},""issues_enabled"":true,""merge_requests_enabled"":true,""wiki_enabled"":true,""jobs_enabled"":true,""snippets_enabled"":true,""container_registry_enabled"":true,""service_desk_enabled"":false,""service_desk_address"":null,""can_create_merge_request_in"":true,""issues_access_level"":""enabled"",""repository_access_level"":""enabled"",""merge_requests_access_level"":""enabled"",""forking_access_level"":""enabled"",""wiki_access_level"":""enabled"",""builds_access_level"":""enabled"",""snippets_access_level"":""enabled"",""pages_access_level"":""private"",""analytics_access_level"":""enabled"",""container_registry_access_level"":""enabled"",""security_and_compliance_access_level"":""private"",""releases_access_level"":""enabled"",""environments_access_level"":""enabled"",""feature_flags_access_level"":""enabled"",""infrastructure_access_level"":""enabled"",""monitor_access_level"":""enabled"",""model_experiments_access_level"":""enabled"",""emails_disabled"":false,""emails_enabled"":true,""shared_runners_enabled"":true,""lfs_enabled"":true,""creator_id"":1,""import_url"":null,""import_type"":null,""import_status"":""none"",""import_error"":null,""open_issues_count"":0,""description_html"":"""",""updated_at"":""2024-03-10T14:19:34.750Z"",""ci_default_git_depth"":20,""ci_forward_deployment_enabled"":true,""ci_forward_deployment_rollback_allowed"":true,""ci_job_token_scope_enabled"":false,""ci_separated_caches"":true,""ci_allow_fork_pipelines_to_run_in_parent_project"":true,""build_git_strategy"":""fetch"",""keep_latest_artifact"":true,""restrict_user_defined_variables"":false,""runners_token"":""GR13489417rNYoRAs8xBMqnVRfbNg"",""runner_token_expiration_interval"":null,""group_runners_enabled"":true,""auto_cancel_pending_pipelines"":""enabled"",""build_timeout"":3600,""auto_devops_enabled"":true,""auto_devops_deploy_strategy"":""continuous"",""ci_config_path"":null,""public_jobs"":true,""shared_with_groups"":[],""only_allow_merge_if_pipeline_succeeds"":false,""allow_merge_on_skipped_pipeline"":true,""request_access_enabled"":true,""only_allow_merge_if_all_discussions_are_resolved"":false,""remove_source_branch_after_merge"":true,""printing_merge_request_link_enabled"":true,""merge_method"":""merge"",""squash_option"":""default_off"",""enforce_auth_checks_on_uploads"":true,""suggestion_commit_message"":null,""merge_commit_template"":null,""squash_commit_template"":null,""issue_branch_template"":null,""autoclose_referenced_issues"":true,""permissions"":{""project_access"":{""access_level"":50,""notification_level"":3},""group_access"":{""access_level"":50,""notification_level"":3}}}",satisfied,"def verify_latest_response(latest_response, request_info):
    try:
        # Check if 'name' is in the request_info
        if 'name' in request_info:
            # Ensure 'name' is in the response
            if 'name' not in latest_response:
                return 0  # Insufficient information to verify the constraint
            
            # Verify the 'name' attribute in the response
            if isinstance(latest_response['name'], str):
                return 1  # Constraint is satisfied
            else:
                return -1  # Constraint is not satisfied
        else:
            return 0  # Insufficient information to verify the constraint
    except Exception as e:
        return -1  # Constraint is not satisfied due to an error
",Diaspora Client,1,True,False,False,0,1,inter-parameter dependency
24,BasicProjectDetails,only_allow_merge_if_all_discussions_are_resolved,,post-/projects,parameters,only_allow_merge_if_all_discussions_are_resolved,Set whether merge requests can only be merged when all the discussions are resolved,c,False,TP,"{
  ""repository_storage"": ""default"",
  ""visibility"": ""private"",
  ""issues_enabled"": true,
  ""merge_requests_enabled"": true,
  ""allow_merge_on_skipped_pipeline"": true,
  ""auto_devops_deploy_strategy"": ""continuous"",
  ""auto_devops_enabled"": true,
  ""autoclose_referenced_issues"": true,
  ""container_registry_enabled"": true,
  ""default_branch"": ""main"",
  ""description"": null,
  ""jobs_enabled"": true,
  ""merge_method"": ""merge"",
  ""name"": ""test_project_1"",
  ""only_allow_merge_if_all_discussions_are_resolved"": false,
  ""only_allow_merge_if_pipeline_succeeds"": false,
  ""packages_enabled"": true,
  ""path"": ""test_project_1"",
  ""remove_source_branch_after_merge"": true,
  ""request_access_enabled"": true,
  ""resolve_outdated_diff_discussions"": false,
  ""shared_runners_enabled"": true,
  ""snippets_enabled"": true,
  ""tag_list"": [],
  ""wiki_enabled"": true
}","{""id"":1,""description"":null,""name"":""test_project_1"",""name_with_namespace"":""test / test_project_1"",""path"":""test_project_1"",""path_with_namespace"":""test/test_project_1"",""created_at"":""2024-02-29T12:07:00.562Z"",""default_branch"":""main"",""tag_list"":[],""topics"":[],""ssh_url_to_repo"":""git@gitlab.example.com:test/test_project_1.git"",""http_url_to_repo"":""http://gitlab.example.com/test/test_project_1.git"",""web_url"":""http://gitlab.example.com/test/test_project_1"",""readme_url"":null,""forks_count"":0,""avatar_url"":null,""star_count"":0,""last_activity_at"":""2024-03-10T10:00:40.330Z"",""namespace"":{""id"":8,""name"":""test"",""path"":""test"",""kind"":""group"",""full_path"":""test"",""parent_id"":null,""avatar_url"":null,""web_url"":""http://gitlab.example.com/groups/test""},""repository_storage"":""default"",""_links"":{""self"":""http://gitlab.example.com/api/v4/projects/1"",""issues"":""http://gitlab.example.com/api/v4/projects/1/issues"",""merge_requests"":""http://gitlab.example.com/api/v4/projects/1/merge_requests"",""repo_branches"":""http://gitlab.example.com/api/v4/projects/1/repository/branches"",""labels"":""http://gitlab.example.com/api/v4/projects/1/labels"",""events"":""http://gitlab.example.com/api/v4/projects/1/events"",""members"":""http://gitlab.example.com/api/v4/projects/1/members"",""cluster_agents"":""http://gitlab.example.com/api/v4/projects/1/cluster_agents""},""packages_enabled"":true,""empty_repo"":false,""archived"":false,""visibility"":""private"",""resolve_outdated_diff_discussions"":false,""container_expiration_policy"":{""cadence"":""1d"",""enabled"":false,""keep_n"":10,""older_than"":""90d"",""name_regex"":"".*"",""name_regex_keep"":null,""next_run_at"":""2024-03-01T12:07:00.736Z""},""issues_enabled"":true,""merge_requests_enabled"":true,""wiki_enabled"":true,""jobs_enabled"":true,""snippets_enabled"":true,""container_registry_enabled"":true,""service_desk_enabled"":false,""service_desk_address"":null,""can_create_merge_request_in"":true,""issues_access_level"":""enabled"",""repository_access_level"":""enabled"",""merge_requests_access_level"":""enabled"",""forking_access_level"":""enabled"",""wiki_access_level"":""enabled"",""builds_access_level"":""enabled"",""snippets_access_level"":""enabled"",""pages_access_level"":""private"",""analytics_access_level"":""enabled"",""container_registry_access_level"":""enabled"",""security_and_compliance_access_level"":""private"",""releases_access_level"":""enabled"",""environments_access_level"":""enabled"",""feature_flags_access_level"":""enabled"",""infrastructure_access_level"":""enabled"",""monitor_access_level"":""enabled"",""model_experiments_access_level"":""enabled"",""emails_disabled"":false,""emails_enabled"":true,""shared_runners_enabled"":true,""lfs_enabled"":true,""creator_id"":1,""import_url"":null,""import_type"":null,""import_status"":""none"",""import_error"":null,""open_issues_count"":0,""description_html"":"""",""updated_at"":""2024-03-10T14:19:34.750Z"",""ci_default_git_depth"":20,""ci_forward_deployment_enabled"":true,""ci_forward_deployment_rollback_allowed"":true,""ci_job_token_scope_enabled"":false,""ci_separated_caches"":true,""ci_allow_fork_pipelines_to_run_in_parent_project"":true,""build_git_strategy"":""fetch"",""keep_latest_artifact"":true,""restrict_user_defined_variables"":false,""runners_token"":""GR13489417rNYoRAs8xBMqnVRfbNg"",""runner_token_expiration_interval"":null,""group_runners_enabled"":true,""auto_cancel_pending_pipelines"":""enabled"",""build_timeout"":3600,""auto_devops_enabled"":true,""auto_devops_deploy_strategy"":""continuous"",""ci_config_path"":null,""public_jobs"":true,""shared_with_groups"":[],""only_allow_merge_if_pipeline_succeeds"":false,""allow_merge_on_skipped_pipeline"":true,""request_access_enabled"":true,""only_allow_merge_if_all_discussions_are_resolved"":false,""remove_source_branch_after_merge"":true,""printing_merge_request_link_enabled"":true,""merge_method"":""merge"",""squash_option"":""default_off"",""enforce_auth_checks_on_uploads"":true,""suggestion_commit_message"":null,""merge_commit_template"":null,""squash_commit_template"":null,""issue_branch_template"":null,""autoclose_referenced_issues"":true,""permissions"":{""project_access"":{""access_level"":50,""notification_level"":3},""group_access"":{""access_level"":50,""notification_level"":3}}}",satisfied,"def verify_latest_response(latest_response, request_info):
    try:
        # Check if the attribute exists in the response
        if 'only_allow_merge_if_all_discussions_are_resolved' not in latest_response:
            return 0
        
        # Extract the value from the response
        response_value = latest_response['only_allow_merge_if_all_discussions_are_resolved']
        
        # Ensure the value is a boolean
        if not isinstance(response_value, bool):
            return -1
        
        # Extract the value from the request info
        request_value = request_info.get('only_allow_merge_if_all_discussions_are_resolved')
        
        # Ensure the request value is a boolean
        if request_value is not None and not isinstance(request_value, bool):
            return -1
        
        # Compare the values
        if request_value is not None and response_value != request_value:
            return -1
        
        return 1
    except Exception as e:
        return -1
",False,1,True,False,False,0,1,"range of values, logic"
25,BasicProjectDetails,only_allow_merge_if_pipeline_succeeds,,post-/projects,parameters,only_allow_merge_if_pipeline_succeeds,Set whether merge requests can only be merged with successful jobs,c,False,TP,"{
  ""repository_storage"": ""default"",
  ""visibility"": ""private"",
  ""issues_enabled"": true,
  ""merge_requests_enabled"": true,
  ""allow_merge_on_skipped_pipeline"": true,
  ""auto_devops_deploy_strategy"": ""continuous"",
  ""auto_devops_enabled"": true,
  ""autoclose_referenced_issues"": true,
  ""container_registry_enabled"": true,
  ""default_branch"": ""main"",
  ""description"": null,
  ""jobs_enabled"": true,
  ""merge_method"": ""merge"",
  ""name"": ""test_project_1"",
  ""only_allow_merge_if_all_discussions_are_resolved"": false,
  ""only_allow_merge_if_pipeline_succeeds"": false,
  ""packages_enabled"": true,
  ""path"": ""test_project_1"",
  ""remove_source_branch_after_merge"": true,
  ""request_access_enabled"": true,
  ""resolve_outdated_diff_discussions"": false,
  ""shared_runners_enabled"": true,
  ""snippets_enabled"": true,
  ""tag_list"": [],
  ""wiki_enabled"": true
}","{""id"":1,""description"":null,""name"":""test_project_1"",""name_with_namespace"":""test / test_project_1"",""path"":""test_project_1"",""path_with_namespace"":""test/test_project_1"",""created_at"":""2024-02-29T12:07:00.562Z"",""default_branch"":""main"",""tag_list"":[],""topics"":[],""ssh_url_to_repo"":""git@gitlab.example.com:test/test_project_1.git"",""http_url_to_repo"":""http://gitlab.example.com/test/test_project_1.git"",""web_url"":""http://gitlab.example.com/test/test_project_1"",""readme_url"":null,""forks_count"":0,""avatar_url"":null,""star_count"":0,""last_activity_at"":""2024-03-10T10:00:40.330Z"",""namespace"":{""id"":8,""name"":""test"",""path"":""test"",""kind"":""group"",""full_path"":""test"",""parent_id"":null,""avatar_url"":null,""web_url"":""http://gitlab.example.com/groups/test""},""repository_storage"":""default"",""_links"":{""self"":""http://gitlab.example.com/api/v4/projects/1"",""issues"":""http://gitlab.example.com/api/v4/projects/1/issues"",""merge_requests"":""http://gitlab.example.com/api/v4/projects/1/merge_requests"",""repo_branches"":""http://gitlab.example.com/api/v4/projects/1/repository/branches"",""labels"":""http://gitlab.example.com/api/v4/projects/1/labels"",""events"":""http://gitlab.example.com/api/v4/projects/1/events"",""members"":""http://gitlab.example.com/api/v4/projects/1/members"",""cluster_agents"":""http://gitlab.example.com/api/v4/projects/1/cluster_agents""},""packages_enabled"":true,""empty_repo"":false,""archived"":false,""visibility"":""private"",""resolve_outdated_diff_discussions"":false,""container_expiration_policy"":{""cadence"":""1d"",""enabled"":false,""keep_n"":10,""older_than"":""90d"",""name_regex"":"".*"",""name_regex_keep"":null,""next_run_at"":""2024-03-01T12:07:00.736Z""},""issues_enabled"":true,""merge_requests_enabled"":true,""wiki_enabled"":true,""jobs_enabled"":true,""snippets_enabled"":true,""container_registry_enabled"":true,""service_desk_enabled"":false,""service_desk_address"":null,""can_create_merge_request_in"":true,""issues_access_level"":""enabled"",""repository_access_level"":""enabled"",""merge_requests_access_level"":""enabled"",""forking_access_level"":""enabled"",""wiki_access_level"":""enabled"",""builds_access_level"":""enabled"",""snippets_access_level"":""enabled"",""pages_access_level"":""private"",""analytics_access_level"":""enabled"",""container_registry_access_level"":""enabled"",""security_and_compliance_access_level"":""private"",""releases_access_level"":""enabled"",""environments_access_level"":""enabled"",""feature_flags_access_level"":""enabled"",""infrastructure_access_level"":""enabled"",""monitor_access_level"":""enabled"",""model_experiments_access_level"":""enabled"",""emails_disabled"":false,""emails_enabled"":true,""shared_runners_enabled"":true,""lfs_enabled"":true,""creator_id"":1,""import_url"":null,""import_type"":null,""import_status"":""none"",""import_error"":null,""open_issues_count"":0,""description_html"":"""",""updated_at"":""2024-03-10T14:19:34.750Z"",""ci_default_git_depth"":20,""ci_forward_deployment_enabled"":true,""ci_forward_deployment_rollback_allowed"":true,""ci_job_token_scope_enabled"":false,""ci_separated_caches"":true,""ci_allow_fork_pipelines_to_run_in_parent_project"":true,""build_git_strategy"":""fetch"",""keep_latest_artifact"":true,""restrict_user_defined_variables"":false,""runners_token"":""GR13489417rNYoRAs8xBMqnVRfbNg"",""runner_token_expiration_interval"":null,""group_runners_enabled"":true,""auto_cancel_pending_pipelines"":""enabled"",""build_timeout"":3600,""auto_devops_enabled"":true,""auto_devops_deploy_strategy"":""continuous"",""ci_config_path"":null,""public_jobs"":true,""shared_with_groups"":[],""only_allow_merge_if_pipeline_succeeds"":false,""allow_merge_on_skipped_pipeline"":true,""request_access_enabled"":true,""only_allow_merge_if_all_discussions_are_resolved"":false,""remove_source_branch_after_merge"":true,""printing_merge_request_link_enabled"":true,""merge_method"":""merge"",""squash_option"":""default_off"",""enforce_auth_checks_on_uploads"":true,""suggestion_commit_message"":null,""merge_commit_template"":null,""squash_commit_template"":null,""issue_branch_template"":null,""autoclose_referenced_issues"":true,""permissions"":{""project_access"":{""access_level"":50,""notification_level"":3},""group_access"":{""access_level"":50,""notification_level"":3}}}",satisfied,"def verify_latest_response(latest_response, request_info):
    try:
        # Check if the attribute exists in the response
        if 'only_allow_merge_if_pipeline_succeeds' not in latest_response:
            return 0
        
        # Extract the value from the response
        response_value = latest_response['only_allow_merge_if_pipeline_succeeds']
        
        # Check if the value is a boolean
        if not isinstance(response_value, bool):
            return -1
        
        # Extract the expected value from the request info
        if 'only_allow_merge_if_pipeline_succeeds' not in request_info:
            return 0
        
        expected_value = request_info['only_allow_merge_if_pipeline_succeeds']
        
        # Check if the expected value is a boolean
        if not isinstance(expected_value, bool):
            return -1
        
        # Verify if the response value matches the expected value
        if response_value == expected_value:
            return 1
        else:
            return -1
    except Exception as e:
        return -1
",False,1,True,False,False,0,1,"range of values, logic"
26,BasicProjectDetails,packages_enabled,,post-/projects,parameters,packages_enabled,Enable or disable packages repository feature,c,False,TP,"{
  ""repository_storage"": ""default"",
  ""visibility"": ""private"",
  ""issues_enabled"": true,
  ""merge_requests_enabled"": true,
  ""allow_merge_on_skipped_pipeline"": true,
  ""auto_devops_deploy_strategy"": ""continuous"",
  ""auto_devops_enabled"": true,
  ""autoclose_referenced_issues"": true,
  ""container_registry_enabled"": true,
  ""default_branch"": ""main"",
  ""description"": null,
  ""jobs_enabled"": true,
  ""merge_method"": ""merge"",
  ""name"": ""test_project_1"",
  ""only_allow_merge_if_all_discussions_are_resolved"": false,
  ""only_allow_merge_if_pipeline_succeeds"": false,
  ""packages_enabled"": true,
  ""path"": ""test_project_1"",
  ""remove_source_branch_after_merge"": true,
  ""request_access_enabled"": true,
  ""resolve_outdated_diff_discussions"": false,
  ""shared_runners_enabled"": true,
  ""snippets_enabled"": true,
  ""tag_list"": [],
  ""wiki_enabled"": true
}","{""id"":1,""description"":null,""name"":""test_project_1"",""name_with_namespace"":""test / test_project_1"",""path"":""test_project_1"",""path_with_namespace"":""test/test_project_1"",""created_at"":""2024-02-29T12:07:00.562Z"",""default_branch"":""main"",""tag_list"":[],""topics"":[],""ssh_url_to_repo"":""git@gitlab.example.com:test/test_project_1.git"",""http_url_to_repo"":""http://gitlab.example.com/test/test_project_1.git"",""web_url"":""http://gitlab.example.com/test/test_project_1"",""readme_url"":null,""forks_count"":0,""avatar_url"":null,""star_count"":0,""last_activity_at"":""2024-03-10T10:00:40.330Z"",""namespace"":{""id"":8,""name"":""test"",""path"":""test"",""kind"":""group"",""full_path"":""test"",""parent_id"":null,""avatar_url"":null,""web_url"":""http://gitlab.example.com/groups/test""},""repository_storage"":""default"",""_links"":{""self"":""http://gitlab.example.com/api/v4/projects/1"",""issues"":""http://gitlab.example.com/api/v4/projects/1/issues"",""merge_requests"":""http://gitlab.example.com/api/v4/projects/1/merge_requests"",""repo_branches"":""http://gitlab.example.com/api/v4/projects/1/repository/branches"",""labels"":""http://gitlab.example.com/api/v4/projects/1/labels"",""events"":""http://gitlab.example.com/api/v4/projects/1/events"",""members"":""http://gitlab.example.com/api/v4/projects/1/members"",""cluster_agents"":""http://gitlab.example.com/api/v4/projects/1/cluster_agents""},""packages_enabled"":true,""empty_repo"":false,""archived"":false,""visibility"":""private"",""resolve_outdated_diff_discussions"":false,""container_expiration_policy"":{""cadence"":""1d"",""enabled"":false,""keep_n"":10,""older_than"":""90d"",""name_regex"":"".*"",""name_regex_keep"":null,""next_run_at"":""2024-03-01T12:07:00.736Z""},""issues_enabled"":true,""merge_requests_enabled"":true,""wiki_enabled"":true,""jobs_enabled"":true,""snippets_enabled"":true,""container_registry_enabled"":true,""service_desk_enabled"":false,""service_desk_address"":null,""can_create_merge_request_in"":true,""issues_access_level"":""enabled"",""repository_access_level"":""enabled"",""merge_requests_access_level"":""enabled"",""forking_access_level"":""enabled"",""wiki_access_level"":""enabled"",""builds_access_level"":""enabled"",""snippets_access_level"":""enabled"",""pages_access_level"":""private"",""analytics_access_level"":""enabled"",""container_registry_access_level"":""enabled"",""security_and_compliance_access_level"":""private"",""releases_access_level"":""enabled"",""environments_access_level"":""enabled"",""feature_flags_access_level"":""enabled"",""infrastructure_access_level"":""enabled"",""monitor_access_level"":""enabled"",""model_experiments_access_level"":""enabled"",""emails_disabled"":false,""emails_enabled"":true,""shared_runners_enabled"":true,""lfs_enabled"":true,""creator_id"":1,""import_url"":null,""import_type"":null,""import_status"":""none"",""import_error"":null,""open_issues_count"":0,""description_html"":"""",""updated_at"":""2024-03-10T14:19:34.750Z"",""ci_default_git_depth"":20,""ci_forward_deployment_enabled"":true,""ci_forward_deployment_rollback_allowed"":true,""ci_job_token_scope_enabled"":false,""ci_separated_caches"":true,""ci_allow_fork_pipelines_to_run_in_parent_project"":true,""build_git_strategy"":""fetch"",""keep_latest_artifact"":true,""restrict_user_defined_variables"":false,""runners_token"":""GR13489417rNYoRAs8xBMqnVRfbNg"",""runner_token_expiration_interval"":null,""group_runners_enabled"":true,""auto_cancel_pending_pipelines"":""enabled"",""build_timeout"":3600,""auto_devops_enabled"":true,""auto_devops_deploy_strategy"":""continuous"",""ci_config_path"":null,""public_jobs"":true,""shared_with_groups"":[],""only_allow_merge_if_pipeline_succeeds"":false,""allow_merge_on_skipped_pipeline"":true,""request_access_enabled"":true,""only_allow_merge_if_all_discussions_are_resolved"":false,""remove_source_branch_after_merge"":true,""printing_merge_request_link_enabled"":true,""merge_method"":""merge"",""squash_option"":""default_off"",""enforce_auth_checks_on_uploads"":true,""suggestion_commit_message"":null,""merge_commit_template"":null,""squash_commit_template"":null,""issue_branch_template"":null,""autoclose_referenced_issues"":true,""permissions"":{""project_access"":{""access_level"":50,""notification_level"":3},""group_access"":{""access_level"":50,""notification_level"":3}}}",satisfied,"def verify_latest_response(latest_response, request_info):
    try:
        # Check if 'packages_enabled' exists in request_info and is a boolean
        if 'packages_enabled' in request_info:
            if not isinstance(request_info['packages_enabled'], bool):
                return -1
        
        # Check if 'packages_enabled' exists in latest_response and is a boolean
        if 'packages_enabled' in latest_response:
            if not isinstance(latest_response['packages_enabled'], bool):
                return -1
        else:
            # 'packages_enabled' does not exist in the response
            return 0
        
        # If 'packages_enabled' exists in both request_info and latest_response, compare them
        if 'packages_enabled' in request_info:
            if request_info['packages_enabled'] != latest_response['packages_enabled']:
                return -1
        
        # If all checks pass, the constraint is satisfied
        return 1
    except Exception as e:
        # In case of any exception, consider the verification failed
        return -1
",True,1,True,False,False,0,1,range of values
27,BasicProjectDetails,path,,post-/projects,parameters,path,Repository name for new project. Generated based on name if not provided (generated as lowercase with dashes),c,False,TP,"{
  ""repository_storage"": ""default"",
  ""visibility"": ""private"",
  ""issues_enabled"": true,
  ""merge_requests_enabled"": true,
  ""allow_merge_on_skipped_pipeline"": true,
  ""auto_devops_deploy_strategy"": ""continuous"",
  ""auto_devops_enabled"": true,
  ""autoclose_referenced_issues"": true,
  ""container_registry_enabled"": true,
  ""default_branch"": ""main"",
  ""description"": null,
  ""jobs_enabled"": true,
  ""merge_method"": ""merge"",
  ""name"": ""test_project_1"",
  ""only_allow_merge_if_all_discussions_are_resolved"": false,
  ""only_allow_merge_if_pipeline_succeeds"": false,
  ""packages_enabled"": true,
  ""path"": ""test_project_1"",
  ""remove_source_branch_after_merge"": true,
  ""request_access_enabled"": true,
  ""resolve_outdated_diff_discussions"": false,
  ""shared_runners_enabled"": true,
  ""snippets_enabled"": true,
  ""tag_list"": [],
  ""wiki_enabled"": true
}","{""id"":1,""description"":null,""name"":""test_project_1"",""name_with_namespace"":""test / test_project_1"",""path"":""test_project_1"",""path_with_namespace"":""test/test_project_1"",""created_at"":""2024-02-29T12:07:00.562Z"",""default_branch"":""main"",""tag_list"":[],""topics"":[],""ssh_url_to_repo"":""git@gitlab.example.com:test/test_project_1.git"",""http_url_to_repo"":""http://gitlab.example.com/test/test_project_1.git"",""web_url"":""http://gitlab.example.com/test/test_project_1"",""readme_url"":null,""forks_count"":0,""avatar_url"":null,""star_count"":0,""last_activity_at"":""2024-03-10T10:00:40.330Z"",""namespace"":{""id"":8,""name"":""test"",""path"":""test"",""kind"":""group"",""full_path"":""test"",""parent_id"":null,""avatar_url"":null,""web_url"":""http://gitlab.example.com/groups/test""},""repository_storage"":""default"",""_links"":{""self"":""http://gitlab.example.com/api/v4/projects/1"",""issues"":""http://gitlab.example.com/api/v4/projects/1/issues"",""merge_requests"":""http://gitlab.example.com/api/v4/projects/1/merge_requests"",""repo_branches"":""http://gitlab.example.com/api/v4/projects/1/repository/branches"",""labels"":""http://gitlab.example.com/api/v4/projects/1/labels"",""events"":""http://gitlab.example.com/api/v4/projects/1/events"",""members"":""http://gitlab.example.com/api/v4/projects/1/members"",""cluster_agents"":""http://gitlab.example.com/api/v4/projects/1/cluster_agents""},""packages_enabled"":true,""empty_repo"":false,""archived"":false,""visibility"":""private"",""resolve_outdated_diff_discussions"":false,""container_expiration_policy"":{""cadence"":""1d"",""enabled"":false,""keep_n"":10,""older_than"":""90d"",""name_regex"":"".*"",""name_regex_keep"":null,""next_run_at"":""2024-03-01T12:07:00.736Z""},""issues_enabled"":true,""merge_requests_enabled"":true,""wiki_enabled"":true,""jobs_enabled"":true,""snippets_enabled"":true,""container_registry_enabled"":true,""service_desk_enabled"":false,""service_desk_address"":null,""can_create_merge_request_in"":true,""issues_access_level"":""enabled"",""repository_access_level"":""enabled"",""merge_requests_access_level"":""enabled"",""forking_access_level"":""enabled"",""wiki_access_level"":""enabled"",""builds_access_level"":""enabled"",""snippets_access_level"":""enabled"",""pages_access_level"":""private"",""analytics_access_level"":""enabled"",""container_registry_access_level"":""enabled"",""security_and_compliance_access_level"":""private"",""releases_access_level"":""enabled"",""environments_access_level"":""enabled"",""feature_flags_access_level"":""enabled"",""infrastructure_access_level"":""enabled"",""monitor_access_level"":""enabled"",""model_experiments_access_level"":""enabled"",""emails_disabled"":false,""emails_enabled"":true,""shared_runners_enabled"":true,""lfs_enabled"":true,""creator_id"":1,""import_url"":null,""import_type"":null,""import_status"":""none"",""import_error"":null,""open_issues_count"":0,""description_html"":"""",""updated_at"":""2024-03-10T14:19:34.750Z"",""ci_default_git_depth"":20,""ci_forward_deployment_enabled"":true,""ci_forward_deployment_rollback_allowed"":true,""ci_job_token_scope_enabled"":false,""ci_separated_caches"":true,""ci_allow_fork_pipelines_to_run_in_parent_project"":true,""build_git_strategy"":""fetch"",""keep_latest_artifact"":true,""restrict_user_defined_variables"":false,""runners_token"":""GR13489417rNYoRAs8xBMqnVRfbNg"",""runner_token_expiration_interval"":null,""group_runners_enabled"":true,""auto_cancel_pending_pipelines"":""enabled"",""build_timeout"":3600,""auto_devops_enabled"":true,""auto_devops_deploy_strategy"":""continuous"",""ci_config_path"":null,""public_jobs"":true,""shared_with_groups"":[],""only_allow_merge_if_pipeline_succeeds"":false,""allow_merge_on_skipped_pipeline"":true,""request_access_enabled"":true,""only_allow_merge_if_all_discussions_are_resolved"":false,""remove_source_branch_after_merge"":true,""printing_merge_request_link_enabled"":true,""merge_method"":""merge"",""squash_option"":""default_off"",""enforce_auth_checks_on_uploads"":true,""suggestion_commit_message"":null,""merge_commit_template"":null,""squash_commit_template"":null,""issue_branch_template"":null,""autoclose_referenced_issues"":true,""permissions"":{""project_access"":{""access_level"":50,""notification_level"":3},""group_access"":{""access_level"":50,""notification_level"":3}}}",unknown,"def verify_latest_response(latest_response, request_info):
    try:
        # Extract the 'path' from the response
        response_path = latest_response.get('path')
        
        # Check if 'path' exists in the response
        if response_path is None:
            return 0
        
        # Extract the 'path' from the request info
        request_path = request_info.get('path')
        
        # If 'path' is provided in the request, it should match the response 'path'
        if request_path:
            if response_path == request_path:
                return 1
            else:
                return -1
        else:
            # If 'path' is not provided, it should be generated as lowercase with dashes
            generated_path = request_info.get('name', '').lower().replace(' ', '-')
            if response_path == generated_path:
                return 1
            else:
                return -1
    except Exception as e:
        return -1
",diaspora-client,1,True,False,False,0,1,format
28,BasicProjectDetails,remove_source_branch_after_merge,,post-/projects,parameters,remove_source_branch_after_merge,Enable Delete source branch option by default for all new merge requests,c,False,TP,"{
  ""repository_storage"": ""default"",
  ""visibility"": ""private"",
  ""issues_enabled"": true,
  ""merge_requests_enabled"": true,
  ""allow_merge_on_skipped_pipeline"": true,
  ""auto_devops_deploy_strategy"": ""continuous"",
  ""auto_devops_enabled"": true,
  ""autoclose_referenced_issues"": true,
  ""container_registry_enabled"": true,
  ""default_branch"": ""main"",
  ""description"": null,
  ""jobs_enabled"": true,
  ""merge_method"": ""merge"",
  ""name"": ""test_project_1"",
  ""only_allow_merge_if_all_discussions_are_resolved"": false,
  ""only_allow_merge_if_pipeline_succeeds"": false,
  ""packages_enabled"": true,
  ""path"": ""test_project_1"",
  ""remove_source_branch_after_merge"": true,
  ""request_access_enabled"": true,
  ""resolve_outdated_diff_discussions"": false,
  ""shared_runners_enabled"": true,
  ""snippets_enabled"": true,
  ""tag_list"": [],
  ""wiki_enabled"": true
}","{""id"":1,""description"":null,""name"":""test_project_1"",""name_with_namespace"":""test / test_project_1"",""path"":""test_project_1"",""path_with_namespace"":""test/test_project_1"",""created_at"":""2024-02-29T12:07:00.562Z"",""default_branch"":""main"",""tag_list"":[],""topics"":[],""ssh_url_to_repo"":""git@gitlab.example.com:test/test_project_1.git"",""http_url_to_repo"":""http://gitlab.example.com/test/test_project_1.git"",""web_url"":""http://gitlab.example.com/test/test_project_1"",""readme_url"":null,""forks_count"":0,""avatar_url"":null,""star_count"":0,""last_activity_at"":""2024-03-10T10:00:40.330Z"",""namespace"":{""id"":8,""name"":""test"",""path"":""test"",""kind"":""group"",""full_path"":""test"",""parent_id"":null,""avatar_url"":null,""web_url"":""http://gitlab.example.com/groups/test""},""repository_storage"":""default"",""_links"":{""self"":""http://gitlab.example.com/api/v4/projects/1"",""issues"":""http://gitlab.example.com/api/v4/projects/1/issues"",""merge_requests"":""http://gitlab.example.com/api/v4/projects/1/merge_requests"",""repo_branches"":""http://gitlab.example.com/api/v4/projects/1/repository/branches"",""labels"":""http://gitlab.example.com/api/v4/projects/1/labels"",""events"":""http://gitlab.example.com/api/v4/projects/1/events"",""members"":""http://gitlab.example.com/api/v4/projects/1/members"",""cluster_agents"":""http://gitlab.example.com/api/v4/projects/1/cluster_agents""},""packages_enabled"":true,""empty_repo"":false,""archived"":false,""visibility"":""private"",""resolve_outdated_diff_discussions"":false,""container_expiration_policy"":{""cadence"":""1d"",""enabled"":false,""keep_n"":10,""older_than"":""90d"",""name_regex"":"".*"",""name_regex_keep"":null,""next_run_at"":""2024-03-01T12:07:00.736Z""},""issues_enabled"":true,""merge_requests_enabled"":true,""wiki_enabled"":true,""jobs_enabled"":true,""snippets_enabled"":true,""container_registry_enabled"":true,""service_desk_enabled"":false,""service_desk_address"":null,""can_create_merge_request_in"":true,""issues_access_level"":""enabled"",""repository_access_level"":""enabled"",""merge_requests_access_level"":""enabled"",""forking_access_level"":""enabled"",""wiki_access_level"":""enabled"",""builds_access_level"":""enabled"",""snippets_access_level"":""enabled"",""pages_access_level"":""private"",""analytics_access_level"":""enabled"",""container_registry_access_level"":""enabled"",""security_and_compliance_access_level"":""private"",""releases_access_level"":""enabled"",""environments_access_level"":""enabled"",""feature_flags_access_level"":""enabled"",""infrastructure_access_level"":""enabled"",""monitor_access_level"":""enabled"",""model_experiments_access_level"":""enabled"",""emails_disabled"":false,""emails_enabled"":true,""shared_runners_enabled"":true,""lfs_enabled"":true,""creator_id"":1,""import_url"":null,""import_type"":null,""import_status"":""none"",""import_error"":null,""open_issues_count"":0,""description_html"":"""",""updated_at"":""2024-03-10T14:19:34.750Z"",""ci_default_git_depth"":20,""ci_forward_deployment_enabled"":true,""ci_forward_deployment_rollback_allowed"":true,""ci_job_token_scope_enabled"":false,""ci_separated_caches"":true,""ci_allow_fork_pipelines_to_run_in_parent_project"":true,""build_git_strategy"":""fetch"",""keep_latest_artifact"":true,""restrict_user_defined_variables"":false,""runners_token"":""GR13489417rNYoRAs8xBMqnVRfbNg"",""runner_token_expiration_interval"":null,""group_runners_enabled"":true,""auto_cancel_pending_pipelines"":""enabled"",""build_timeout"":3600,""auto_devops_enabled"":true,""auto_devops_deploy_strategy"":""continuous"",""ci_config_path"":null,""public_jobs"":true,""shared_with_groups"":[],""only_allow_merge_if_pipeline_succeeds"":false,""allow_merge_on_skipped_pipeline"":true,""request_access_enabled"":true,""only_allow_merge_if_all_discussions_are_resolved"":false,""remove_source_branch_after_merge"":true,""printing_merge_request_link_enabled"":true,""merge_method"":""merge"",""squash_option"":""default_off"",""enforce_auth_checks_on_uploads"":true,""suggestion_commit_message"":null,""merge_commit_template"":null,""squash_commit_template"":null,""issue_branch_template"":null,""autoclose_referenced_issues"":true,""permissions"":{""project_access"":{""access_level"":50,""notification_level"":3},""group_access"":{""access_level"":50,""notification_level"":3}}}",satisfied,"def verify_latest_response(latest_response, request_info):
    try:
        # Check if the attribute exists in the response
        if 'remove_source_branch_after_merge' not in latest_response:
            return 0
        
        # Check if the attribute is of type boolean
        if isinstance(latest_response['remove_source_branch_after_merge'], bool):
            return 1
        else:
            return -1
    except Exception as e:
        return -1
",False,1,True,False,False,0,1,"range of values, logic"
29,BasicProjectDetails,request_access_enabled,,post-/projects,parameters,request_access_enabled,Allow users to request member access,c,False,TP,"{
  ""repository_storage"": ""default"",
  ""visibility"": ""private"",
  ""issues_enabled"": true,
  ""merge_requests_enabled"": true,
  ""allow_merge_on_skipped_pipeline"": true,
  ""auto_devops_deploy_strategy"": ""continuous"",
  ""auto_devops_enabled"": true,
  ""autoclose_referenced_issues"": true,
  ""container_registry_enabled"": true,
  ""default_branch"": ""main"",
  ""description"": null,
  ""jobs_enabled"": true,
  ""merge_method"": ""merge"",
  ""name"": ""test_project_1"",
  ""only_allow_merge_if_all_discussions_are_resolved"": false,
  ""only_allow_merge_if_pipeline_succeeds"": false,
  ""packages_enabled"": true,
  ""path"": ""test_project_1"",
  ""remove_source_branch_after_merge"": true,
  ""request_access_enabled"": true,
  ""resolve_outdated_diff_discussions"": false,
  ""shared_runners_enabled"": true,
  ""snippets_enabled"": true,
  ""tag_list"": [],
  ""wiki_enabled"": true
}","{""id"":1,""description"":null,""name"":""test_project_1"",""name_with_namespace"":""test / test_project_1"",""path"":""test_project_1"",""path_with_namespace"":""test/test_project_1"",""created_at"":""2024-02-29T12:07:00.562Z"",""default_branch"":""main"",""tag_list"":[],""topics"":[],""ssh_url_to_repo"":""git@gitlab.example.com:test/test_project_1.git"",""http_url_to_repo"":""http://gitlab.example.com/test/test_project_1.git"",""web_url"":""http://gitlab.example.com/test/test_project_1"",""readme_url"":null,""forks_count"":0,""avatar_url"":null,""star_count"":0,""last_activity_at"":""2024-03-10T10:00:40.330Z"",""namespace"":{""id"":8,""name"":""test"",""path"":""test"",""kind"":""group"",""full_path"":""test"",""parent_id"":null,""avatar_url"":null,""web_url"":""http://gitlab.example.com/groups/test""},""repository_storage"":""default"",""_links"":{""self"":""http://gitlab.example.com/api/v4/projects/1"",""issues"":""http://gitlab.example.com/api/v4/projects/1/issues"",""merge_requests"":""http://gitlab.example.com/api/v4/projects/1/merge_requests"",""repo_branches"":""http://gitlab.example.com/api/v4/projects/1/repository/branches"",""labels"":""http://gitlab.example.com/api/v4/projects/1/labels"",""events"":""http://gitlab.example.com/api/v4/projects/1/events"",""members"":""http://gitlab.example.com/api/v4/projects/1/members"",""cluster_agents"":""http://gitlab.example.com/api/v4/projects/1/cluster_agents""},""packages_enabled"":true,""empty_repo"":false,""archived"":false,""visibility"":""private"",""resolve_outdated_diff_discussions"":false,""container_expiration_policy"":{""cadence"":""1d"",""enabled"":false,""keep_n"":10,""older_than"":""90d"",""name_regex"":"".*"",""name_regex_keep"":null,""next_run_at"":""2024-03-01T12:07:00.736Z""},""issues_enabled"":true,""merge_requests_enabled"":true,""wiki_enabled"":true,""jobs_enabled"":true,""snippets_enabled"":true,""container_registry_enabled"":true,""service_desk_enabled"":false,""service_desk_address"":null,""can_create_merge_request_in"":true,""issues_access_level"":""enabled"",""repository_access_level"":""enabled"",""merge_requests_access_level"":""enabled"",""forking_access_level"":""enabled"",""wiki_access_level"":""enabled"",""builds_access_level"":""enabled"",""snippets_access_level"":""enabled"",""pages_access_level"":""private"",""analytics_access_level"":""enabled"",""container_registry_access_level"":""enabled"",""security_and_compliance_access_level"":""private"",""releases_access_level"":""enabled"",""environments_access_level"":""enabled"",""feature_flags_access_level"":""enabled"",""infrastructure_access_level"":""enabled"",""monitor_access_level"":""enabled"",""model_experiments_access_level"":""enabled"",""emails_disabled"":false,""emails_enabled"":true,""shared_runners_enabled"":true,""lfs_enabled"":true,""creator_id"":1,""import_url"":null,""import_type"":null,""import_status"":""none"",""import_error"":null,""open_issues_count"":0,""description_html"":"""",""updated_at"":""2024-03-10T14:19:34.750Z"",""ci_default_git_depth"":20,""ci_forward_deployment_enabled"":true,""ci_forward_deployment_rollback_allowed"":true,""ci_job_token_scope_enabled"":false,""ci_separated_caches"":true,""ci_allow_fork_pipelines_to_run_in_parent_project"":true,""build_git_strategy"":""fetch"",""keep_latest_artifact"":true,""restrict_user_defined_variables"":false,""runners_token"":""GR13489417rNYoRAs8xBMqnVRfbNg"",""runner_token_expiration_interval"":null,""group_runners_enabled"":true,""auto_cancel_pending_pipelines"":""enabled"",""build_timeout"":3600,""auto_devops_enabled"":true,""auto_devops_deploy_strategy"":""continuous"",""ci_config_path"":null,""public_jobs"":true,""shared_with_groups"":[],""only_allow_merge_if_pipeline_succeeds"":false,""allow_merge_on_skipped_pipeline"":true,""request_access_enabled"":true,""only_allow_merge_if_all_discussions_are_resolved"":false,""remove_source_branch_after_merge"":true,""printing_merge_request_link_enabled"":true,""merge_method"":""merge"",""squash_option"":""default_off"",""enforce_auth_checks_on_uploads"":true,""suggestion_commit_message"":null,""merge_commit_template"":null,""squash_commit_template"":null,""issue_branch_template"":null,""autoclose_referenced_issues"":true,""permissions"":{""project_access"":{""access_level"":50,""notification_level"":3},""group_access"":{""access_level"":50,""notification_level"":3}}}",satisfied,"def verify_latest_response(latest_response, request_info):
    try:
        # Check if 'request_access_enabled' exists in request_info and is a boolean
        if 'request_access_enabled' in request_info:
            if not isinstance(request_info['request_access_enabled'], bool):
                return -1  # Request info has the key but not boolean type

        # Check if 'request_access_enabled' exists in latest_response and is a boolean
        if 'request_access_enabled' in latest_response:
            if not isinstance(latest_response['request_access_enabled'], bool):
                return -1  # Response has the key but not boolean type
        else:
            return 0  # Key does not exist in the response

        # If both exist and are booleans, check if they match
        if 'request_access_enabled' in request_info and 'request_access_enabled' in latest_response:
            if request_info['request_access_enabled'] == latest_response['request_access_enabled']:
                return 1  # Both values match
            else:
                return -1  # Both values do not match

        return 1  # All checks passed, and constraints are satisfied
    except Exception as e:
        return -1  # Any exception implies a failure in constraint satisfaction
",False,1,True,False,False,0,1,logic
30,BasicProjectDetails,resolve_outdated_diff_discussions,,post-/projects,parameters,resolve_outdated_diff_discussions,Automatically resolve merge request diffs discussions on lines changed with a push,c,False,TP,"{
  ""repository_storage"": ""default"",
  ""visibility"": ""private"",
  ""issues_enabled"": true,
  ""merge_requests_enabled"": true,
  ""allow_merge_on_skipped_pipeline"": true,
  ""auto_devops_deploy_strategy"": ""continuous"",
  ""auto_devops_enabled"": true,
  ""autoclose_referenced_issues"": true,
  ""container_registry_enabled"": true,
  ""default_branch"": ""main"",
  ""description"": null,
  ""jobs_enabled"": true,
  ""merge_method"": ""merge"",
  ""name"": ""test_project_1"",
  ""only_allow_merge_if_all_discussions_are_resolved"": false,
  ""only_allow_merge_if_pipeline_succeeds"": false,
  ""packages_enabled"": true,
  ""path"": ""test_project_1"",
  ""remove_source_branch_after_merge"": true,
  ""request_access_enabled"": true,
  ""resolve_outdated_diff_discussions"": false,
  ""shared_runners_enabled"": true,
  ""snippets_enabled"": true,
  ""tag_list"": [],
  ""wiki_enabled"": true
}","{""id"":1,""description"":null,""name"":""test_project_1"",""name_with_namespace"":""test / test_project_1"",""path"":""test_project_1"",""path_with_namespace"":""test/test_project_1"",""created_at"":""2024-02-29T12:07:00.562Z"",""default_branch"":""main"",""tag_list"":[],""topics"":[],""ssh_url_to_repo"":""git@gitlab.example.com:test/test_project_1.git"",""http_url_to_repo"":""http://gitlab.example.com/test/test_project_1.git"",""web_url"":""http://gitlab.example.com/test/test_project_1"",""readme_url"":null,""forks_count"":0,""avatar_url"":null,""star_count"":0,""last_activity_at"":""2024-03-10T10:00:40.330Z"",""namespace"":{""id"":8,""name"":""test"",""path"":""test"",""kind"":""group"",""full_path"":""test"",""parent_id"":null,""avatar_url"":null,""web_url"":""http://gitlab.example.com/groups/test""},""repository_storage"":""default"",""_links"":{""self"":""http://gitlab.example.com/api/v4/projects/1"",""issues"":""http://gitlab.example.com/api/v4/projects/1/issues"",""merge_requests"":""http://gitlab.example.com/api/v4/projects/1/merge_requests"",""repo_branches"":""http://gitlab.example.com/api/v4/projects/1/repository/branches"",""labels"":""http://gitlab.example.com/api/v4/projects/1/labels"",""events"":""http://gitlab.example.com/api/v4/projects/1/events"",""members"":""http://gitlab.example.com/api/v4/projects/1/members"",""cluster_agents"":""http://gitlab.example.com/api/v4/projects/1/cluster_agents""},""packages_enabled"":true,""empty_repo"":false,""archived"":false,""visibility"":""private"",""resolve_outdated_diff_discussions"":false,""container_expiration_policy"":{""cadence"":""1d"",""enabled"":false,""keep_n"":10,""older_than"":""90d"",""name_regex"":"".*"",""name_regex_keep"":null,""next_run_at"":""2024-03-01T12:07:00.736Z""},""issues_enabled"":true,""merge_requests_enabled"":true,""wiki_enabled"":true,""jobs_enabled"":true,""snippets_enabled"":true,""container_registry_enabled"":true,""service_desk_enabled"":false,""service_desk_address"":null,""can_create_merge_request_in"":true,""issues_access_level"":""enabled"",""repository_access_level"":""enabled"",""merge_requests_access_level"":""enabled"",""forking_access_level"":""enabled"",""wiki_access_level"":""enabled"",""builds_access_level"":""enabled"",""snippets_access_level"":""enabled"",""pages_access_level"":""private"",""analytics_access_level"":""enabled"",""container_registry_access_level"":""enabled"",""security_and_compliance_access_level"":""private"",""releases_access_level"":""enabled"",""environments_access_level"":""enabled"",""feature_flags_access_level"":""enabled"",""infrastructure_access_level"":""enabled"",""monitor_access_level"":""enabled"",""model_experiments_access_level"":""enabled"",""emails_disabled"":false,""emails_enabled"":true,""shared_runners_enabled"":true,""lfs_enabled"":true,""creator_id"":1,""import_url"":null,""import_type"":null,""import_status"":""none"",""import_error"":null,""open_issues_count"":0,""description_html"":"""",""updated_at"":""2024-03-10T14:19:34.750Z"",""ci_default_git_depth"":20,""ci_forward_deployment_enabled"":true,""ci_forward_deployment_rollback_allowed"":true,""ci_job_token_scope_enabled"":false,""ci_separated_caches"":true,""ci_allow_fork_pipelines_to_run_in_parent_project"":true,""build_git_strategy"":""fetch"",""keep_latest_artifact"":true,""restrict_user_defined_variables"":false,""runners_token"":""GR13489417rNYoRAs8xBMqnVRfbNg"",""runner_token_expiration_interval"":null,""group_runners_enabled"":true,""auto_cancel_pending_pipelines"":""enabled"",""build_timeout"":3600,""auto_devops_enabled"":true,""auto_devops_deploy_strategy"":""continuous"",""ci_config_path"":null,""public_jobs"":true,""shared_with_groups"":[],""only_allow_merge_if_pipeline_succeeds"":false,""allow_merge_on_skipped_pipeline"":true,""request_access_enabled"":true,""only_allow_merge_if_all_discussions_are_resolved"":false,""remove_source_branch_after_merge"":true,""printing_merge_request_link_enabled"":true,""merge_method"":""merge"",""squash_option"":""default_off"",""enforce_auth_checks_on_uploads"":true,""suggestion_commit_message"":null,""merge_commit_template"":null,""squash_commit_template"":null,""issue_branch_template"":null,""autoclose_referenced_issues"":true,""permissions"":{""project_access"":{""access_level"":50,""notification_level"":3},""group_access"":{""access_level"":50,""notification_level"":3}}}",satisfied,"def verify_latest_response(latest_response, request_info):
    try:
        # Check if the 'resolve_outdated_diff_discussions' attribute exists in the response
        if 'resolve_outdated_diff_discussions' not in latest_response:
            return 0
        
        # Extract the value of 'resolve_outdated_diff_discussions' from the response
        response_value = latest_response['resolve_outdated_diff_discussions']
        
        # Ensure the value is of type boolean
        if isinstance(response_value, bool):
            return 1
        else:
            return -1
    except Exception as e:
        return -1
",False,1,True,False,False,0,1,logic
31,BasicProjectDetails,shared_runners_enabled,,post-/projects,parameters,shared_runners_enabled,Enable shared runners for this project,c,False,TP,"{
  ""repository_storage"": ""default"",
  ""visibility"": ""private"",
  ""issues_enabled"": true,
  ""merge_requests_enabled"": true,
  ""allow_merge_on_skipped_pipeline"": true,
  ""auto_devops_deploy_strategy"": ""continuous"",
  ""auto_devops_enabled"": true,
  ""autoclose_referenced_issues"": true,
  ""container_registry_enabled"": true,
  ""default_branch"": ""main"",
  ""description"": null,
  ""jobs_enabled"": true,
  ""merge_method"": ""merge"",
  ""name"": ""test_project_1"",
  ""only_allow_merge_if_all_discussions_are_resolved"": false,
  ""only_allow_merge_if_pipeline_succeeds"": false,
  ""packages_enabled"": true,
  ""path"": ""test_project_1"",
  ""remove_source_branch_after_merge"": true,
  ""request_access_enabled"": true,
  ""resolve_outdated_diff_discussions"": false,
  ""shared_runners_enabled"": true,
  ""snippets_enabled"": true,
  ""tag_list"": [],
  ""wiki_enabled"": true
}","{""id"":1,""description"":null,""name"":""test_project_1"",""name_with_namespace"":""test / test_project_1"",""path"":""test_project_1"",""path_with_namespace"":""test/test_project_1"",""created_at"":""2024-02-29T12:07:00.562Z"",""default_branch"":""main"",""tag_list"":[],""topics"":[],""ssh_url_to_repo"":""git@gitlab.example.com:test/test_project_1.git"",""http_url_to_repo"":""http://gitlab.example.com/test/test_project_1.git"",""web_url"":""http://gitlab.example.com/test/test_project_1"",""readme_url"":null,""forks_count"":0,""avatar_url"":null,""star_count"":0,""last_activity_at"":""2024-03-10T10:00:40.330Z"",""namespace"":{""id"":8,""name"":""test"",""path"":""test"",""kind"":""group"",""full_path"":""test"",""parent_id"":null,""avatar_url"":null,""web_url"":""http://gitlab.example.com/groups/test""},""repository_storage"":""default"",""_links"":{""self"":""http://gitlab.example.com/api/v4/projects/1"",""issues"":""http://gitlab.example.com/api/v4/projects/1/issues"",""merge_requests"":""http://gitlab.example.com/api/v4/projects/1/merge_requests"",""repo_branches"":""http://gitlab.example.com/api/v4/projects/1/repository/branches"",""labels"":""http://gitlab.example.com/api/v4/projects/1/labels"",""events"":""http://gitlab.example.com/api/v4/projects/1/events"",""members"":""http://gitlab.example.com/api/v4/projects/1/members"",""cluster_agents"":""http://gitlab.example.com/api/v4/projects/1/cluster_agents""},""packages_enabled"":true,""empty_repo"":false,""archived"":false,""visibility"":""private"",""resolve_outdated_diff_discussions"":false,""container_expiration_policy"":{""cadence"":""1d"",""enabled"":false,""keep_n"":10,""older_than"":""90d"",""name_regex"":"".*"",""name_regex_keep"":null,""next_run_at"":""2024-03-01T12:07:00.736Z""},""issues_enabled"":true,""merge_requests_enabled"":true,""wiki_enabled"":true,""jobs_enabled"":true,""snippets_enabled"":true,""container_registry_enabled"":true,""service_desk_enabled"":false,""service_desk_address"":null,""can_create_merge_request_in"":true,""issues_access_level"":""enabled"",""repository_access_level"":""enabled"",""merge_requests_access_level"":""enabled"",""forking_access_level"":""enabled"",""wiki_access_level"":""enabled"",""builds_access_level"":""enabled"",""snippets_access_level"":""enabled"",""pages_access_level"":""private"",""analytics_access_level"":""enabled"",""container_registry_access_level"":""enabled"",""security_and_compliance_access_level"":""private"",""releases_access_level"":""enabled"",""environments_access_level"":""enabled"",""feature_flags_access_level"":""enabled"",""infrastructure_access_level"":""enabled"",""monitor_access_level"":""enabled"",""model_experiments_access_level"":""enabled"",""emails_disabled"":false,""emails_enabled"":true,""shared_runners_enabled"":true,""lfs_enabled"":true,""creator_id"":1,""import_url"":null,""import_type"":null,""import_status"":""none"",""import_error"":null,""open_issues_count"":0,""description_html"":"""",""updated_at"":""2024-03-10T14:19:34.750Z"",""ci_default_git_depth"":20,""ci_forward_deployment_enabled"":true,""ci_forward_deployment_rollback_allowed"":true,""ci_job_token_scope_enabled"":false,""ci_separated_caches"":true,""ci_allow_fork_pipelines_to_run_in_parent_project"":true,""build_git_strategy"":""fetch"",""keep_latest_artifact"":true,""restrict_user_defined_variables"":false,""runners_token"":""GR13489417rNYoRAs8xBMqnVRfbNg"",""runner_token_expiration_interval"":null,""group_runners_enabled"":true,""auto_cancel_pending_pipelines"":""enabled"",""build_timeout"":3600,""auto_devops_enabled"":true,""auto_devops_deploy_strategy"":""continuous"",""ci_config_path"":null,""public_jobs"":true,""shared_with_groups"":[],""only_allow_merge_if_pipeline_succeeds"":false,""allow_merge_on_skipped_pipeline"":true,""request_access_enabled"":true,""only_allow_merge_if_all_discussions_are_resolved"":false,""remove_source_branch_after_merge"":true,""printing_merge_request_link_enabled"":true,""merge_method"":""merge"",""squash_option"":""default_off"",""enforce_auth_checks_on_uploads"":true,""suggestion_commit_message"":null,""merge_commit_template"":null,""squash_commit_template"":null,""issue_branch_template"":null,""autoclose_referenced_issues"":true,""permissions"":{""project_access"":{""access_level"":50,""notification_level"":3},""group_access"":{""access_level"":50,""notification_level"":3}}}",satisfied,"def verify_latest_response(latest_response, request_info):
    try:
        # Check if 'shared_runners_enabled' is in the response
        if 'shared_runners_enabled' not in latest_response:
            return 0  # Insufficient information to verify the constraint
        
        # Extract the value of 'shared_runners_enabled' from the response
        shared_runners_enabled_response = latest_response['shared_runners_enabled']
        
        # Check if the value is a boolean
        if not isinstance(shared_runners_enabled_response, bool):
            return -1  # Constraint not satisfied
        
        # Extract the value of 'shared_runners_enabled' from the request info
        shared_runners_enabled_request = request_info.get('shared_runners_enabled')
        
        # Check if the request parameter is provided and is a boolean
        if shared_runners_enabled_request is not None:
            if not isinstance(shared_runners_enabled_request, bool):
                return -1  # Constraint not satisfied
            
            # Verify if the request and response values match
            if shared_runners_enabled_response != shared_runners_enabled_request:
                return -1  # Constraint not satisfied
        
        return 1  # Constraint satisfied
    except Exception as e:
        return -1  # Constraint not satisfied due to an error
",True,1,True,False,False,0,1,"range of values, logic"
32,BasicProjectDetails,snippets_enabled,,post-/projects,parameters,snippets_enabled,(Deprecated)Enable snippets for this project. Use snippets_access_level instead,c,False,TP,"{
  ""repository_storage"": ""default"",
  ""visibility"": ""private"",
  ""issues_enabled"": true,
  ""merge_requests_enabled"": true,
  ""allow_merge_on_skipped_pipeline"": true,
  ""auto_devops_deploy_strategy"": ""continuous"",
  ""auto_devops_enabled"": true,
  ""autoclose_referenced_issues"": true,
  ""container_registry_enabled"": true,
  ""default_branch"": ""main"",
  ""description"": null,
  ""jobs_enabled"": true,
  ""merge_method"": ""merge"",
  ""name"": ""test_project_1"",
  ""only_allow_merge_if_all_discussions_are_resolved"": false,
  ""only_allow_merge_if_pipeline_succeeds"": false,
  ""packages_enabled"": true,
  ""path"": ""test_project_1"",
  ""remove_source_branch_after_merge"": true,
  ""request_access_enabled"": true,
  ""resolve_outdated_diff_discussions"": false,
  ""shared_runners_enabled"": true,
  ""snippets_enabled"": true,
  ""tag_list"": [],
  ""wiki_enabled"": true
}","{""id"":1,""description"":null,""name"":""test_project_1"",""name_with_namespace"":""test / test_project_1"",""path"":""test_project_1"",""path_with_namespace"":""test/test_project_1"",""created_at"":""2024-02-29T12:07:00.562Z"",""default_branch"":""main"",""tag_list"":[],""topics"":[],""ssh_url_to_repo"":""git@gitlab.example.com:test/test_project_1.git"",""http_url_to_repo"":""http://gitlab.example.com/test/test_project_1.git"",""web_url"":""http://gitlab.example.com/test/test_project_1"",""readme_url"":null,""forks_count"":0,""avatar_url"":null,""star_count"":0,""last_activity_at"":""2024-03-10T10:00:40.330Z"",""namespace"":{""id"":8,""name"":""test"",""path"":""test"",""kind"":""group"",""full_path"":""test"",""parent_id"":null,""avatar_url"":null,""web_url"":""http://gitlab.example.com/groups/test""},""repository_storage"":""default"",""_links"":{""self"":""http://gitlab.example.com/api/v4/projects/1"",""issues"":""http://gitlab.example.com/api/v4/projects/1/issues"",""merge_requests"":""http://gitlab.example.com/api/v4/projects/1/merge_requests"",""repo_branches"":""http://gitlab.example.com/api/v4/projects/1/repository/branches"",""labels"":""http://gitlab.example.com/api/v4/projects/1/labels"",""events"":""http://gitlab.example.com/api/v4/projects/1/events"",""members"":""http://gitlab.example.com/api/v4/projects/1/members"",""cluster_agents"":""http://gitlab.example.com/api/v4/projects/1/cluster_agents""},""packages_enabled"":true,""empty_repo"":false,""archived"":false,""visibility"":""private"",""resolve_outdated_diff_discussions"":false,""container_expiration_policy"":{""cadence"":""1d"",""enabled"":false,""keep_n"":10,""older_than"":""90d"",""name_regex"":"".*"",""name_regex_keep"":null,""next_run_at"":""2024-03-01T12:07:00.736Z""},""issues_enabled"":true,""merge_requests_enabled"":true,""wiki_enabled"":true,""jobs_enabled"":true,""snippets_enabled"":true,""container_registry_enabled"":true,""service_desk_enabled"":false,""service_desk_address"":null,""can_create_merge_request_in"":true,""issues_access_level"":""enabled"",""repository_access_level"":""enabled"",""merge_requests_access_level"":""enabled"",""forking_access_level"":""enabled"",""wiki_access_level"":""enabled"",""builds_access_level"":""enabled"",""snippets_access_level"":""enabled"",""pages_access_level"":""private"",""analytics_access_level"":""enabled"",""container_registry_access_level"":""enabled"",""security_and_compliance_access_level"":""private"",""releases_access_level"":""enabled"",""environments_access_level"":""enabled"",""feature_flags_access_level"":""enabled"",""infrastructure_access_level"":""enabled"",""monitor_access_level"":""enabled"",""model_experiments_access_level"":""enabled"",""emails_disabled"":false,""emails_enabled"":true,""shared_runners_enabled"":true,""lfs_enabled"":true,""creator_id"":1,""import_url"":null,""import_type"":null,""import_status"":""none"",""import_error"":null,""open_issues_count"":0,""description_html"":"""",""updated_at"":""2024-03-10T14:19:34.750Z"",""ci_default_git_depth"":20,""ci_forward_deployment_enabled"":true,""ci_forward_deployment_rollback_allowed"":true,""ci_job_token_scope_enabled"":false,""ci_separated_caches"":true,""ci_allow_fork_pipelines_to_run_in_parent_project"":true,""build_git_strategy"":""fetch"",""keep_latest_artifact"":true,""restrict_user_defined_variables"":false,""runners_token"":""GR13489417rNYoRAs8xBMqnVRfbNg"",""runner_token_expiration_interval"":null,""group_runners_enabled"":true,""auto_cancel_pending_pipelines"":""enabled"",""build_timeout"":3600,""auto_devops_enabled"":true,""auto_devops_deploy_strategy"":""continuous"",""ci_config_path"":null,""public_jobs"":true,""shared_with_groups"":[],""only_allow_merge_if_pipeline_succeeds"":false,""allow_merge_on_skipped_pipeline"":true,""request_access_enabled"":true,""only_allow_merge_if_all_discussions_are_resolved"":false,""remove_source_branch_after_merge"":true,""printing_merge_request_link_enabled"":true,""merge_method"":""merge"",""squash_option"":""default_off"",""enforce_auth_checks_on_uploads"":true,""suggestion_commit_message"":null,""merge_commit_template"":null,""squash_commit_template"":null,""issue_branch_template"":null,""autoclose_referenced_issues"":true,""permissions"":{""project_access"":{""access_level"":50,""notification_level"":3},""group_access"":{""access_level"":50,""notification_level"":3}}}",satisfied,"def verify_latest_response(latest_response, request_info):
    try:
        # Check if 'snippets_enabled' is in the response
        if 'snippets_enabled' not in latest_response:
            return 0
        
        # Ensure 'snippets_enabled' is a boolean
        if not isinstance(latest_response['snippets_enabled'], bool):
            return -1
        
        # If 'snippets_enabled' is present and is a boolean, the constraint is satisfied
        return 1
    except Exception as e:
        # In case of any unexpected error, return -1
        return -1
",False,1,True,False,False,0,1,"range of values, logic"
33,BasicProjectDetails,tag_list,,post-/projects,parameters,tag_list,"The list of tags for a project; put array of tags, that should be finally assigned to a project",c,False,TP,"{
  ""repository_storage"": ""default"",
  ""visibility"": ""private"",
  ""issues_enabled"": true,
  ""merge_requests_enabled"": true,
  ""allow_merge_on_skipped_pipeline"": true,
  ""auto_devops_deploy_strategy"": ""continuous"",
  ""auto_devops_enabled"": true,
  ""autoclose_referenced_issues"": true,
  ""container_registry_enabled"": true,
  ""default_branch"": ""main"",
  ""description"": null,
  ""jobs_enabled"": true,
  ""merge_method"": ""merge"",
  ""name"": ""test_project_1"",
  ""only_allow_merge_if_all_discussions_are_resolved"": false,
  ""only_allow_merge_if_pipeline_succeeds"": false,
  ""packages_enabled"": true,
  ""path"": ""test_project_1"",
  ""remove_source_branch_after_merge"": true,
  ""request_access_enabled"": true,
  ""resolve_outdated_diff_discussions"": false,
  ""shared_runners_enabled"": true,
  ""snippets_enabled"": true,
  ""tag_list"": [],
  ""wiki_enabled"": true
}","{""id"":1,""description"":null,""name"":""test_project_1"",""name_with_namespace"":""test / test_project_1"",""path"":""test_project_1"",""path_with_namespace"":""test/test_project_1"",""created_at"":""2024-02-29T12:07:00.562Z"",""default_branch"":""main"",""tag_list"":[],""topics"":[],""ssh_url_to_repo"":""git@gitlab.example.com:test/test_project_1.git"",""http_url_to_repo"":""http://gitlab.example.com/test/test_project_1.git"",""web_url"":""http://gitlab.example.com/test/test_project_1"",""readme_url"":null,""forks_count"":0,""avatar_url"":null,""star_count"":0,""last_activity_at"":""2024-03-10T10:00:40.330Z"",""namespace"":{""id"":8,""name"":""test"",""path"":""test"",""kind"":""group"",""full_path"":""test"",""parent_id"":null,""avatar_url"":null,""web_url"":""http://gitlab.example.com/groups/test""},""repository_storage"":""default"",""_links"":{""self"":""http://gitlab.example.com/api/v4/projects/1"",""issues"":""http://gitlab.example.com/api/v4/projects/1/issues"",""merge_requests"":""http://gitlab.example.com/api/v4/projects/1/merge_requests"",""repo_branches"":""http://gitlab.example.com/api/v4/projects/1/repository/branches"",""labels"":""http://gitlab.example.com/api/v4/projects/1/labels"",""events"":""http://gitlab.example.com/api/v4/projects/1/events"",""members"":""http://gitlab.example.com/api/v4/projects/1/members"",""cluster_agents"":""http://gitlab.example.com/api/v4/projects/1/cluster_agents""},""packages_enabled"":true,""empty_repo"":false,""archived"":false,""visibility"":""private"",""resolve_outdated_diff_discussions"":false,""container_expiration_policy"":{""cadence"":""1d"",""enabled"":false,""keep_n"":10,""older_than"":""90d"",""name_regex"":"".*"",""name_regex_keep"":null,""next_run_at"":""2024-03-01T12:07:00.736Z""},""issues_enabled"":true,""merge_requests_enabled"":true,""wiki_enabled"":true,""jobs_enabled"":true,""snippets_enabled"":true,""container_registry_enabled"":true,""service_desk_enabled"":false,""service_desk_address"":null,""can_create_merge_request_in"":true,""issues_access_level"":""enabled"",""repository_access_level"":""enabled"",""merge_requests_access_level"":""enabled"",""forking_access_level"":""enabled"",""wiki_access_level"":""enabled"",""builds_access_level"":""enabled"",""snippets_access_level"":""enabled"",""pages_access_level"":""private"",""analytics_access_level"":""enabled"",""container_registry_access_level"":""enabled"",""security_and_compliance_access_level"":""private"",""releases_access_level"":""enabled"",""environments_access_level"":""enabled"",""feature_flags_access_level"":""enabled"",""infrastructure_access_level"":""enabled"",""monitor_access_level"":""enabled"",""model_experiments_access_level"":""enabled"",""emails_disabled"":false,""emails_enabled"":true,""shared_runners_enabled"":true,""lfs_enabled"":true,""creator_id"":1,""import_url"":null,""import_type"":null,""import_status"":""none"",""import_error"":null,""open_issues_count"":0,""description_html"":"""",""updated_at"":""2024-03-10T14:19:34.750Z"",""ci_default_git_depth"":20,""ci_forward_deployment_enabled"":true,""ci_forward_deployment_rollback_allowed"":true,""ci_job_token_scope_enabled"":false,""ci_separated_caches"":true,""ci_allow_fork_pipelines_to_run_in_parent_project"":true,""build_git_strategy"":""fetch"",""keep_latest_artifact"":true,""restrict_user_defined_variables"":false,""runners_token"":""GR13489417rNYoRAs8xBMqnVRfbNg"",""runner_token_expiration_interval"":null,""group_runners_enabled"":true,""auto_cancel_pending_pipelines"":""enabled"",""build_timeout"":3600,""auto_devops_enabled"":true,""auto_devops_deploy_strategy"":""continuous"",""ci_config_path"":null,""public_jobs"":true,""shared_with_groups"":[],""only_allow_merge_if_pipeline_succeeds"":false,""allow_merge_on_skipped_pipeline"":true,""request_access_enabled"":true,""only_allow_merge_if_all_discussions_are_resolved"":false,""remove_source_branch_after_merge"":true,""printing_merge_request_link_enabled"":true,""merge_method"":""merge"",""squash_option"":""default_off"",""enforce_auth_checks_on_uploads"":true,""suggestion_commit_message"":null,""merge_commit_template"":null,""squash_commit_template"":null,""issue_branch_template"":null,""autoclose_referenced_issues"":true,""permissions"":{""project_access"":{""access_level"":50,""notification_level"":3},""group_access"":{""access_level"":50,""notification_level"":3}}}",satisfied,"def verify_latest_response(latest_response, request_info):
    try:
        # Extract the tag_list from the response
        response_tag_list = latest_response.get('tag_list', None)
        
        # Check if tag_list exists in the response
        if response_tag_list is None:
            return 0
        
        # Ensure tag_list is an array
        if not isinstance(response_tag_list, list):
            return -1
        
        # Ensure each item in tag_list is a string
        for tag in response_tag_list:
            if not isinstance(tag, string):
                return -1
        
        # Extract the tag_list from the request info
        request_tag_list = request_info.get('tag_list', None)
        
        # Check if tag_list exists in the request info
        if request_tag_list is None:
            return 0
        
        # Ensure the request tag_list is an array
        if not isinstance(request_tag_list, list):
            return -1
        
        # Ensure each item in request tag_list is a string
        for tag in request_tag_list:
            if not isinstance(tag, str):
                return -1
        
        # Compare the request and response tag_list
        if set(response_tag_list) == set(request_tag_list):
            return 1
        else:
            return -1
    except Exception as e:
        return -1
","['example', 'disapora client']",1,True,False,False,0,1,logic
34,BasicProjectDetails,wiki_enabled,,post-/projects,parameters,wiki_enabled,(Deprecated)Enable wiki for this project. Use wiki_access_levelinstead,c,False,TP,"{
  ""repository_storage"": ""default"",
  ""visibility"": ""private"",
  ""issues_enabled"": true,
  ""merge_requests_enabled"": true,
  ""allow_merge_on_skipped_pipeline"": true,
  ""auto_devops_deploy_strategy"": ""continuous"",
  ""auto_devops_enabled"": true,
  ""autoclose_referenced_issues"": true,
  ""container_registry_enabled"": true,
  ""default_branch"": ""main"",
  ""description"": null,
  ""jobs_enabled"": true,
  ""merge_method"": ""merge"",
  ""name"": ""test_project_1"",
  ""only_allow_merge_if_all_discussions_are_resolved"": false,
  ""only_allow_merge_if_pipeline_succeeds"": false,
  ""packages_enabled"": true,
  ""path"": ""test_project_1"",
  ""remove_source_branch_after_merge"": true,
  ""request_access_enabled"": true,
  ""resolve_outdated_diff_discussions"": false,
  ""shared_runners_enabled"": true,
  ""snippets_enabled"": true,
  ""tag_list"": [],
  ""wiki_enabled"": true
}","{""id"":1,""description"":null,""name"":""test_project_1"",""name_with_namespace"":""test / test_project_1"",""path"":""test_project_1"",""path_with_namespace"":""test/test_project_1"",""created_at"":""2024-02-29T12:07:00.562Z"",""default_branch"":""main"",""tag_list"":[],""topics"":[],""ssh_url_to_repo"":""git@gitlab.example.com:test/test_project_1.git"",""http_url_to_repo"":""http://gitlab.example.com/test/test_project_1.git"",""web_url"":""http://gitlab.example.com/test/test_project_1"",""readme_url"":null,""forks_count"":0,""avatar_url"":null,""star_count"":0,""last_activity_at"":""2024-03-10T10:00:40.330Z"",""namespace"":{""id"":8,""name"":""test"",""path"":""test"",""kind"":""group"",""full_path"":""test"",""parent_id"":null,""avatar_url"":null,""web_url"":""http://gitlab.example.com/groups/test""},""repository_storage"":""default"",""_links"":{""self"":""http://gitlab.example.com/api/v4/projects/1"",""issues"":""http://gitlab.example.com/api/v4/projects/1/issues"",""merge_requests"":""http://gitlab.example.com/api/v4/projects/1/merge_requests"",""repo_branches"":""http://gitlab.example.com/api/v4/projects/1/repository/branches"",""labels"":""http://gitlab.example.com/api/v4/projects/1/labels"",""events"":""http://gitlab.example.com/api/v4/projects/1/events"",""members"":""http://gitlab.example.com/api/v4/projects/1/members"",""cluster_agents"":""http://gitlab.example.com/api/v4/projects/1/cluster_agents""},""packages_enabled"":true,""empty_repo"":false,""archived"":false,""visibility"":""private"",""resolve_outdated_diff_discussions"":false,""container_expiration_policy"":{""cadence"":""1d"",""enabled"":false,""keep_n"":10,""older_than"":""90d"",""name_regex"":"".*"",""name_regex_keep"":null,""next_run_at"":""2024-03-01T12:07:00.736Z""},""issues_enabled"":true,""merge_requests_enabled"":true,""wiki_enabled"":true,""jobs_enabled"":true,""snippets_enabled"":true,""container_registry_enabled"":true,""service_desk_enabled"":false,""service_desk_address"":null,""can_create_merge_request_in"":true,""issues_access_level"":""enabled"",""repository_access_level"":""enabled"",""merge_requests_access_level"":""enabled"",""forking_access_level"":""enabled"",""wiki_access_level"":""enabled"",""builds_access_level"":""enabled"",""snippets_access_level"":""enabled"",""pages_access_level"":""private"",""analytics_access_level"":""enabled"",""container_registry_access_level"":""enabled"",""security_and_compliance_access_level"":""private"",""releases_access_level"":""enabled"",""environments_access_level"":""enabled"",""feature_flags_access_level"":""enabled"",""infrastructure_access_level"":""enabled"",""monitor_access_level"":""enabled"",""model_experiments_access_level"":""enabled"",""emails_disabled"":false,""emails_enabled"":true,""shared_runners_enabled"":true,""lfs_enabled"":true,""creator_id"":1,""import_url"":null,""import_type"":null,""import_status"":""none"",""import_error"":null,""open_issues_count"":0,""description_html"":"""",""updated_at"":""2024-03-10T14:19:34.750Z"",""ci_default_git_depth"":20,""ci_forward_deployment_enabled"":true,""ci_forward_deployment_rollback_allowed"":true,""ci_job_token_scope_enabled"":false,""ci_separated_caches"":true,""ci_allow_fork_pipelines_to_run_in_parent_project"":true,""build_git_strategy"":""fetch"",""keep_latest_artifact"":true,""restrict_user_defined_variables"":false,""runners_token"":""GR13489417rNYoRAs8xBMqnVRfbNg"",""runner_token_expiration_interval"":null,""group_runners_enabled"":true,""auto_cancel_pending_pipelines"":""enabled"",""build_timeout"":3600,""auto_devops_enabled"":true,""auto_devops_deploy_strategy"":""continuous"",""ci_config_path"":null,""public_jobs"":true,""shared_with_groups"":[],""only_allow_merge_if_pipeline_succeeds"":false,""allow_merge_on_skipped_pipeline"":true,""request_access_enabled"":true,""only_allow_merge_if_all_discussions_are_resolved"":false,""remove_source_branch_after_merge"":true,""printing_merge_request_link_enabled"":true,""merge_method"":""merge"",""squash_option"":""default_off"",""enforce_auth_checks_on_uploads"":true,""suggestion_commit_message"":null,""merge_commit_template"":null,""squash_commit_template"":null,""issue_branch_template"":null,""autoclose_referenced_issues"":true,""permissions"":{""project_access"":{""access_level"":50,""notification_level"":3},""group_access"":{""access_level"":50,""notification_level"":3}}}",satisfied,"def verify_latest_response(latest_response, request_info):
    try:
        # Check if 'wiki_enabled' is present in the response
        if 'wiki_enabled' not in latest_response:
            return 0
        
        # Ensure 'wiki_enabled' is a boolean
        if not isinstance(latest_response['wiki_enabled'], bool):
            return -1
        
        # Check if the request_info contains 'wiki_enabled' and validate it
        if 'wiki_enabled' in request_info:
            if latest_response['wiki_enabled'] != request_info['wiki_enabled']:
                return -1
        
        return 1
    except Exception as e:
        return -1
",True,1,True,False,False,0,1,"range of values, logic"
