,endpoint,group,invariant,invariantType,variables,pptname,tp_x,description,tp_y
0,get+groups,created_at,"LENGTH(return.created_at)==24
return.created_at is Timestamp. Format: YYYY-MM-DDTHH:MM:SS.mmZ (Miliseconds are optional)","daikon.inv.unary.string.FixedLengthString
daikon.inv.unary.string.dates.IsTimestampYYYYMMHHThhmmssmm","(return.created_at)
(return.created_at)","/groups&/groups&get&200():::EXIT
/groups&/groups&get&200():::EXIT",1.0,"{""type"": ""string"", ""format"": ""date-time""}",1.0
1,get+groups_{id},id,input.id == return.id,daikon.inv.binary.twoScalar.IntEqual,"(input.id, return.id)",/groups/{id}&/groups/{id}&get&200():::EXIT,1.0,Attribute id is responded to by parameter id with a description: The ID orURL-encoded path of the groupowned by the authenticated user,1.0
2,get+groups_{id},projects.created_at,"LENGTH(return.created_at)==24
return.created_at is Timestamp. Format: YYYY-MM-DDTHH:MM:SS.mmZ (Miliseconds are optional)","daikon.inv.unary.string.FixedLengthString
daikon.inv.unary.string.dates.IsTimestampYYYYMMHHThhmmssmm","(return.created_at)
(return.created_at)","/groups/{id}&/groups/{id}&get&200&projects():::EXIT
/groups/{id}&/groups/{id}&get&200&projects():::EXIT",1.0,"{""type"": ""string"", ""format"": ""date-time""}",1.0
3,get+groups_{id},projects.last_activity_at,"LENGTH(return.last_activity_at)==24
return.last_activity_at is Timestamp. Format: YYYY-MM-DDTHH:MM:SS.mmZ (Miliseconds are optional)","daikon.inv.unary.string.FixedLengthString
daikon.inv.unary.string.dates.IsTimestampYYYYMMHHThhmmssmm","(return.last_activity_at)
(return.last_activity_at)","/groups/{id}&/groups/{id}&get&200&projects():::EXIT
/groups/{id}&/groups/{id}&get&200&projects():::EXIT",1.0,"{""type"": ""string"", ""format"": ""date-time""}",1.0
4,get+groups_{id}_descendant_groups,created_at,"LENGTH(return.created_at)==24
return.created_at is Timestamp. Format: YYYY-MM-DDTHH:MM:SS.mmZ (Miliseconds are optional)","daikon.inv.unary.string.FixedLengthString
daikon.inv.unary.string.dates.IsTimestampYYYYMMHHThhmmssmm","(return.created_at)
(return.created_at)","/groups/{id}/descendant_groups&/groups/{id}/descendant_groups&get&200():::EXIT
/groups/{id}/descendant_groups&/groups/{id}/descendant_groups&get&200():::EXIT",1.0,"{""type"": ""string"", ""format"": ""date-time""}",1.0
5,get+groups_{id}_hooks,group_id,input.id == return.group_id,daikon.inv.binary.twoScalar.IntEqual,"(input.id, return.group_id)",/groups/{id}/hooks&/groups/{id}/hooks&get&200():::EXIT,1.0,Attribute group_id is responded to by parameter id with a description: The ID orURL-encoded path of the groupof the immediate parent group,1.0
6,get+groups_{id}_hooks_{hook_id},group_id,input.id == return.group_id,daikon.inv.binary.twoScalar.IntEqual,"(input.id, return.group_id)",/groups/{id}/hooks/{hook_id}&/groups/{id}/hooks/{hook_id}&get&200():::EXIT,1.0,Attribute group_id is responded to by parameter id with a description: The ID orURL-encoded path of the group,1.0
7,get+groups_{id}_hooks_{hook_id},id,input.hook_id == return.id,daikon.inv.binary.twoScalar.IntEqual,"(input.hook_id, return.id)",/groups/{id}/hooks/{hook_id}&/groups/{id}/hooks/{hook_id}&get&200():::EXIT,1.0,Attribute id is responded to by parameter hook_id with a description: The ID of a group hook,1.0
8,get+groups_{id}_projects,archived,input.archived == return.archived,daikon.inv.binary.twoScalar.IntEqual,"(input.archived, return.archived)",/groups/{id}/projects&/groups/{id}/projects&get&200():::EXIT,1.0,Attribute archived is responded to by parameter archived with a description: Limit by archived status,1.0
9,get+groups_{id}_projects,created_at,"LENGTH(return.created_at)==24
return.created_at is Timestamp. Format: YYYY-MM-DDTHH:MM:SS.mmZ (Miliseconds are optional)","daikon.inv.unary.string.FixedLengthString
daikon.inv.unary.string.dates.IsTimestampYYYYMMHHThhmmssmm","(return.created_at)
(return.created_at)","/groups/{id}/projects&/groups/{id}/projects&get&200():::EXIT
/groups/{id}/projects&/groups/{id}/projects&get&200():::EXIT",1.0,"{""type"": ""string"", ""format"": ""date-time""}",1.0
10,get+groups_{id}_projects,last_activity_at,"LENGTH(return.last_activity_at)==24
return.last_activity_at is Timestamp. Format: YYYY-MM-DDTHH:MM:SS.mmZ (Miliseconds are optional)","daikon.inv.unary.string.FixedLengthString
daikon.inv.unary.string.dates.IsTimestampYYYYMMHHThhmmssmm","(return.last_activity_at)
(return.last_activity_at)","/groups/{id}/projects&/groups/{id}/projects&get&200():::EXIT
/groups/{id}/projects&/groups/{id}/projects&get&200():::EXIT",1.0,"{""type"": ""string"", ""format"": ""date-time""}",1.0
11,get+groups_{id}_projects_shared,archived,input.archived == return.archived,daikon.inv.binary.twoScalar.IntEqual,"(input.archived, return.archived)",/groups/{id}/projects/shared&/groups/{id}/projects/shared&get&200():::EXIT,1.0,Attribute archived is responded to by parameter archived with a description: Limit by archived status,1.0
12,get+groups_{id}_projects_shared,container_expiration_policy.next_run_at,"LENGTH(return.container_expiration_policy.next_run_at)==24
return.container_expiration_policy.next_run_at is Timestamp. Format: YYYY-MM-DDTHH:MM:SS.mmZ (Miliseconds are optional)","daikon.inv.unary.string.FixedLengthString
daikon.inv.unary.string.dates.IsTimestampYYYYMMHHThhmmssmm","(return.container_expiration_policy.next_run_at)
(return.container_expiration_policy.next_run_at)","/groups/{id}/projects/shared&/groups/{id}/projects/shared&get&200():::EXIT
/groups/{id}/projects/shared&/groups/{id}/projects/shared&get&200():::EXIT",1.0,"{""type"": ""string"", ""format"": ""date-time""}",1.0
13,get+groups_{id}_projects_shared,visibility,"input.visibility == return.visibility
return.visibility one of { ""private"", ""public"" }","daikon.inv.binary.twoString.StringEqual
daikon.inv.unary.string.OneOfString","(input.visibility, return.visibility)
(return.visibility)","/groups/{id}/projects/shared&/groups/{id}/projects/shared&get&200():::EXIT
/groups/{id}/projects/shared&/groups/{id}/projects/shared&get&200():::EXIT",1.0,"Attribute visibility is responded to by parameter visibility with a description: Limit by visibilitypublic,internal, orprivate",1.0
14,get+groups_{id}_subgroups,created_at,"LENGTH(return.created_at)==24
return.created_at is Timestamp. Format: YYYY-MM-DDTHH:MM:SS.mmZ (Miliseconds are optional)","daikon.inv.unary.string.FixedLengthString
daikon.inv.unary.string.dates.IsTimestampYYYYMMHHThhmmssmm","(return.created_at)
(return.created_at)","/groups/{id}/subgroups&/groups/{id}/subgroups&get&200():::EXIT
/groups/{id}/subgroups&/groups/{id}/subgroups&get&200():::EXIT",1.0,"{""type"": ""string"", ""format"": ""date-time""}",1.0
15,post+groups,created_at,"LENGTH(return.created_at)==24
return.created_at is Timestamp. Format: YYYY-MM-DDTHH:MM:SS.mmZ (Miliseconds are optional)","daikon.inv.unary.string.FixedLengthString
daikon.inv.unary.string.dates.IsTimestampYYYYMMHHThhmmssmm","(return.created_at)
(return.created_at)","/groups&/groups&post&201():::EXIT
/groups&/groups&post&201():::EXIT",1.0,"{""type"": ""string"", ""format"": ""date-time""}",1.0
16,post+groups,default_branch_protection,"return.default_branch_protection one of { 0, 1, 2 }",daikon.inv.unary.scalar.OneOfScalar,(return.default_branch_protection),/groups&/groups&post&201():::EXIT,1.0,Attribute default_branch_protection is responded to by parameter default_branch_protection with a description: SeeOptions fordefault_branch_protection. Default to the global level default branch protection setting,1.0
17,post+groups,description,input.description == return.description,daikon.inv.binary.twoString.StringEqual,"(input.description, return.description)",/groups&/groups&post&201():::EXIT,1.0,Attribute description is responded to by parameter description with a description: The group's description,1.0
18,post+groups,lfs_enabled,input.lfs_enabled == return.lfs_enabled,daikon.inv.binary.twoScalar.IntEqual,"(input.lfs_enabled, return.lfs_enabled)",/groups&/groups&post&201():::EXIT,1.0,Attribute lfs_enabled is responded to by parameter lfs_enabled with a description: Enable/disable Large File Storage (LFS) for the projects in this group,1.0
19,post+groups,name,input.name == return.name,daikon.inv.binary.twoString.StringEqual,"(input.name, return.name)",/groups&/groups&post&201():::EXIT,1.0,Attribute name is responded to by parameter name with a description: The name of the group,1.0
20,post+groups,project_creation_level,"input.project_creation_level == return.project_creation_level
return.project_creation_level one of { ""developer"", ""maintainer"", ""noone"" }","daikon.inv.binary.twoString.StringEqual
daikon.inv.unary.string.OneOfString","(input.project_creation_level, return.project_creation_level)
(return.project_creation_level)","/groups&/groups&post&201():::EXIT
/groups&/groups&post&201():::EXIT",1.0,"Attribute project_creation_level is responded to by parameter project_creation_level with a description: Determine if developers can create projects in the group. Can benoone(No one),maintainer(Maintainers), or developer(Developers + Maintainers)",1.0
21,post+groups,request_access_enabled,input.request_access_enabled == return.request_access_enabled,daikon.inv.binary.twoScalar.IntEqual,"(input.request_access_enabled, return.request_access_enabled)",/groups&/groups&post&201():::EXIT,1.0,Attribute request_access_enabled is responded to by parameter request_access_enabled with a description: Allow users to request member access,1.0
22,post+groups,require_two_factor_authentication,input.require_two_factor_authentication == return.require_two_factor_authentication,daikon.inv.binary.twoScalar.IntEqual,"(input.require_two_factor_authentication, return.require_two_factor_authentication)",/groups&/groups&post&201():::EXIT,1.0,Attribute require_two_factor_authentication is responded to by parameter require_two_factor_authentication with a description: Require all users in this group to setup Two-factor authentication,1.0
23,post+groups,share_with_group_lock,input.share_with_group_lock == return.share_with_group_lock,daikon.inv.binary.twoScalar.IntEqual,"(input.share_with_group_lock, return.share_with_group_lock)",/groups&/groups&post&201():::EXIT,1.0,Attribute share_with_group_lock is responded to by parameter share_with_group_lock with a description: Prevent sharing a project with another group within this group,1.0
24,post+groups,subgroup_creation_level,"input.subgroup_creation_level == return.subgroup_creation_level
return.subgroup_creation_level one of { ""maintainer"", ""owner"" }","daikon.inv.binary.twoString.StringEqual
daikon.inv.unary.string.OneOfString","(input.subgroup_creation_level, return.subgroup_creation_level)
(return.subgroup_creation_level)","/groups&/groups&post&201():::EXIT
/groups&/groups&post&201():::EXIT",1.0,"Attribute subgroup_creation_level is responded to by parameter subgroup_creation_level with a description: Allowed to create subgroups. Can be owner(Owners), or maintainer(Maintainers)",1.0
25,post+groups,two_factor_grace_period,input.two_factor_grace_period == return.two_factor_grace_period,daikon.inv.binary.twoScalar.IntEqual,"(input.two_factor_grace_period, return.two_factor_grace_period)",/groups&/groups&post&201():::EXIT,1.0,Attribute two_factor_grace_period is responded to by parameter two_factor_grace_period with a description: Time before Two-factor authentication is enforced (in hours),1.0
26,post+groups,visibility,"input.visibility == return.visibility
return.visibility one of { ""internal"", ""private"", ""public"" }","daikon.inv.binary.twoString.StringEqual
daikon.inv.unary.string.OneOfString","(input.visibility, return.visibility)
(return.visibility)","/groups&/groups&post&201():::EXIT
/groups&/groups&post&201():::EXIT",1.0,"Attribute visibility is responded to by parameter visibility with a description: The group's visibility. Can be private,internal, orpublic",1.0
27,post+groups,web_url,input.path is a substring of return.web_url,daikon.inv.binary.twoString.StdString$SubString,"(input.path, return.web_url)",/groups&/groups&post&201():::EXIT,1.0,"{""type"": ""string""}",1.0
28,post+groups_{id}_hooks,confidential_issues_events,input.confidential_issues_events == return.confidential_issues_events,daikon.inv.binary.twoScalar.IntEqual,"(input.confidential_issues_events, return.confidential_issues_events)",/groups/{id}/hooks&/groups/{id}/hooks&post&201():::EXIT,1.0,Attribute confidential_issues_events is responded to by parameter confidential_issues_events with a description: Trigger hook on confidential issues events,1.0
29,post+groups_{id}_hooks,confidential_note_events,input.confidential_note_events == return.confidential_note_events,daikon.inv.binary.twoScalar.IntEqual,"(input.confidential_note_events, return.confidential_note_events)",/groups/{id}/hooks&/groups/{id}/hooks&post&201():::EXIT,1.0,Attribute confidential_note_events is responded to by parameter confidential_note_events with a description: Trigger hook on confidential note events,1.0
30,post+groups_{id}_hooks,deployment_events,input.deployment_events == return.deployment_events,daikon.inv.binary.twoScalar.IntEqual,"(input.deployment_events, return.deployment_events)",/groups/{id}/hooks&/groups/{id}/hooks&post&201():::EXIT,1.0,Attribute deployment_events is responded to by parameter deployment_events with a description: Trigger hook on deployment events,1.0
31,post+groups_{id}_hooks,enable_ssl_verification,input.enable_ssl_verification == return.enable_ssl_verification,daikon.inv.binary.twoScalar.IntEqual,"(input.enable_ssl_verification, return.enable_ssl_verification)",/groups/{id}/hooks&/groups/{id}/hooks&post&201():::EXIT,1.0,Attribute enable_ssl_verification is responded to by parameter enable_ssl_verification with a description: Do SSL verification when triggering the hook,1.0
32,post+groups_{id}_hooks,group_id,input.id == return.group_id,daikon.inv.binary.twoScalar.IntEqual,"(input.id, return.group_id)",/groups/{id}/hooks&/groups/{id}/hooks&post&201():::EXIT,1.0,Attribute group_id is responded to by parameter id with a description: The ID orURL-encoded path of the group,1.0
33,post+groups_{id}_hooks,issues_events,input.issues_events == return.issues_events,daikon.inv.binary.twoScalar.IntEqual,"(input.issues_events, return.issues_events)",/groups/{id}/hooks&/groups/{id}/hooks&post&201():::EXIT,1.0,Attribute issues_events is responded to by parameter issues_events with a description: Trigger hook on issues events,1.0
34,post+groups_{id}_hooks,job_events,input.job_events == return.job_events,daikon.inv.binary.twoScalar.IntEqual,"(input.job_events, return.job_events)",/groups/{id}/hooks&/groups/{id}/hooks&post&201():::EXIT,1.0,Attribute job_events is responded to by parameter job_events with a description: Trigger hook on job events,1.0
35,post+groups_{id}_hooks,merge_requests_events,input.merge_requests_events == return.merge_requests_events,daikon.inv.binary.twoScalar.IntEqual,"(input.merge_requests_events, return.merge_requests_events)",/groups/{id}/hooks&/groups/{id}/hooks&post&201():::EXIT,1.0,Attribute merge_requests_events is responded to by parameter merge_requests_events with a description: Trigger hook on merge requests events,1.0
36,post+groups_{id}_hooks,note_events,input.note_events == return.note_events,daikon.inv.binary.twoScalar.IntEqual,"(input.note_events, return.note_events)",/groups/{id}/hooks&/groups/{id}/hooks&post&201():::EXIT,1.0,Attribute note_events is responded to by parameter note_events with a description: Trigger hook on note events,1.0
37,post+groups_{id}_hooks,pipeline_events,input.pipeline_events == return.pipeline_events,daikon.inv.binary.twoScalar.IntEqual,"(input.pipeline_events, return.pipeline_events)",/groups/{id}/hooks&/groups/{id}/hooks&post&201():::EXIT,1.0,Attribute pipeline_events is responded to by parameter pipeline_events with a description: Trigger hook on pipeline events,1.0
38,post+groups_{id}_hooks,push_events,input.push_events == return.push_events,daikon.inv.binary.twoScalar.IntEqual,"(input.push_events, return.push_events)",/groups/{id}/hooks&/groups/{id}/hooks&post&201():::EXIT,1.0,Attribute push_events is responded to by parameter push_events with a description: Trigger hook on push events,1.0
39,post+groups_{id}_hooks,releases_events,input.releases_events == return.releases_events,daikon.inv.binary.twoScalar.IntEqual,"(input.releases_events, return.releases_events)",/groups/{id}/hooks&/groups/{id}/hooks&post&201():::EXIT,1.0,Attribute releases_events is responded to by parameter releases_events with a description: Trigger hook on release events,1.0
40,post+groups_{id}_hooks,tag_push_events,input.tag_push_events == return.tag_push_events,daikon.inv.binary.twoScalar.IntEqual,"(input.tag_push_events, return.tag_push_events)",/groups/{id}/hooks&/groups/{id}/hooks&post&201():::EXIT,1.0,Attribute tag_push_events is responded to by parameter tag_push_events with a description: Trigger hook on tag push events,1.0
41,post+groups_{id}_hooks,url,input.url == return.url,daikon.inv.binary.twoString.StringEqual,"(input.url, return.url)",/groups/{id}/hooks&/groups/{id}/hooks&post&201():::EXIT,1.0,Attribute url is responded to by parameter url with a description: The hook URL,1.0
42,post+groups_{id}_hooks,wiki_page_events,input.wiki_page_events == return.wiki_page_events,daikon.inv.binary.twoScalar.IntEqual,"(input.wiki_page_events, return.wiki_page_events)",/groups/{id}/hooks&/groups/{id}/hooks&post&201():::EXIT,1.0,Attribute wiki_page_events is responded to by parameter wiki_page_events with a description: Trigger hook on wiki events,1.0
43,post+groups_{id}_projects_{project_id},emails_disabled,"return.emails_disabled one of { ""false"", ""true"" }",daikon.inv.unary.string.OneOfString,(return.emails_disabled),/groups/{id}/projects/{project_id}&/groups/{id}/projects/{project_id}&post&201():::EXIT,1.0,"{""type"": ""string""}",1.0
44,post+groups_{id}_projects_{project_id},web_url,return.path is a substring of return.web_url,daikon.inv.binary.twoString.StdString$SubString,"(return.path, return.web_url)",/groups/{id}/projects/{project_id}&/groups/{id}/projects/{project_id}&post&201():::EXIT,1.0,"{""type"": ""string""}",1.0
45,post+groups_{id}_share,id,input.id == return.id,daikon.inv.binary.twoScalar.IntEqual,"(input.id, return.id)",/groups/{id}/share&/groups/{id}/share&post&201():::EXIT,1.0,"Attribute id is responded to by parameter id with a description: The ID orURL-encoded path of the group
Attribute id is responded to by parameter group_id with a description: The ID of the group to share with",1.0
46,post+groups_{id}_share,projects.created_at,"LENGTH(return.created_at)==24
return.created_at is Timestamp. Format: YYYY-MM-DDTHH:MM:SS.mmZ (Miliseconds are optional)","daikon.inv.unary.string.FixedLengthString
daikon.inv.unary.string.dates.IsTimestampYYYYMMHHThhmmssmm","(return.created_at)
(return.created_at)","/groups/{id}/share&/groups/{id}/share&post&201&projects():::EXIT
/groups/{id}/share&/groups/{id}/share&post&201&projects():::EXIT",1.0,"{""type"": ""string"", ""format"": ""date-time""}",1.0
47,post+groups_{id}_share,projects.last_activity_at,"LENGTH(return.last_activity_at)==24
return.last_activity_at is Timestamp. Format: YYYY-MM-DDTHH:MM:SS.mmZ (Miliseconds are optional)","daikon.inv.unary.string.FixedLengthString
daikon.inv.unary.string.dates.IsTimestampYYYYMMHHThhmmssmm","(return.last_activity_at)
(return.last_activity_at)","/groups/{id}/share&/groups/{id}/share&post&201&projects():::EXIT
/groups/{id}/share&/groups/{id}/share&post&201&projects():::EXIT",1.0,"{""type"": ""string"", ""format"": ""date-time""}",1.0
48,post+groups_{id}_share,projects.web_url,"return.web_url is a substring of return.http_url_to_repo
return.web_url is a substring of return.readme_url","daikon.inv.binary.twoString.StdString$SubString
daikon.inv.binary.twoString.StdString$SubString","(return.http_url_to_repo, return.web_url)
(return.web_url, return.readme_url)","/groups/{id}/share&/groups/{id}/share&post&201&projects():::EXIT
/groups/{id}/share&/groups/{id}/share&post&201&projects():::EXIT",1.0,"{""type"": ""string""}",1.0
49,put+groups_{id},description,input.description == return.description,daikon.inv.binary.twoString.StringEqual,"(input.description, return.description)",/groups/{id}&/groups/{id}&put&200():::EXIT,1.0,Attribute description is responded to by parameter description with a description: The description of the group,1.0
50,put+groups_{id},full_path,"input.path == return.full_path
return.full_path == return.path
return.full_path is a substring of return.web_url","daikon.inv.binary.twoString.StringEqual
daikon.inv.binary.twoString.StringEqual
daikon.inv.binary.twoString.StdString$SubString","(input.path, return.full_path)
(return.full_path, return.path)
(return.full_path, return.web_url)","/groups/{id}&/groups/{id}&put&200():::EXIT
/groups/{id}&/groups/{id}&put&200():::EXIT
/groups/{id}&/groups/{id}&put&200():::EXIT",1.0,Attribute full_path is responded to by parameter path with a description: The path of the group,1.0
51,put+groups_{id},id,input.id == return.id,daikon.inv.binary.twoScalar.IntEqual,"(input.id, return.id)",/groups/{id}&/groups/{id}&put&200():::EXIT,1.0,Attribute id is responded to by parameter id with a description: The ID of the group,1.0
52,put+groups_{id},name,return.full_name == return.name,daikon.inv.binary.twoString.StringEqual,"(return.full_name, return.name)",/groups/{id}&/groups/{id}&put&200():::EXIT,1.0,Attribute name is responded to by parameter name with a description: The name of the group,1.0
53,put+groups_{id},projects.created_at,"LENGTH(return.created_at)==24
return.created_at is Timestamp. Format: YYYY-MM-DDTHH:MM:SS.mmZ (Miliseconds are optional)","daikon.inv.unary.string.FixedLengthString
daikon.inv.unary.string.dates.IsTimestampYYYYMMHHThhmmssmm","(return.created_at)
(return.created_at)","/groups/{id}&/groups/{id}&put&200&projects():::EXIT
/groups/{id}&/groups/{id}&put&200&projects():::EXIT",1.0,"{""type"": ""string"", ""format"": ""date-time""}",1.0
54,put+groups_{id},projects.last_activity_at,"LENGTH(return.last_activity_at)==24
return.last_activity_at is Timestamp. Format: YYYY-MM-DDTHH:MM:SS.mmZ (Miliseconds are optional)","daikon.inv.unary.string.FixedLengthString
daikon.inv.unary.string.dates.IsTimestampYYYYMMHHThhmmssmm","(return.last_activity_at)
(return.last_activity_at)","/groups/{id}&/groups/{id}&put&200&projects():::EXIT
/groups/{id}&/groups/{id}&put&200&projects():::EXIT",1.0,"{""type"": ""string"", ""format"": ""date-time""}",1.0
55,put+groups_{id},projects.web_url,"return.web_url is a substring of return.http_url_to_repo
return.web_url is a substring of return.readme_url","daikon.inv.binary.twoString.StdString$SubString
daikon.inv.binary.twoString.StdString$SubString","(return.http_url_to_repo, return.web_url)
(return.web_url, return.readme_url)","/groups/{id}&/groups/{id}&put&200&projects():::EXIT
/groups/{id}&/groups/{id}&put&200&projects():::EXIT",1.0,"{""type"": ""string""}",1.0
56,put+groups_{id},request_access_enabled,input.request_access_enabled == return.request_access_enabled,daikon.inv.binary.twoScalar.IntEqual,"(input.request_access_enabled, return.request_access_enabled)",/groups/{id}&/groups/{id}&put&200():::EXIT,1.0,Attribute request_access_enabled is responded to by parameter request_access_enabled with a description: Allow users to request member access,1.0
57,put+groups_{id},visibility,"input.visibility == return.visibility
return.visibility one of { ""internal"", ""private"", ""public"" }","daikon.inv.binary.twoString.StringEqual
daikon.inv.unary.string.OneOfString","(input.visibility, return.visibility)
(return.visibility)","/groups/{id}&/groups/{id}&put&200():::EXIT
/groups/{id}&/groups/{id}&put&200():::EXIT",1.0,"Attribute visibility is responded to by parameter visibility with a description: The visibility level of the group. Can beprivate,internal, orpublic",1.0
58,put+groups_{id}_hooks_{hook_id},confidential_issues_events,input.confidential_issues_events == return.confidential_issues_events,daikon.inv.binary.twoScalar.IntEqual,"(input.confidential_issues_events, return.confidential_issues_events)",/groups/{id}/hooks/{hook_id}&/groups/{id}/hooks/{hook_id}&put&200():::EXIT,1.0,Attribute confidential_issues_events is responded to by parameter confidential_issues_events with a description: Trigger hook on confidential issues events,1.0
59,put+groups_{id}_hooks_{hook_id},confidential_note_events,input.confidential_note_events == return.confidential_note_events,daikon.inv.binary.twoScalar.IntEqual,"(input.confidential_note_events, return.confidential_note_events)",/groups/{id}/hooks/{hook_id}&/groups/{id}/hooks/{hook_id}&put&200():::EXIT,1.0,Attribute confidential_note_events is responded to by parameter confidential_note_events with a description: Trigger hook on confidential note events,1.0
60,put+groups_{id}_hooks_{hook_id},deployment_events,input.deployment_events == return.deployment_events,daikon.inv.binary.twoScalar.IntEqual,"(input.deployment_events, return.deployment_events)",/groups/{id}/hooks/{hook_id}&/groups/{id}/hooks/{hook_id}&put&200():::EXIT,1.0,Attribute deployment_events is responded to by parameter deployment_events with a description: Trigger hook on deployment events,1.0
61,put+groups_{id}_hooks_{hook_id},enable_ssl_verification,input.enable_ssl_verification == return.enable_ssl_verification,daikon.inv.binary.twoScalar.IntEqual,"(input.enable_ssl_verification, return.enable_ssl_verification)",/groups/{id}/hooks/{hook_id}&/groups/{id}/hooks/{hook_id}&put&200():::EXIT,1.0,Attribute enable_ssl_verification is responded to by parameter enable_ssl_verification with a description: Do SSL verification when triggering the hook,1.0
62,put+groups_{id}_hooks_{hook_id},group_id,input.id == return.group_id,daikon.inv.binary.twoScalar.IntEqual,"(input.id, return.group_id)",/groups/{id}/hooks/{hook_id}&/groups/{id}/hooks/{hook_id}&put&200():::EXIT,1.0,Attribute group_id is responded to by parameter id with a description: The ID orURL-encoded path of the group,1.0
63,put+groups_{id}_hooks_{hook_id},issues_events,input.issues_events == return.issues_events,daikon.inv.binary.twoScalar.IntEqual,"(input.issues_events, return.issues_events)",/groups/{id}/hooks/{hook_id}&/groups/{id}/hooks/{hook_id}&put&200():::EXIT,1.0,Attribute issues_events is responded to by parameter issues_events with a description: Trigger hook on issues events,1.0
64,put+groups_{id}_hooks_{hook_id},job_events,input.job_events == return.job_events,daikon.inv.binary.twoScalar.IntEqual,"(input.job_events, return.job_events)",/groups/{id}/hooks/{hook_id}&/groups/{id}/hooks/{hook_id}&put&200():::EXIT,1.0,Attribute job_events is responded to by parameter job_events with a description: Trigger hook on job events,1.0
65,put+groups_{id}_hooks_{hook_id},merge_requests_events,input.merge_requests_events == return.merge_requests_events,daikon.inv.binary.twoScalar.IntEqual,"(input.merge_requests_events, return.merge_requests_events)",/groups/{id}/hooks/{hook_id}&/groups/{id}/hooks/{hook_id}&put&200():::EXIT,1.0,Attribute merge_requests_events is responded to by parameter merge_requests_events with a description: Trigger hook on merge requests events,1.0
66,put+groups_{id}_hooks_{hook_id},note_events,input.note_events == return.note_events,daikon.inv.binary.twoScalar.IntEqual,"(input.note_events, return.note_events)",/groups/{id}/hooks/{hook_id}&/groups/{id}/hooks/{hook_id}&put&200():::EXIT,1.0,Attribute note_events is responded to by parameter note_events with a description: Trigger hook on note events,1.0
67,put+groups_{id}_hooks_{hook_id},pipeline_events,input.pipeline_events == return.pipeline_events,daikon.inv.binary.twoScalar.IntEqual,"(input.pipeline_events, return.pipeline_events)",/groups/{id}/hooks/{hook_id}&/groups/{id}/hooks/{hook_id}&put&200():::EXIT,1.0,Attribute pipeline_events is responded to by parameter pipeline_events with a description: Trigger hook on pipeline events,1.0
68,put+groups_{id}_hooks_{hook_id},push_events,input.push_events == return.push_events,daikon.inv.binary.twoScalar.IntEqual,"(input.push_events, return.push_events)",/groups/{id}/hooks/{hook_id}&/groups/{id}/hooks/{hook_id}&put&200():::EXIT,1.0,Attribute push_events is responded to by parameter push_events with a description: Trigger hook on push events,1.0
69,put+groups_{id}_hooks_{hook_id},releases_events,input.releases_events == return.releases_events,daikon.inv.binary.twoScalar.IntEqual,"(input.releases_events, return.releases_events)",/groups/{id}/hooks/{hook_id}&/groups/{id}/hooks/{hook_id}&put&200():::EXIT,1.0,Attribute releases_events is responded to by parameter releases_events with a description: Trigger hook on release events,1.0
70,put+groups_{id}_hooks_{hook_id},tag_push_events,input.tag_push_events == return.tag_push_events,daikon.inv.binary.twoScalar.IntEqual,"(input.tag_push_events, return.tag_push_events)",/groups/{id}/hooks/{hook_id}&/groups/{id}/hooks/{hook_id}&put&200():::EXIT,1.0,Attribute tag_push_events is responded to by parameter tag_push_events with a description: Trigger hook on tag push events,1.0
71,put+groups_{id}_hooks_{hook_id},url,input.url == return.url,daikon.inv.binary.twoString.StringEqual,"(input.url, return.url)",/groups/{id}/hooks/{hook_id}&/groups/{id}/hooks/{hook_id}&put&200():::EXIT,1.0,Attribute url is responded to by parameter url with a description: The hook URL,1.0
