,endpoint,group,invariant,invariantType,variables,pptname,tp_x,description,tp_y
0,get+api_v1_holidays,holidays.date,return.date is a Date. Format: YYYY/MM/DD,daikon.inv.unary.string.dates.IsDateYYYYMMDD,(return.date),/api/v1/holidays&Holidays&200&holidays():::EXIT,1.0,"ISO date: the literal date of the holiday, schema: {""type"": ""string"", ""format"": ""date""}",1.0
1,get+api_v1_holidays,holidays.federal,"return.federal one of { 0, 1 }",daikon.inv.unary.scalar.OneOfScalar,(return.federal),/api/v1/holidays&Holidays&200&holidays():::EXIT,1.0,"Whether this holiday is observed by federally-regulated industries, schema: {""type"": ""integer"", ""enum"": [1, 0]}",1.0
2,get+api_v1_holidays,holidays.observedDate,return.observedDate is a Date. Format: YYYY/MM/DD,daikon.inv.unary.string.dates.IsDateYYYYMMDD,(return.observedDate),/api/v1/holidays&Holidays&200&holidays():::EXIT,1.0,"ISO date: when this holiday is observed, schema: {""type"": ""string"", ""format"": ""date""}",1.0
3,get+api_v1_holidays,holidays.provinces.id,LENGTH(return.id)==2,daikon.inv.unary.string.FixedLengthString,(return.id),/api/v1/holidays&Holidays&200&holidays&provinces():::EXIT,1.0,"Canadian province abbreviations, schema: {""type"": ""string"", ""enum"": [""AB"", ""BC"", ""MB"", ""NB"", ""NL"", ""NS"", ""NT"", ""NU"", ""ON"", ""PE"", ""QC"", ""SK"", ""YT""]}",1.0
4,get+api_v1_holidays,holidays.provinces.optional,return.optional == 1,daikon.inv.unary.scalar.OneOfScalar,(return.optional),/api/v1/holidays&Holidays&200&holidays&provinces():::EXIT,1.0,"Whether this province optionally observes a given holiday, schema: {""type"": ""integer"", ""enum"": [1]}",1.0
5,get+api_v1_holidays,holidays.provinces.sourceLink,return.sourceLink is Url,daikon.inv.unary.string.IsUrl,(return.sourceLink),/api/v1/holidays&Holidays&200&holidays&provinces():::EXIT,1.0,"URL to public holidays reference for this region, schema: {""type"": ""string"", ""format"": ""uri""}",1.0
6,get+api_v1_holidays_{holidayid},holiday.date,return.holiday.date is a Date. Format: YYYY/MM/DD,daikon.inv.unary.string.dates.IsDateYYYYMMDD,(return.holiday.date),/api/v1/holidays/{holidayId}&Holiday&200():::EXIT,1.0,"ISO date: the literal date of the holiday, schema: {""type"": ""string"", ""format"": ""date""}",1.0
7,get+api_v1_holidays_{holidayid},holiday.federal,"return.holiday.federal one of { 0, 1 }
input.holidayId >= return.holiday.federal","daikon.inv.unary.scalar.OneOfScalar
daikon.inv.binary.twoScalar.IntGreaterEqual","(return.holiday.federal)
(input.holidayId, return.holiday.federal)","/api/v1/holidays/{holidayId}&Holiday&200():::EXIT
/api/v1/holidays/{holidayId}&Holiday&200():::EXIT",1.0,"Whether this holiday is observed by federally-regulated industries, schema: {""type"": ""integer"", ""enum"": [1, 0]}",1.0
8,get+api_v1_holidays_{holidayid},holiday.observedDate,return.holiday.observedDate is a Date. Format: YYYY/MM/DD,daikon.inv.unary.string.dates.IsDateYYYYMMDD,(return.holiday.observedDate),/api/v1/holidays/{holidayId}&Holiday&200():::EXIT,1.0,"ISO date: when this holiday is observed, schema: {""type"": ""string"", ""format"": ""date""}",1.0
9,get+api_v1_holidays_{holidayid},holiday.provinces.id,LENGTH(return.id)==2,daikon.inv.unary.string.FixedLengthString,(return.id),/api/v1/holidays/{holidayId}&Holiday&200&holiday&provinces():::EXIT,1.0,"Canadian province abbreviations, schema: {""type"": ""string"", ""enum"": [""AB"", ""BC"", ""MB"", ""NB"", ""NL"", ""NS"", ""NT"", ""NU"", ""ON"", ""PE"", ""QC"", ""SK"", ""YT""]}",1.0
10,get+api_v1_holidays_{holidayid},holiday.provinces.optional,return.optional == 1,daikon.inv.unary.scalar.OneOfScalar,(return.optional),/api/v1/holidays/{holidayId}&Holiday&200&holiday&provinces():::EXIT,1.0,"Whether this province optionally observes a given holiday, schema: {""type"": ""integer"", ""enum"": [1]}",1.0
11,get+api_v1_holidays_{holidayid},holiday.provinces.sourceLink,return.sourceLink is Url,daikon.inv.unary.string.IsUrl,(return.sourceLink),/api/v1/holidays/{holidayId}&Holiday&200&holiday&provinces():::EXIT,1.0,"URL to public holidays reference for this region, schema: {""type"": ""string"", ""format"": ""uri""}",1.0
12,get+api_v1_provinces,provinces.id,LENGTH(return.id)==2,daikon.inv.unary.string.FixedLengthString,(return.id),/api/v1/provinces&Provinces&200&provinces():::EXIT,1.0,"Canadian province abbreviations, schema: {""type"": ""string"", ""enum"": [""AB"", ""BC"", ""MB"", ""NB"", ""NL"", ""NS"", ""NT"", ""NU"", ""ON"", ""PE"", ""QC"", ""SK"", ""YT""]}",1.0
13,get+api_v1_provinces,provinces.sourceLink,return.sourceLink is Url,daikon.inv.unary.string.IsUrl,(return.sourceLink),/api/v1/provinces&Provinces&200&provinces():::EXIT,1.0,"URL to public holidays reference for this region, schema: {""type"": ""string"", ""format"": ""uri""}",1.0
14,get+api_v1_provinces_{provinceid},province.id,input.provinceId == return.province.id,daikon.inv.binary.twoString.StringEqual,"(input.provinceId, return.province.id)",/api/v1/provinces/{provinceId}&Province&200():::EXIT,1.0,"Canadian province abbreviations, schema: {""type"": ""string"", ""enum"": [""AB"", ""BC"", ""MB"", ""NB"", ""NL"", ""NS"", ""NT"", ""NU"", ""ON"", ""PE"", ""QC"", ""SK"", ""YT""]}",1.0
15,get+api_v1_provinces_{provinceid},province.sourceLink,return.province.sourceLink is Url,daikon.inv.unary.string.IsUrl,(return.province.sourceLink),/api/v1/provinces/{provinceId}&Province&200():::EXIT,1.0,"URL to public holidays reference for this region, schema: {""type"": ""string"", ""format"": ""uri""}",1.0
