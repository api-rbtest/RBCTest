endpoint,group,invariant,invariantType,variables,pptname,tp
get+groups,array,input.per_page >= size(return.array[]),daikon.inv.binary.twoScalar.IntGreaterEqual,"(input.per_page, size(return.array[..]))",/groups&/groups&get&200%array():::EXIT,1.0
get+groups,auto_devops_enabled,"return.auto_devops_enabled one of { ""false"", ""true"" }",daikon.inv.unary.string.OneOfString,(return.auto_devops_enabled),/groups&/groups&get&200():::EXIT,1.0
get+groups,created_at,"LENGTH(return.created_at)==24
return.created_at is Timestamp. Format: YYYY-MM-DDTHH:MM:SS.mmZ (Miliseconds are optional)","daikon.inv.unary.string.FixedLengthString
daikon.inv.unary.string.dates.IsTimestampYYYYMMHHThhmmssmm","(return.created_at)
(return.created_at)","/groups&/groups&get&200():::EXIT
/groups&/groups&get&200():::EXIT",1.0
get+groups,default_branch_protection,"return.default_branch_protection one of { 0, 1, 2 }",daikon.inv.unary.scalar.OneOfScalar,(return.default_branch_protection),/groups&/groups&get&200():::EXIT,1.0
get+groups,emails_disabled,"return.emails_disabled one of { ""false"", ""true"" }",daikon.inv.unary.string.OneOfString,(return.emails_disabled),/groups&/groups&get&200():::EXIT,1.0
get+groups,full_path,"return.path is a substring of return.full_path
return.full_path is a substring of return.web_url","daikon.inv.binary.twoString.StdString$SubString
daikon.inv.binary.twoString.StdString$SubString","(return.full_path, return.path)
(return.full_path, return.web_url)","/groups&/groups&get&200():::EXIT
/groups&/groups&get&200():::EXIT",1.0
get+groups,mentions_disabled,"return.mentions_disabled one of { ""false"", ""true"" }",daikon.inv.unary.string.OneOfString,(return.mentions_disabled),/groups&/groups&get&200():::EXIT,1.0
get+groups,name,return.name is a substring of return.full_name,daikon.inv.binary.twoString.StdString$SubString,"(return.full_name, return.name)",/groups&/groups&get&200():::EXIT,1.0
get+groups,project_creation_level,"return.project_creation_level one of { ""developer"", ""maintainer"", ""noone"" }",daikon.inv.unary.string.OneOfString,(return.project_creation_level),/groups&/groups&get&200():::EXIT,1.0
get+groups,statistics.job_artifacts_size,"return.statistics.job_artifacts_size == return.statistics.lfs_objects_size
return.statistics.job_artifacts_size == return.statistics.packages_size
return.statistics.job_artifacts_size == return.statistics.snippets_size
return.statistics.job_artifacts_size == 0
return.default_branch_protection >= return.statistics.job_artifacts_size
return.statistics.job_artifacts_size <= return.statistics.repository_size
return.statistics.job_artifacts_size <= return.statistics.wiki_size
return.statistics.job_artifacts_size <= return.two_factor_grace_period","daikon.inv.binary.twoScalar.IntEqual
daikon.inv.binary.twoScalar.IntEqual
daikon.inv.binary.twoScalar.IntEqual
daikon.inv.unary.scalar.OneOfScalar
daikon.inv.binary.twoScalar.IntGreaterEqual
daikon.inv.binary.twoScalar.IntLessEqual
daikon.inv.binary.twoScalar.IntLessEqual
daikon.inv.binary.twoScalar.IntLessEqual","(return.statistics.job_artifacts_size, return.statistics.lfs_objects_size)
(return.statistics.job_artifacts_size, return.statistics.packages_size)
(return.statistics.job_artifacts_size, return.statistics.snippets_size)
(return.statistics.job_artifacts_size)
(return.default_branch_protection, return.statistics.job_artifacts_size)
(return.statistics.job_artifacts_size, return.statistics.repository_size)
(return.statistics.job_artifacts_size, return.statistics.wiki_size)
(return.statistics.job_artifacts_size, return.two_factor_grace_period)","/groups&/groups&get&200():::EXIT
/groups&/groups&get&200():::EXIT
/groups&/groups&get&200():::EXIT
/groups&/groups&get&200():::EXIT
/groups&/groups&get&200():::EXIT
/groups&/groups&get&200():::EXIT
/groups&/groups&get&200():::EXIT
/groups&/groups&get&200():::EXIT",1.0
get+groups,statistics.repository_size,"return.statistics.repository_size >= 0
return.statistics.repository_size >= return.statistics.wiki_size","daikon.inv.unary.scalar.LowerBound
daikon.inv.binary.twoScalar.IntGreaterEqual","(return.statistics.repository_size)
(return.statistics.repository_size, return.statistics.wiki_size)","/groups&/groups&get&200():::EXIT
/groups&/groups&get&200():::EXIT",1.0
get+groups,statistics.storage_size,"return.statistics.storage_size >= 0
return.statistics.job_artifacts_size <= return.statistics.storage_size
return.statistics.repository_size <= return.statistics.storage_size
return.statistics.storage_size >= return.statistics.wiki_size","daikon.inv.unary.scalar.LowerBound
daikon.inv.binary.twoScalar.IntLessEqual
daikon.inv.binary.twoScalar.IntLessEqual
daikon.inv.binary.twoScalar.IntGreaterEqual","(return.statistics.storage_size)
(return.statistics.job_artifacts_size, return.statistics.storage_size)
(return.statistics.repository_size, return.statistics.storage_size)
(return.statistics.storage_size, return.statistics.wiki_size)","/groups&/groups&get&200():::EXIT
/groups&/groups&get&200():::EXIT
/groups&/groups&get&200():::EXIT
/groups&/groups&get&200():::EXIT",1.0
get+groups,statistics.wiki_size,return.statistics.wiki_size >= 0,daikon.inv.unary.scalar.LowerBound,(return.statistics.wiki_size),/groups&/groups&get&200():::EXIT,1.0
get+groups,subgroup_creation_level,"return.subgroup_creation_level one of { ""maintainer"", ""owner"" }",daikon.inv.unary.string.OneOfString,(return.subgroup_creation_level),/groups&/groups&get&200():::EXIT,1.0
get+groups,two_factor_grace_period,return.two_factor_grace_period >= 0,daikon.inv.unary.scalar.LowerBound,(return.two_factor_grace_period),/groups&/groups&get&200():::EXIT,1.0
get+groups,visibility,"return.visibility one of { ""internal"", ""private"", ""public"" }",daikon.inv.unary.string.OneOfString,(return.visibility),/groups&/groups&get&200():::EXIT,1.0
get+groups_{id},created_at,"LENGTH(return.created_at)==24
return.created_at is Timestamp. Format: YYYY-MM-DDTHH:MM:SS.mmZ (Miliseconds are optional)","daikon.inv.unary.string.FixedLengthString
daikon.inv.unary.string.dates.IsTimestampYYYYMMHHThhmmssmm","(return.created_at)
(return.created_at)","/groups/{id}&/groups/{id}&get&200():::EXIT
/groups/{id}&/groups/{id}&get&200():::EXIT",1.0
get+groups_{id},id,input.id == return.id,daikon.inv.binary.twoScalar.IntEqual,"(input.id, return.id)",/groups/{id}&/groups/{id}&get&200():::EXIT,1.0
get+groups_{id},projects._links.self,"return._links.self is a substring of return._links.issues
return._links.self is a substring of return._links.merge_requests
return._links.self is a substring of return._links.repo_branches
return._links.self is a substring of return._links.labels
return._links.self is a substring of return._links.events
return._links.self is a substring of return._links.members","daikon.inv.binary.twoString.StdString$SubString
daikon.inv.binary.twoString.StdString$SubString
daikon.inv.binary.twoString.StdString$SubString
daikon.inv.binary.twoString.StdString$SubString
daikon.inv.binary.twoString.StdString$SubString
daikon.inv.binary.twoString.StdString$SubString","(return._links.self, return._links.issues)
(return._links.self, return._links.merge_requests)
(return._links.self, return._links.repo_branches)
(return._links.self, return._links.labels)
(return._links.self, return._links.events)
(return._links.self, return._links.members)","/groups/{id}&/groups/{id}&get&200&projects():::EXIT
/groups/{id}&/groups/{id}&get&200&projects():::EXIT
/groups/{id}&/groups/{id}&get&200&projects():::EXIT
/groups/{id}&/groups/{id}&get&200&projects():::EXIT
/groups/{id}&/groups/{id}&get&200&projects():::EXIT
/groups/{id}&/groups/{id}&get&200&projects():::EXIT",1.0
get+groups_{id},projects.created_at,"LENGTH(return.created_at)==24
return.created_at is Timestamp. Format: YYYY-MM-DDTHH:MM:SS.mmZ (Miliseconds are optional)","daikon.inv.unary.string.FixedLengthString
daikon.inv.unary.string.dates.IsTimestampYYYYMMHHThhmmssmm","(return.created_at)
(return.created_at)","/groups/{id}&/groups/{id}&get&200&projects():::EXIT
/groups/{id}&/groups/{id}&get&200&projects():::EXIT",1.0
get+groups_{id},projects.last_activity_at,"LENGTH(return.last_activity_at)==24
return.last_activity_at is Timestamp. Format: YYYY-MM-DDTHH:MM:SS.mmZ (Miliseconds are optional)","daikon.inv.unary.string.FixedLengthString
daikon.inv.unary.string.dates.IsTimestampYYYYMMHHThhmmssmm","(return.last_activity_at)
(return.last_activity_at)","/groups/{id}&/groups/{id}&get&200&projects():::EXIT
/groups/{id}&/groups/{id}&get&200&projects():::EXIT",1.0
get+groups_{id},projects.merge_method,"return.merge_method one of { ""ff"", ""merge"", ""rebase_merge"" }",daikon.inv.unary.string.OneOfString,(return.merge_method),/groups/{id}&/groups/{id}&get&200&projects():::EXIT,1.0
get+groups_{id},projects.name_with_namespace,"return.name is a substring of return.name_with_namespace
return.namespace.name is a substring of return.name_with_namespace","daikon.inv.binary.twoString.StdString$SubString
daikon.inv.binary.twoString.StdString$SubString","(return.name, return.name_with_namespace)
(return.name_with_namespace, return.namespace.name)","/groups/{id}&/groups/{id}&get&200&projects():::EXIT
/groups/{id}&/groups/{id}&get&200&projects():::EXIT",1.0
get+groups_{id},projects.namespace.id,input.id == return.namespace.id,daikon.inv.binary.twoScalar.IntEqual,"(input.id, return.namespace.id)",/groups/{id}&/groups/{id}&get&200&projects():::EXIT,1.0
get+groups_{id},projects.namespace.kind,"return.namespace.kind == ""group""
LENGTH(return.namespace.kind)==5","daikon.inv.unary.string.OneOfString
daikon.inv.unary.string.FixedLengthString","(return.namespace.kind)
(return.namespace.kind)","/groups/{id}&/groups/{id}&get&200&projects():::EXIT
/groups/{id}&/groups/{id}&get&200&projects():::EXIT",1.0
get+groups_{id},projects.path_with_namespace,"return.path_with_namespace is a substring of return.ssh_url_to_repo
return.path_with_namespace is a substring of return.web_url
return.path is a substring of return.path_with_namespace
return.namespace.path is a substring of return.path_with_namespace","daikon.inv.binary.twoString.StdString$SubString
daikon.inv.binary.twoString.StdString$SubString
daikon.inv.binary.twoString.StdString$SubString
daikon.inv.binary.twoString.StdString$SubString","(return.ssh_url_to_repo, return.path_with_namespace)
(return.web_url, return.path_with_namespace)
(return.path, return.path_with_namespace)
(return.path_with_namespace, return.namespace.path)","/groups/{id}&/groups/{id}&get&200&projects():::EXIT
/groups/{id}&/groups/{id}&get&200&projects():::EXIT
/groups/{id}&/groups/{id}&get&200&projects():::EXIT
/groups/{id}&/groups/{id}&get&200&projects():::EXIT",1.0
get+groups_{id},projects.web_url,"return.web_url is a substring of return.http_url_to_repo
return.web_url is a substring of return.readme_url","daikon.inv.binary.twoString.StdString$SubString
daikon.inv.binary.twoString.StdString$SubString","(return.http_url_to_repo, return.web_url)
(return.web_url, return.readme_url)","/groups/{id}&/groups/{id}&get&200&projects():::EXIT
/groups/{id}&/groups/{id}&get&200&projects():::EXIT",1.0
get+groups_{id},visibility,"return.visibility one of { ""internal"", ""private"", ""public"" }",daikon.inv.unary.string.OneOfString,(return.visibility),/groups/{id}&/groups/{id}&get&200():::EXIT,1.0
get+groups_{id}_descendant_groups,auto_devops_enabled,"return.auto_devops_enabled one of { ""false"", ""true"" }",daikon.inv.unary.string.OneOfString,(return.auto_devops_enabled),/groups/{id}/descendant_groups&/groups/{id}/descendant_groups&get&200():::EXIT,1.0
get+groups_{id}_descendant_groups,created_at,"LENGTH(return.created_at)==24
return.created_at is Timestamp. Format: YYYY-MM-DDTHH:MM:SS.mmZ (Miliseconds are optional)","daikon.inv.unary.string.FixedLengthString
daikon.inv.unary.string.dates.IsTimestampYYYYMMHHThhmmssmm","(return.created_at)
(return.created_at)","/groups/{id}/descendant_groups&/groups/{id}/descendant_groups&get&200():::EXIT
/groups/{id}/descendant_groups&/groups/{id}/descendant_groups&get&200():::EXIT",1.0
get+groups_{id}_descendant_groups,default_branch_protection,"return.default_branch_protection one of { 0, 1, 2 }",daikon.inv.unary.scalar.OneOfScalar,(return.default_branch_protection),/groups/{id}/descendant_groups&/groups/{id}/descendant_groups&get&200():::EXIT,1.0
get+groups_{id}_descendant_groups,emails_disabled,"return.emails_disabled one of { ""false"", ""true"" }",daikon.inv.unary.string.OneOfString,(return.emails_disabled),/groups/{id}/descendant_groups&/groups/{id}/descendant_groups&get&200():::EXIT,1.0
get+groups_{id}_descendant_groups,full_path,"return.path is a substring of return.full_path
return.full_path is a substring of return.web_url","daikon.inv.binary.twoString.StdString$SubString
daikon.inv.binary.twoString.StdString$SubString","(return.full_path, return.path)
(return.full_path, return.web_url)","/groups/{id}/descendant_groups&/groups/{id}/descendant_groups&get&200():::EXIT
/groups/{id}/descendant_groups&/groups/{id}/descendant_groups&get&200():::EXIT",1.0
get+groups_{id}_descendant_groups,id,input.id < return.id,daikon.inv.binary.twoScalar.IntLessThan,"(input.id, return.id)",/groups/{id}/descendant_groups&/groups/{id}/descendant_groups&get&200():::EXIT,1.0
get+groups_{id}_descendant_groups,input.skip_groups[statistics.job_artifacts_size],input.skip_groups[] elements == input.skip_groups[return.statistics.job_artifacts_size],daikon.inv.binary.sequenceScalar.SeqIntEqual,"(input.skip_groups[..], input.skip_groups[return.statistics.job_artifacts_size])",/groups/{id}/descendant_groups&/groups/{id}/descendant_groups&get&200():::EXIT,1.0
get+groups_{id}_descendant_groups,mentions_disabled,"return.mentions_disabled one of { ""false"", ""true"" }",daikon.inv.unary.string.OneOfString,(return.mentions_disabled),/groups/{id}/descendant_groups&/groups/{id}/descendant_groups&get&200():::EXIT,1.0
get+groups_{id}_descendant_groups,name,return.name is a substring of return.full_name,daikon.inv.binary.twoString.StdString$SubString,"(return.full_name, return.name)",/groups/{id}/descendant_groups&/groups/{id}/descendant_groups&get&200():::EXIT,1.0
get+groups_{id}_descendant_groups,project_creation_level,"return.project_creation_level one of { ""developer"", ""maintainer"", ""noone"" }",daikon.inv.unary.string.OneOfString,(return.project_creation_level),/groups/{id}/descendant_groups&/groups/{id}/descendant_groups&get&200():::EXIT,1.0
get+groups_{id}_descendant_groups,statistics.job_artifacts_size,"return.statistics.job_artifacts_size == return.statistics.lfs_objects_size
return.statistics.job_artifacts_size == return.statistics.packages_size
return.statistics.job_artifacts_size == return.statistics.snippets_size
return.statistics.job_artifacts_size == 0
return.default_branch_protection >= return.statistics.job_artifacts_size
return.statistics.job_artifacts_size <= return.statistics.repository_size
return.statistics.job_artifacts_size <= return.statistics.wiki_size
return.statistics.job_artifacts_size <= return.two_factor_grace_period","daikon.inv.binary.twoScalar.IntEqual
daikon.inv.binary.twoScalar.IntEqual
daikon.inv.binary.twoScalar.IntEqual
daikon.inv.unary.scalar.OneOfScalar
daikon.inv.binary.twoScalar.IntGreaterEqual
daikon.inv.binary.twoScalar.IntLessEqual
daikon.inv.binary.twoScalar.IntLessEqual
daikon.inv.binary.twoScalar.IntLessEqual","(return.statistics.job_artifacts_size, return.statistics.lfs_objects_size)
(return.statistics.job_artifacts_size, return.statistics.packages_size)
(return.statistics.job_artifacts_size, return.statistics.snippets_size)
(return.statistics.job_artifacts_size)
(return.default_branch_protection, return.statistics.job_artifacts_size)
(return.statistics.job_artifacts_size, return.statistics.repository_size)
(return.statistics.job_artifacts_size, return.statistics.wiki_size)
(return.statistics.job_artifacts_size, return.two_factor_grace_period)","/groups/{id}/descendant_groups&/groups/{id}/descendant_groups&get&200():::EXIT
/groups/{id}/descendant_groups&/groups/{id}/descendant_groups&get&200():::EXIT
/groups/{id}/descendant_groups&/groups/{id}/descendant_groups&get&200():::EXIT
/groups/{id}/descendant_groups&/groups/{id}/descendant_groups&get&200():::EXIT
/groups/{id}/descendant_groups&/groups/{id}/descendant_groups&get&200():::EXIT
/groups/{id}/descendant_groups&/groups/{id}/descendant_groups&get&200():::EXIT
/groups/{id}/descendant_groups&/groups/{id}/descendant_groups&get&200():::EXIT
/groups/{id}/descendant_groups&/groups/{id}/descendant_groups&get&200():::EXIT",1.0
get+groups_{id}_descendant_groups,statistics.repository_size,"return.statistics.repository_size >= 0
return.statistics.repository_size >= return.statistics.wiki_size","daikon.inv.unary.scalar.LowerBound
daikon.inv.binary.twoScalar.IntGreaterEqual","(return.statistics.repository_size)
(return.statistics.repository_size, return.statistics.wiki_size)","/groups/{id}/descendant_groups&/groups/{id}/descendant_groups&get&200():::EXIT
/groups/{id}/descendant_groups&/groups/{id}/descendant_groups&get&200():::EXIT",1.0
get+groups_{id}_descendant_groups,statistics.storage_size,"return.statistics.storage_size >= 0
return.statistics.job_artifacts_size <= return.statistics.storage_size
return.statistics.repository_size <= return.statistics.storage_size
return.statistics.storage_size >= return.statistics.wiki_size","daikon.inv.unary.scalar.LowerBound
daikon.inv.binary.twoScalar.IntLessEqual
daikon.inv.binary.twoScalar.IntLessEqual
daikon.inv.binary.twoScalar.IntGreaterEqual","(return.statistics.storage_size)
(return.statistics.job_artifacts_size, return.statistics.storage_size)
(return.statistics.repository_size, return.statistics.storage_size)
(return.statistics.storage_size, return.statistics.wiki_size)","/groups/{id}/descendant_groups&/groups/{id}/descendant_groups&get&200():::EXIT
/groups/{id}/descendant_groups&/groups/{id}/descendant_groups&get&200():::EXIT
/groups/{id}/descendant_groups&/groups/{id}/descendant_groups&get&200():::EXIT
/groups/{id}/descendant_groups&/groups/{id}/descendant_groups&get&200():::EXIT",1.0
get+groups_{id}_descendant_groups,statistics.wiki_size,return.statistics.wiki_size >= 0,daikon.inv.unary.scalar.LowerBound,(return.statistics.wiki_size),/groups/{id}/descendant_groups&/groups/{id}/descendant_groups&get&200():::EXIT,1.0
get+groups_{id}_descendant_groups,subgroup_creation_level,"return.subgroup_creation_level one of { ""maintainer"", ""owner"" }",daikon.inv.unary.string.OneOfString,(return.subgroup_creation_level),/groups/{id}/descendant_groups&/groups/{id}/descendant_groups&get&200():::EXIT,1.0
get+groups_{id}_descendant_groups,two_factor_grace_period,return.two_factor_grace_period >= 0,daikon.inv.unary.scalar.LowerBound,(return.two_factor_grace_period),/groups/{id}/descendant_groups&/groups/{id}/descendant_groups&get&200():::EXIT,1.0
get+groups_{id}_descendant_groups,visibility,"return.visibility one of { ""internal"", ""private"" }",daikon.inv.unary.string.OneOfString,(return.visibility),/groups/{id}/descendant_groups&/groups/{id}/descendant_groups&get&200():::EXIT,1.0
get+groups_{id}_hooks,created_at,"LENGTH(return.created_at)==24
return.created_at is Timestamp. Format: YYYY-MM-DDTHH:MM:SS.mmZ (Miliseconds are optional)","daikon.inv.unary.string.FixedLengthString
daikon.inv.unary.string.dates.IsTimestampYYYYMMHHThhmmssmm","(return.created_at)
(return.created_at)","/groups/{id}/hooks&/groups/{id}/hooks&get&200():::EXIT
/groups/{id}/hooks&/groups/{id}/hooks&get&200():::EXIT",1.0
get+groups_{id}_hooks,group_id,input.id == return.group_id,daikon.inv.binary.twoScalar.IntEqual,"(input.id, return.group_id)",/groups/{id}/hooks&/groups/{id}/hooks&get&200():::EXIT,1.0
get+groups_{id}_hooks_{hook_id},created_at,"LENGTH(return.created_at)==24
return.created_at is Timestamp. Format: YYYY-MM-DDTHH:MM:SS.mmZ (Miliseconds are optional)","daikon.inv.unary.string.FixedLengthString
daikon.inv.unary.string.dates.IsTimestampYYYYMMHHThhmmssmm","(return.created_at)
(return.created_at)","/groups/{id}/hooks/{hook_id}&/groups/{id}/hooks/{hook_id}&get&200():::EXIT
/groups/{id}/hooks/{hook_id}&/groups/{id}/hooks/{hook_id}&get&200():::EXIT",1.0
get+groups_{id}_hooks_{hook_id},group_id,input.id == return.group_id,daikon.inv.binary.twoScalar.IntEqual,"(input.id, return.group_id)",/groups/{id}/hooks/{hook_id}&/groups/{id}/hooks/{hook_id}&get&200():::EXIT,1.0
get+groups_{id}_hooks_{hook_id},id,input.hook_id == return.id,daikon.inv.binary.twoScalar.IntEqual,"(input.hook_id, return.id)",/groups/{id}/hooks/{hook_id}&/groups/{id}/hooks/{hook_id}&get&200():::EXIT,1.0
get+groups_{id}_projects,_links.self,"return._links.self is a substring of return._links.issues
return._links.self is a substring of return._links.merge_requests
return._links.self is a substring of return._links.repo_branches
return._links.self is a substring of return._links.labels
return._links.self is a substring of return._links.events
return._links.self is a substring of return._links.members","daikon.inv.binary.twoString.StdString$SubString
daikon.inv.binary.twoString.StdString$SubString
daikon.inv.binary.twoString.StdString$SubString
daikon.inv.binary.twoString.StdString$SubString
daikon.inv.binary.twoString.StdString$SubString
daikon.inv.binary.twoString.StdString$SubString","(return._links.self, return._links.issues)
(return._links.self, return._links.merge_requests)
(return._links.self, return._links.repo_branches)
(return._links.self, return._links.labels)
(return._links.self, return._links.events)
(return._links.self, return._links.members)","/groups/{id}/projects&/groups/{id}/projects&get&200():::EXIT
/groups/{id}/projects&/groups/{id}/projects&get&200():::EXIT
/groups/{id}/projects&/groups/{id}/projects&get&200():::EXIT
/groups/{id}/projects&/groups/{id}/projects&get&200():::EXIT
/groups/{id}/projects&/groups/{id}/projects&get&200():::EXIT
/groups/{id}/projects&/groups/{id}/projects&get&200():::EXIT",1.0
get+groups_{id}_projects,archived,input.archived == return.archived,daikon.inv.binary.twoScalar.IntEqual,"(input.archived, return.archived)",/groups/{id}/projects&/groups/{id}/projects&get&200():::EXIT,1.0
get+groups_{id}_projects,created_at,"LENGTH(return.created_at)==24
return.created_at is Timestamp. Format: YYYY-MM-DDTHH:MM:SS.mmZ (Miliseconds are optional)","daikon.inv.unary.string.FixedLengthString
daikon.inv.unary.string.dates.IsTimestampYYYYMMHHThhmmssmm","(return.created_at)
(return.created_at)","/groups/{id}/projects&/groups/{id}/projects&get&200():::EXIT
/groups/{id}/projects&/groups/{id}/projects&get&200():::EXIT",1.0
get+groups_{id}_projects,creator_id,"return.creator_id >= 1
input.per_page > return.creator_id
return.creator_id <= return.namespace.id
return.creator_id >= size(return.shared_with_groups[])","daikon.inv.unary.scalar.LowerBound
daikon.inv.binary.twoScalar.IntGreaterThan
daikon.inv.binary.twoScalar.IntLessEqual
daikon.inv.binary.twoScalar.IntGreaterEqual","(return.creator_id)
(input.per_page, return.creator_id)
(return.creator_id, return.namespace.id)
(return.creator_id, size(return.shared_with_groups[..]))","/groups/{id}/projects&/groups/{id}/projects&get&200():::EXIT
/groups/{id}/projects&/groups/{id}/projects&get&200():::EXIT
/groups/{id}/projects&/groups/{id}/projects&get&200():::EXIT
/groups/{id}/projects&/groups/{id}/projects&get&200():::EXIT",1.0
get+groups_{id}_projects,default_branch,return.default_branch is a substring of return.readme_url,daikon.inv.binary.twoString.StdString$SubString,"(return.default_branch, return.readme_url)",/groups/{id}/projects&/groups/{id}/projects&get&200():::EXIT,1.0
get+groups_{id}_projects,forks_count,return.forks_count >= 0,daikon.inv.unary.scalar.LowerBound,(return.forks_count),/groups/{id}/projects&/groups/{id}/projects&get&200():::EXIT,1.0
get+groups_{id}_projects,import_status,"return.import_status one of { ""finished"", ""none"" }",daikon.inv.unary.string.OneOfString,(return.import_status),/groups/{id}/projects&/groups/{id}/projects&get&200():::EXIT,1.0
get+groups_{id}_projects,last_activity_at,"LENGTH(return.last_activity_at)==24
return.last_activity_at is Timestamp. Format: YYYY-MM-DDTHH:MM:SS.mmZ (Miliseconds are optional)","daikon.inv.unary.string.FixedLengthString
daikon.inv.unary.string.dates.IsTimestampYYYYMMHHThhmmssmm","(return.last_activity_at)
(return.last_activity_at)","/groups/{id}/projects&/groups/{id}/projects&get&200():::EXIT
/groups/{id}/projects&/groups/{id}/projects&get&200():::EXIT",1.0
get+groups_{id}_projects,merge_method,"return.merge_method one of { ""ff"", ""merge"", ""rebase_merge"" }",daikon.inv.unary.string.OneOfString,(return.merge_method),/groups/{id}/projects&/groups/{id}/projects&get&200():::EXIT,1.0
get+groups_{id}_projects,name_with_namespace,"return.name is a substring of return.name_with_namespace
return.namespace.name is a substring of return.name_with_namespace","daikon.inv.binary.twoString.StdString$SubString
daikon.inv.binary.twoString.StdString$SubString","(return.name, return.name_with_namespace)
(return.name_with_namespace, return.namespace.name)","/groups/{id}/projects&/groups/{id}/projects&get&200():::EXIT
/groups/{id}/projects&/groups/{id}/projects&get&200():::EXIT",1.0
get+groups_{id}_projects,namespace.id,return.namespace.id >= size(return.shared_with_groups[]),daikon.inv.binary.twoScalar.IntGreaterEqual,"(return.namespace.id, size(return.shared_with_groups[..]))",/groups/{id}/projects&/groups/{id}/projects&get&200():::EXIT,1.0
get+groups_{id}_projects,namespace.kind,"return.namespace.kind one of { ""group"", ""user"" }",daikon.inv.unary.string.OneOfString,(return.namespace.kind),/groups/{id}/projects&/groups/{id}/projects&get&200():::EXIT,1.0
get+groups_{id}_projects,namespace.path,return.namespace.path is a substring of return.namespace.full_path,daikon.inv.binary.twoString.StdString$SubString,"(return.namespace.path, return.namespace.full_path)",/groups/{id}/projects&/groups/{id}/projects&get&200():::EXIT,1.0
get+groups_{id}_projects,open_issues_count,"return.open_issues_count == 0
return.open_issues_count <= return.forks_count
return.open_issues_count <= return.star_count
return.open_issues_count <= size(return.shared_with_groups[])","daikon.inv.unary.scalar.OneOfScalar
daikon.inv.binary.twoScalar.IntLessEqual
daikon.inv.binary.twoScalar.IntLessEqual
daikon.inv.binary.twoScalar.IntLessEqual","(return.open_issues_count)
(return.open_issues_count, return.forks_count)
(return.open_issues_count, return.star_count)
(return.open_issues_count, size(return.shared_with_groups[..]))","/groups/{id}/projects&/groups/{id}/projects&get&200():::EXIT
/groups/{id}/projects&/groups/{id}/projects&get&200():::EXIT
/groups/{id}/projects&/groups/{id}/projects&get&200():::EXIT
/groups/{id}/projects&/groups/{id}/projects&get&200():::EXIT",1.0
get+groups_{id}_projects,path_with_namespace,"return.path_with_namespace is a substring of return.ssh_url_to_repo
return.path_with_namespace is a substring of return.web_url
return.path is a substring of return.path_with_namespace
return.namespace.full_path is a substring of return.path_with_namespace","daikon.inv.binary.twoString.StdString$SubString
daikon.inv.binary.twoString.StdString$SubString
daikon.inv.binary.twoString.StdString$SubString
daikon.inv.binary.twoString.StdString$SubString","(return.ssh_url_to_repo, return.path_with_namespace)
(return.web_url, return.path_with_namespace)
(return.path, return.path_with_namespace)
(return.path_with_namespace, return.namespace.full_path)","/groups/{id}/projects&/groups/{id}/projects&get&200():::EXIT
/groups/{id}/projects&/groups/{id}/projects&get&200():::EXIT
/groups/{id}/projects&/groups/{id}/projects&get&200():::EXIT
/groups/{id}/projects&/groups/{id}/projects&get&200():::EXIT",1.0
get+groups_{id}_projects,resolve_outdated_diff_discussions,input.simple == return.resolve_outdated_diff_discussions,daikon.inv.binary.twoScalar.IntEqual,"(input.simple, return.resolve_outdated_diff_discussions)",/groups/{id}/projects&/groups/{id}/projects&get&200():::EXIT,1.0
get+groups_{id}_projects,shared_with_groups,"size(return.shared_with_groups[]) one of { 0, 1 }",daikon.inv.unary.scalar.OneOfScalar,(size(return.shared_with_groups[..])),/groups/{id}/projects&/groups/{id}/projects&get&200():::EXIT,1.0
get+groups_{id}_projects,star_count,return.star_count >= 0,daikon.inv.unary.scalar.LowerBound,(return.star_count),/groups/{id}/projects&/groups/{id}/projects&get&200():::EXIT,1.0
get+groups_{id}_projects,tag_list,"size(return.tag_list[]) one of { 0, 1, 2 }
return.open_issues_count <= size(return.tag_list[])
return.creator_id >= size(return.tag_list[])
return.namespace.id >= size(return.tag_list[])","daikon.inv.unary.scalar.OneOfScalar
daikon.inv.binary.twoScalar.IntLessEqual
daikon.inv.binary.twoScalar.IntGreaterEqual
daikon.inv.binary.twoScalar.IntGreaterEqual","(size(return.tag_list[..]))
(return.open_issues_count, size(return.tag_list[..]))
(return.creator_id, size(return.tag_list[..]))
(return.namespace.id, size(return.tag_list[..]))","/groups/{id}/projects&/groups/{id}/projects&get&200():::EXIT
/groups/{id}/projects&/groups/{id}/projects&get&200():::EXIT
/groups/{id}/projects&/groups/{id}/projects&get&200():::EXIT
/groups/{id}/projects&/groups/{id}/projects&get&200():::EXIT",1.0
get+groups_{id}_projects,web_url,"return.web_url is a substring of return.http_url_to_repo
return.web_url is a substring of return.readme_url","daikon.inv.binary.twoString.StdString$SubString
daikon.inv.binary.twoString.StdString$SubString","(return.http_url_to_repo, return.web_url)
(return.web_url, return.readme_url)","/groups/{id}/projects&/groups/{id}/projects&get&200():::EXIT
/groups/{id}/projects&/groups/{id}/projects&get&200():::EXIT",1.0
get+groups_{id}_projects,wiki_enabled,return.wiki_enabled == return.allow_merge_on_skipped_pipeline,daikon.inv.binary.twoScalar.IntEqual,"(return.wiki_enabled, return.allow_merge_on_skipped_pipeline)",/groups/{id}/projects&/groups/{id}/projects&get&200():::EXIT,1.0
get+groups_{id}_projects_shared,_links.self,"return._links.self is a substring of return._links.issues
return._links.self is a substring of return._links.merge_requests
return._links.self is a substring of return._links.repo_branches
return._links.self is a substring of return._links.labels
return._links.self is a substring of return._links.events
return._links.self is a substring of return._links.members","daikon.inv.binary.twoString.StdString$SubString
daikon.inv.binary.twoString.StdString$SubString
daikon.inv.binary.twoString.StdString$SubString
daikon.inv.binary.twoString.StdString$SubString
daikon.inv.binary.twoString.StdString$SubString
daikon.inv.binary.twoString.StdString$SubString","(return._links.self, return._links.issues)
(return._links.self, return._links.merge_requests)
(return._links.self, return._links.repo_branches)
(return._links.self, return._links.labels)
(return._links.self, return._links.events)
(return._links.self, return._links.members)","/groups/{id}/projects/shared&/groups/{id}/projects/shared&get&200():::EXIT
/groups/{id}/projects/shared&/groups/{id}/projects/shared&get&200():::EXIT
/groups/{id}/projects/shared&/groups/{id}/projects/shared&get&200():::EXIT
/groups/{id}/projects/shared&/groups/{id}/projects/shared&get&200():::EXIT
/groups/{id}/projects/shared&/groups/{id}/projects/shared&get&200():::EXIT
/groups/{id}/projects/shared&/groups/{id}/projects/shared&get&200():::EXIT",1.0
get+groups_{id}_projects_shared,archived,input.archived == return.archived,daikon.inv.binary.twoScalar.IntEqual,"(input.archived, return.archived)",/groups/{id}/projects/shared&/groups/{id}/projects/shared&get&200():::EXIT,1.0
get+groups_{id}_projects_shared,array,input.per_page >= size(return.array[]),daikon.inv.binary.twoScalar.IntGreaterEqual,"(input.per_page, size(return.array[..]))",/groups/{id}/projects/shared&/groups/{id}/projects/shared&get&200%array():::EXIT,1.0
get+groups_{id}_projects_shared,auto_cancel_pending_pipelines,"return.auto_cancel_pending_pipelines one of { ""disabled"", ""enabled"" }",daikon.inv.unary.string.OneOfString,(return.auto_cancel_pending_pipelines),/groups/{id}/projects/shared&/groups/{id}/projects/shared&get&200():::EXIT,1.0
get+groups_{id}_projects_shared,builds_access_level,"return.builds_access_level one of { ""disabled"", ""enabled"" }",daikon.inv.unary.string.OneOfString,(return.builds_access_level),/groups/{id}/projects/shared&/groups/{id}/projects/shared&get&200():::EXIT,1.0
get+groups_{id}_projects_shared,container_expiration_policy.next_run_at,"LENGTH(return.container_expiration_policy.next_run_at)==24
return.container_expiration_policy.next_run_at is Timestamp. Format: YYYY-MM-DDTHH:MM:SS.mmZ (Miliseconds are optional)","daikon.inv.unary.string.FixedLengthString
daikon.inv.unary.string.dates.IsTimestampYYYYMMHHThhmmssmm","(return.container_expiration_policy.next_run_at)
(return.container_expiration_policy.next_run_at)","/groups/{id}/projects/shared&/groups/{id}/projects/shared&get&200():::EXIT
/groups/{id}/projects/shared&/groups/{id}/projects/shared&get&200():::EXIT",1.0
get+groups_{id}_projects_shared,created_at,"LENGTH(return.created_at)==24
return.created_at is Timestamp. Format: YYYY-MM-DDTHH:MM:SS.mmZ (Miliseconds are optional)","daikon.inv.unary.string.FixedLengthString
daikon.inv.unary.string.dates.IsTimestampYYYYMMHHThhmmssmm","(return.created_at)
(return.created_at)","/groups/{id}/projects/shared&/groups/{id}/projects/shared&get&200():::EXIT
/groups/{id}/projects/shared&/groups/{id}/projects/shared&get&200():::EXIT",1.0
get+groups_{id}_projects_shared,default_branch,"return.default_branch one of { ""develop"", ""main"", ""master"" }
return.default_branch is a substring of return.readme_url","daikon.inv.unary.string.OneOfString
daikon.inv.binary.twoString.StdString$SubString","(return.default_branch)
(return.default_branch, return.readme_url)","/groups/{id}/projects/shared&/groups/{id}/projects/shared&get&200():::EXIT
/groups/{id}/projects/shared&/groups/{id}/projects/shared&get&200():::EXIT",1.0
get+groups_{id}_projects_shared,forks_count,"return.forks_count >= 0
input.per_page > return.forks_count
return.forks_count >= return.open_issues_count","daikon.inv.unary.scalar.LowerBound
daikon.inv.binary.twoScalar.IntGreaterThan
daikon.inv.binary.twoScalar.IntGreaterEqual","(return.forks_count)
(input.per_page, return.forks_count)
(return.forks_count, return.open_issues_count)","/groups/{id}/projects/shared&/groups/{id}/projects/shared&get&200():::EXIT
/groups/{id}/projects/shared&/groups/{id}/projects/shared&get&200():::EXIT
/groups/{id}/projects/shared&/groups/{id}/projects/shared&get&200():::EXIT",1.0
get+groups_{id}_projects_shared,import_status,"return.import_status one of { ""finished"", ""none"" }",daikon.inv.unary.string.OneOfString,(return.import_status),/groups/{id}/projects/shared&/groups/{id}/projects/shared&get&200():::EXIT,1.0
get+groups_{id}_projects_shared,issues_access_level,"return.issues_access_level one of { ""enabled"", ""private"" }
LENGTH(return.issues_access_level)==7","daikon.inv.unary.string.OneOfString
daikon.inv.unary.string.FixedLengthString","(return.issues_access_level)
(return.issues_access_level)","/groups/{id}/projects/shared&/groups/{id}/projects/shared&get&200():::EXIT
/groups/{id}/projects/shared&/groups/{id}/projects/shared&get&200():::EXIT",1.0
get+groups_{id}_projects_shared,last_activity_at,"LENGTH(return.last_activity_at)==24
return.last_activity_at is Timestamp. Format: YYYY-MM-DDTHH:MM:SS.mmZ (Miliseconds are optional)","daikon.inv.unary.string.FixedLengthString
daikon.inv.unary.string.dates.IsTimestampYYYYMMHHThhmmssmm","(return.last_activity_at)
(return.last_activity_at)","/groups/{id}/projects/shared&/groups/{id}/projects/shared&get&200():::EXIT
/groups/{id}/projects/shared&/groups/{id}/projects/shared&get&200():::EXIT",1.0
get+groups_{id}_projects_shared,merge_requests_access_level,"return.merge_requests_access_level one of { ""disabled"", ""enabled"", ""private"" }",daikon.inv.unary.string.OneOfString,(return.merge_requests_access_level),/groups/{id}/projects/shared&/groups/{id}/projects/shared&get&200():::EXIT,1.0
get+groups_{id}_projects_shared,name_with_namespace,"return.name is a substring of return.name_with_namespace
return.namespace.name is a substring of return.name_with_namespace","daikon.inv.binary.twoString.StdString$SubString
daikon.inv.binary.twoString.StdString$SubString","(return.name, return.name_with_namespace)
(return.name_with_namespace, return.namespace.name)","/groups/{id}/projects/shared&/groups/{id}/projects/shared&get&200():::EXIT
/groups/{id}/projects/shared&/groups/{id}/projects/shared&get&200():::EXIT",1.0
get+groups_{id}_projects_shared,namespace.id,"return.namespace.id >= 1
return.namespace.id >= size(return.shared_with_groups[])","daikon.inv.unary.scalar.LowerBound
daikon.inv.binary.twoScalar.IntGreaterEqual","(return.namespace.id)
(return.namespace.id, size(return.shared_with_groups[..]))","/groups/{id}/projects/shared&/groups/{id}/projects/shared&get&200():::EXIT
/groups/{id}/projects/shared&/groups/{id}/projects/shared&get&200():::EXIT",1.0
get+groups_{id}_projects_shared,namespace.kind,"return.namespace.kind one of { ""group"", ""user"" }",daikon.inv.unary.string.OneOfString,(return.namespace.kind),/groups/{id}/projects/shared&/groups/{id}/projects/shared&get&200():::EXIT,1.0
get+groups_{id}_projects_shared,namespace.path,return.namespace.path is a substring of return.namespace.full_path,daikon.inv.binary.twoString.StdString$SubString,"(return.namespace.path, return.namespace.full_path)",/groups/{id}/projects/shared&/groups/{id}/projects/shared&get&200():::EXIT,1.0
get+groups_{id}_projects_shared,open_issues_count,"return.open_issues_count == 0
return.open_issues_count <= return.star_count","daikon.inv.unary.scalar.OneOfScalar
daikon.inv.binary.twoScalar.IntLessEqual","(return.open_issues_count)
(return.open_issues_count, return.star_count)","/groups/{id}/projects/shared&/groups/{id}/projects/shared&get&200():::EXIT
/groups/{id}/projects/shared&/groups/{id}/projects/shared&get&200():::EXIT",1.0
get+groups_{id}_projects_shared,path_with_namespace,"return.namespace.full_path is a substring of return.path_with_namespace
return.path is a substring of return.path_with_namespace
return.path_with_namespace is a substring of return.ssh_url_to_repo
return.path_with_namespace is a substring of return.web_url","daikon.inv.binary.twoString.StdString$SubString
daikon.inv.binary.twoString.StdString$SubString
daikon.inv.binary.twoString.StdString$SubString
daikon.inv.binary.twoString.StdString$SubString","(return.namespace.full_path, return.path_with_namespace)
(return.path, return.path_with_namespace)
(return.path_with_namespace, return.ssh_url_to_repo)
(return.path_with_namespace, return.web_url)","/groups/{id}/projects/shared&/groups/{id}/projects/shared&get&200():::EXIT
/groups/{id}/projects/shared&/groups/{id}/projects/shared&get&200():::EXIT
/groups/{id}/projects/shared&/groups/{id}/projects/shared&get&200():::EXIT
/groups/{id}/projects/shared&/groups/{id}/projects/shared&get&200():::EXIT",1.0
get+groups_{id}_projects_shared,repository_access_level,"return.repository_access_level one of { ""enabled"", ""private"" }
LENGTH(return.repository_access_level)==7","daikon.inv.unary.string.OneOfString
daikon.inv.unary.string.FixedLengthString","(return.repository_access_level)
(return.repository_access_level)","/groups/{id}/projects/shared&/groups/{id}/projects/shared&get&200():::EXIT
/groups/{id}/projects/shared&/groups/{id}/projects/shared&get&200():::EXIT",1.0
get+groups_{id}_projects_shared,repository_storage,"return.repository_storage == ""default""
LENGTH(return.repository_storage)==7","daikon.inv.unary.string.OneOfString
daikon.inv.unary.string.FixedLengthString","(return.repository_storage)
(return.repository_storage)","/groups/{id}/projects/shared&/groups/{id}/projects/shared&get&200():::EXIT
/groups/{id}/projects/shared&/groups/{id}/projects/shared&get&200():::EXIT",1.0
get+groups_{id}_projects_shared,snippets_access_level,"return.snippets_access_level one of { ""disabled"", ""enabled"", ""private"" }",daikon.inv.unary.string.OneOfString,(return.snippets_access_level),/groups/{id}/projects/shared&/groups/{id}/projects/shared&get&200():::EXIT,1.0
get+groups_{id}_projects_shared,star_count,"return.star_count one of { 0, 1, 2 }
input.per_page > return.star_count","daikon.inv.unary.scalar.OneOfScalar
daikon.inv.binary.twoScalar.IntGreaterThan","(return.star_count)
(input.per_page, return.star_count)","/groups/{id}/projects/shared&/groups/{id}/projects/shared&get&200():::EXIT
/groups/{id}/projects/shared&/groups/{id}/projects/shared&get&200():::EXIT",1.0
get+groups_{id}_projects_shared,visibility,"input.visibility == return.visibility
return.visibility one of { ""private"", ""public"" }","daikon.inv.binary.twoString.StringEqual
daikon.inv.unary.string.OneOfString","(input.visibility, return.visibility)
(return.visibility)","/groups/{id}/projects/shared&/groups/{id}/projects/shared&get&200():::EXIT
/groups/{id}/projects/shared&/groups/{id}/projects/shared&get&200():::EXIT",1.0
get+groups_{id}_projects_shared,web_url,"return.web_url is a substring of return.http_url_to_repo
return.web_url is a substring of return.readme_url","daikon.inv.binary.twoString.StdString$SubString
daikon.inv.binary.twoString.StdString$SubString","(return.http_url_to_repo, return.web_url)
(return.readme_url, return.web_url)","/groups/{id}/projects/shared&/groups/{id}/projects/shared&get&200():::EXIT
/groups/{id}/projects/shared&/groups/{id}/projects/shared&get&200():::EXIT",1.0
get+groups_{id}_projects_shared,wiki_access_level,"return.wiki_access_level one of { ""disabled"", ""enabled"", ""private"" }",daikon.inv.unary.string.OneOfString,(return.wiki_access_level),/groups/{id}/projects/shared&/groups/{id}/projects/shared&get&200():::EXIT,1.0
get+groups_{id}_subgroups,auto_devops_enabled,"return.auto_devops_enabled one of { ""false"", ""true"" }",daikon.inv.unary.string.OneOfString,(return.auto_devops_enabled),/groups/{id}/subgroups&/groups/{id}/subgroups&get&200():::EXIT,1.0
get+groups_{id}_subgroups,created_at,"LENGTH(return.created_at)==24
return.created_at is Timestamp. Format: YYYY-MM-DDTHH:MM:SS.mmZ (Miliseconds are optional)","daikon.inv.unary.string.FixedLengthString
daikon.inv.unary.string.dates.IsTimestampYYYYMMHHThhmmssmm","(return.created_at)
(return.created_at)","/groups/{id}/subgroups&/groups/{id}/subgroups&get&200():::EXIT
/groups/{id}/subgroups&/groups/{id}/subgroups&get&200():::EXIT",1.0
get+groups_{id}_subgroups,default_branch_protection,"return.default_branch_protection one of { 0, 1, 2 }",daikon.inv.unary.scalar.OneOfScalar,(return.default_branch_protection),/groups/{id}/subgroups&/groups/{id}/subgroups&get&200():::EXIT,1.0
get+groups_{id}_subgroups,full_path,"return.path is a substring of return.full_path
return.full_path is a substring of return.web_url","daikon.inv.binary.twoString.StdString$SubString
daikon.inv.binary.twoString.StdString$SubString","(return.full_path, return.path)
(return.full_path, return.web_url)","/groups/{id}/subgroups&/groups/{id}/subgroups&get&200():::EXIT
/groups/{id}/subgroups&/groups/{id}/subgroups&get&200():::EXIT",1.0
get+groups_{id}_subgroups,id,input.id < return.id,daikon.inv.binary.twoScalar.IntLessThan,"(input.id, return.id)",/groups/{id}/subgroups&/groups/{id}/subgroups&get&200():::EXIT,1.0
get+groups_{id}_subgroups,input.skip_groups[statistics.job_artifacts_size],input.skip_groups[] elements == input.skip_groups[return.statistics.job_artifacts_size],daikon.inv.binary.sequenceScalar.SeqIntEqual,"(input.skip_groups[..], input.skip_groups[return.statistics.job_artifacts_size])",/groups/{id}/subgroups&/groups/{id}/subgroups&get&200():::EXIT,1.0
get+groups_{id}_subgroups,name,return.name is a substring of return.full_name,daikon.inv.binary.twoString.StdString$SubString,"(return.full_name, return.name)",/groups/{id}/subgroups&/groups/{id}/subgroups&get&200():::EXIT,1.0
get+groups_{id}_subgroups,project_creation_level,"return.project_creation_level one of { ""developer"", ""maintainer"", ""noone"" }",daikon.inv.unary.string.OneOfString,(return.project_creation_level),/groups/{id}/subgroups&/groups/{id}/subgroups&get&200():::EXIT,1.0
get+groups_{id}_subgroups,statistics.job_artifacts_size,"return.statistics.job_artifacts_size == return.statistics.lfs_objects_size
return.statistics.job_artifacts_size == return.statistics.packages_size
return.statistics.job_artifacts_size == return.statistics.snippets_size
return.statistics.job_artifacts_size == 0
return.default_branch_protection >= return.statistics.job_artifacts_size
return.statistics.job_artifacts_size <= return.statistics.repository_size
return.statistics.job_artifacts_size <= return.statistics.wiki_size
return.statistics.job_artifacts_size <= return.two_factor_grace_period","daikon.inv.binary.twoScalar.IntEqual
daikon.inv.binary.twoScalar.IntEqual
daikon.inv.binary.twoScalar.IntEqual
daikon.inv.unary.scalar.OneOfScalar
daikon.inv.binary.twoScalar.IntGreaterEqual
daikon.inv.binary.twoScalar.IntLessEqual
daikon.inv.binary.twoScalar.IntLessEqual
daikon.inv.binary.twoScalar.IntLessEqual","(return.statistics.job_artifacts_size, return.statistics.lfs_objects_size)
(return.statistics.job_artifacts_size, return.statistics.packages_size)
(return.statistics.job_artifacts_size, return.statistics.snippets_size)
(return.statistics.job_artifacts_size)
(return.default_branch_protection, return.statistics.job_artifacts_size)
(return.statistics.job_artifacts_size, return.statistics.repository_size)
(return.statistics.job_artifacts_size, return.statistics.wiki_size)
(return.statistics.job_artifacts_size, return.two_factor_grace_period)","/groups/{id}/subgroups&/groups/{id}/subgroups&get&200():::EXIT
/groups/{id}/subgroups&/groups/{id}/subgroups&get&200():::EXIT
/groups/{id}/subgroups&/groups/{id}/subgroups&get&200():::EXIT
/groups/{id}/subgroups&/groups/{id}/subgroups&get&200():::EXIT
/groups/{id}/subgroups&/groups/{id}/subgroups&get&200():::EXIT
/groups/{id}/subgroups&/groups/{id}/subgroups&get&200():::EXIT
/groups/{id}/subgroups&/groups/{id}/subgroups&get&200():::EXIT
/groups/{id}/subgroups&/groups/{id}/subgroups&get&200():::EXIT",1.0
get+groups_{id}_subgroups,statistics.repository_size,"return.statistics.repository_size >= 0
return.statistics.repository_size >= return.statistics.wiki_size","daikon.inv.unary.scalar.LowerBound
daikon.inv.binary.twoScalar.IntGreaterEqual","(return.statistics.repository_size)
(return.statistics.repository_size, return.statistics.wiki_size)","/groups/{id}/subgroups&/groups/{id}/subgroups&get&200():::EXIT
/groups/{id}/subgroups&/groups/{id}/subgroups&get&200():::EXIT",1.0
get+groups_{id}_subgroups,statistics.storage_size,"return.statistics.storage_size >= 0
return.statistics.job_artifacts_size <= return.statistics.storage_size
return.statistics.repository_size <= return.statistics.storage_size
return.statistics.storage_size >= return.statistics.wiki_size","daikon.inv.unary.scalar.LowerBound
daikon.inv.binary.twoScalar.IntLessEqual
daikon.inv.binary.twoScalar.IntLessEqual
daikon.inv.binary.twoScalar.IntGreaterEqual","(return.statistics.storage_size)
(return.statistics.job_artifacts_size, return.statistics.storage_size)
(return.statistics.repository_size, return.statistics.storage_size)
(return.statistics.storage_size, return.statistics.wiki_size)","/groups/{id}/subgroups&/groups/{id}/subgroups&get&200():::EXIT
/groups/{id}/subgroups&/groups/{id}/subgroups&get&200():::EXIT
/groups/{id}/subgroups&/groups/{id}/subgroups&get&200():::EXIT
/groups/{id}/subgroups&/groups/{id}/subgroups&get&200():::EXIT",1.0
get+groups_{id}_subgroups,statistics.wiki_size,return.statistics.wiki_size >= 0,daikon.inv.unary.scalar.LowerBound,(return.statistics.wiki_size),/groups/{id}/subgroups&/groups/{id}/subgroups&get&200():::EXIT,1.0
get+groups_{id}_subgroups,subgroup_creation_level,"return.subgroup_creation_level one of { ""maintainer"", ""owner"" }",daikon.inv.unary.string.OneOfString,(return.subgroup_creation_level),/groups/{id}/subgroups&/groups/{id}/subgroups&get&200():::EXIT,1.0
get+groups_{id}_subgroups,two_factor_grace_period,return.two_factor_grace_period >= 0,daikon.inv.unary.scalar.LowerBound,(return.two_factor_grace_period),/groups/{id}/subgroups&/groups/{id}/subgroups&get&200():::EXIT,1.0
post+groups,auto_devops_enabled,"return.auto_devops_enabled one of { ""false"", ""true"" }",daikon.inv.unary.string.OneOfString,(return.auto_devops_enabled),/groups&/groups&post&201():::EXIT,1.0
post+groups,created_at,"LENGTH(return.created_at)==24
return.created_at is Timestamp. Format: YYYY-MM-DDTHH:MM:SS.mmZ (Miliseconds are optional)","daikon.inv.unary.string.FixedLengthString
daikon.inv.unary.string.dates.IsTimestampYYYYMMHHThhmmssmm","(return.created_at)
(return.created_at)","/groups&/groups&post&201():::EXIT
/groups&/groups&post&201():::EXIT",1.0
post+groups,default_branch_protection,"return.default_branch_protection one of { 0, 1, 2 }",daikon.inv.unary.scalar.OneOfScalar,(return.default_branch_protection),/groups&/groups&post&201():::EXIT,1.0
post+groups,description,input.description == return.description,daikon.inv.binary.twoString.StringEqual,"(input.description, return.description)",/groups&/groups&post&201():::EXIT,1.0
post+groups,emails_disabled,"return.emails_disabled one of { ""false"", ""true"" }",daikon.inv.unary.string.OneOfString,(return.emails_disabled),/groups&/groups&post&201():::EXIT,1.0
post+groups,lfs_enabled,input.lfs_enabled == return.lfs_enabled,daikon.inv.binary.twoScalar.IntEqual,"(input.lfs_enabled, return.lfs_enabled)",/groups&/groups&post&201():::EXIT,1.0
post+groups,mentions_disabled,"return.mentions_disabled one of { ""false"", ""true"" }",daikon.inv.unary.string.OneOfString,(return.mentions_disabled),/groups&/groups&post&201():::EXIT,1.0
post+groups,name,input.name == return.name,daikon.inv.binary.twoString.StringEqual,"(input.name, return.name)",/groups&/groups&post&201():::EXIT,1.0
post+groups,path,input.path == return.path,daikon.inv.binary.twoString.StringEqual,"(input.path, return.path)",/groups&/groups&post&201():::EXIT,1.0
post+groups,project_creation_level,"input.project_creation_level == return.project_creation_level
return.project_creation_level one of { ""developer"", ""maintainer"", ""noone"" }","daikon.inv.binary.twoString.StringEqual
daikon.inv.unary.string.OneOfString","(input.project_creation_level, return.project_creation_level)
(return.project_creation_level)","/groups&/groups&post&201():::EXIT
/groups&/groups&post&201():::EXIT",1.0
post+groups,request_access_enabled,input.request_access_enabled == return.request_access_enabled,daikon.inv.binary.twoScalar.IntEqual,"(input.request_access_enabled, return.request_access_enabled)",/groups&/groups&post&201():::EXIT,1.0
post+groups,require_two_factor_authentication,input.require_two_factor_authentication == return.require_two_factor_authentication,daikon.inv.binary.twoScalar.IntEqual,"(input.require_two_factor_authentication, return.require_two_factor_authentication)",/groups&/groups&post&201():::EXIT,1.0
post+groups,share_with_group_lock,input.share_with_group_lock == return.share_with_group_lock,daikon.inv.binary.twoScalar.IntEqual,"(input.share_with_group_lock, return.share_with_group_lock)",/groups&/groups&post&201():::EXIT,1.0
post+groups,statistics,return.statistics == null,daikon.inv.unary.scalar.OneOfScalar,(return.statistics),/groups&/groups&post&201():::EXIT,1.0
post+groups,subgroup_creation_level,"input.subgroup_creation_level == return.subgroup_creation_level
return.subgroup_creation_level one of { ""maintainer"", ""owner"" }","daikon.inv.binary.twoString.StringEqual
daikon.inv.unary.string.OneOfString","(input.subgroup_creation_level, return.subgroup_creation_level)
(return.subgroup_creation_level)","/groups&/groups&post&201():::EXIT
/groups&/groups&post&201():::EXIT",1.0
post+groups,two_factor_grace_period,input.two_factor_grace_period == return.two_factor_grace_period,daikon.inv.binary.twoScalar.IntEqual,"(input.two_factor_grace_period, return.two_factor_grace_period)",/groups&/groups&post&201():::EXIT,1.0
post+groups,visibility,"input.visibility == return.visibility
return.visibility one of { ""internal"", ""private"", ""public"" }","daikon.inv.binary.twoString.StringEqual
daikon.inv.unary.string.OneOfString","(input.visibility, return.visibility)
(return.visibility)","/groups&/groups&post&201():::EXIT
/groups&/groups&post&201():::EXIT",1.0
post+groups,web_url,input.path is a substring of return.web_url,daikon.inv.binary.twoString.StdString$SubString,"(input.path, return.web_url)",/groups&/groups&post&201():::EXIT,1.0
post+groups_{id}_hooks,confidential_issues_events,input.confidential_issues_events == return.confidential_issues_events,daikon.inv.binary.twoScalar.IntEqual,"(input.confidential_issues_events, return.confidential_issues_events)",/groups/{id}/hooks&/groups/{id}/hooks&post&201():::EXIT,1.0
post+groups_{id}_hooks,confidential_note_events,input.confidential_note_events == return.confidential_note_events,daikon.inv.binary.twoScalar.IntEqual,"(input.confidential_note_events, return.confidential_note_events)",/groups/{id}/hooks&/groups/{id}/hooks&post&201():::EXIT,1.0
post+groups_{id}_hooks,created_at,"LENGTH(return.created_at)==24
return.created_at is Timestamp. Format: YYYY-MM-DDTHH:MM:SS.mmZ (Miliseconds are optional)","daikon.inv.unary.string.FixedLengthString
daikon.inv.unary.string.dates.IsTimestampYYYYMMHHThhmmssmm","(return.created_at)
(return.created_at)","/groups/{id}/hooks&/groups/{id}/hooks&post&201():::EXIT
/groups/{id}/hooks&/groups/{id}/hooks&post&201():::EXIT",1.0
post+groups_{id}_hooks,deployment_events,input.deployment_events == return.deployment_events,daikon.inv.binary.twoScalar.IntEqual,"(input.deployment_events, return.deployment_events)",/groups/{id}/hooks&/groups/{id}/hooks&post&201():::EXIT,1.0
post+groups_{id}_hooks,enable_ssl_verification,input.enable_ssl_verification == return.enable_ssl_verification,daikon.inv.binary.twoScalar.IntEqual,"(input.enable_ssl_verification, return.enable_ssl_verification)",/groups/{id}/hooks&/groups/{id}/hooks&post&201():::EXIT,1.0
post+groups_{id}_hooks,group_id,input.id == return.group_id,daikon.inv.binary.twoScalar.IntEqual,"(input.id, return.group_id)",/groups/{id}/hooks&/groups/{id}/hooks&post&201():::EXIT,1.0
post+groups_{id}_hooks,issues_events,input.issues_events == return.issues_events,daikon.inv.binary.twoScalar.IntEqual,"(input.issues_events, return.issues_events)",/groups/{id}/hooks&/groups/{id}/hooks&post&201():::EXIT,1.0
post+groups_{id}_hooks,job_events,input.job_events == return.job_events,daikon.inv.binary.twoScalar.IntEqual,"(input.job_events, return.job_events)",/groups/{id}/hooks&/groups/{id}/hooks&post&201():::EXIT,1.0
post+groups_{id}_hooks,merge_requests_events,input.merge_requests_events == return.merge_requests_events,daikon.inv.binary.twoScalar.IntEqual,"(input.merge_requests_events, return.merge_requests_events)",/groups/{id}/hooks&/groups/{id}/hooks&post&201():::EXIT,1.0
post+groups_{id}_hooks,note_events,input.note_events == return.note_events,daikon.inv.binary.twoScalar.IntEqual,"(input.note_events, return.note_events)",/groups/{id}/hooks&/groups/{id}/hooks&post&201():::EXIT,1.0
post+groups_{id}_hooks,pipeline_events,input.pipeline_events == return.pipeline_events,daikon.inv.binary.twoScalar.IntEqual,"(input.pipeline_events, return.pipeline_events)",/groups/{id}/hooks&/groups/{id}/hooks&post&201():::EXIT,1.0
post+groups_{id}_hooks,push_events,input.push_events == return.push_events,daikon.inv.binary.twoScalar.IntEqual,"(input.push_events, return.push_events)",/groups/{id}/hooks&/groups/{id}/hooks&post&201():::EXIT,1.0
post+groups_{id}_hooks,releases_events,input.releases_events == return.releases_events,daikon.inv.binary.twoScalar.IntEqual,"(input.releases_events, return.releases_events)",/groups/{id}/hooks&/groups/{id}/hooks&post&201():::EXIT,1.0
post+groups_{id}_hooks,tag_push_events,input.tag_push_events == return.tag_push_events,daikon.inv.binary.twoScalar.IntEqual,"(input.tag_push_events, return.tag_push_events)",/groups/{id}/hooks&/groups/{id}/hooks&post&201():::EXIT,1.0
post+groups_{id}_hooks,url,input.url == return.url,daikon.inv.binary.twoString.StringEqual,"(input.url, return.url)",/groups/{id}/hooks&/groups/{id}/hooks&post&201():::EXIT,1.0
post+groups_{id}_hooks,wiki_page_events,input.wiki_page_events == return.wiki_page_events,daikon.inv.binary.twoScalar.IntEqual,"(input.wiki_page_events, return.wiki_page_events)",/groups/{id}/hooks&/groups/{id}/hooks&post&201():::EXIT,1.0
post+groups_{id}_projects_{project_id},_links,return._links == null,daikon.inv.unary.scalar.OneOfScalar,(return._links),/groups/{id}/projects/{project_id}&/groups/{id}/projects/{project_id}&post&201():::EXIT,1.0
post+groups_{id}_projects_{project_id},container_expiration_policy,return.container_expiration_policy == null,daikon.inv.unary.scalar.OneOfScalar,(return.container_expiration_policy),/groups/{id}/projects/{project_id}&/groups/{id}/projects/{project_id}&post&201():::EXIT,1.0
post+groups_{id}_projects_{project_id},created_at,"LENGTH(return.created_at)==24
return.created_at is Timestamp. Format: YYYY-MM-DDTHH:MM:SS.mmZ (Miliseconds are optional)","daikon.inv.unary.string.FixedLengthString
daikon.inv.unary.string.dates.IsTimestampYYYYMMHHThhmmssmm","(return.created_at)
(return.created_at)","/groups/{id}/projects/{project_id}&/groups/{id}/projects/{project_id}&post&201():::EXIT
/groups/{id}/projects/{project_id}&/groups/{id}/projects/{project_id}&post&201():::EXIT",1.0
post+groups_{id}_projects_{project_id},emails_disabled,"return.emails_disabled one of { ""false"", ""true"" }",daikon.inv.unary.string.OneOfString,(return.emails_disabled),/groups/{id}/projects/{project_id}&/groups/{id}/projects/{project_id}&post&201():::EXIT,1.0
post+groups_{id}_projects_{project_id},id,input.id == return.id,daikon.inv.binary.twoScalar.IntEqual,"(input.id, return.id)",/groups/{id}/projects/{project_id}&/groups/{id}/projects/{project_id}&post&201():::EXIT,1.0
post+groups_{id}_projects_{project_id},namespace,return.namespace == null,daikon.inv.unary.scalar.OneOfScalar,(return.namespace),/groups/{id}/projects/{project_id}&/groups/{id}/projects/{project_id}&post&201():::EXIT,1.0
post+groups_{id}_projects_{project_id},tag_list,return.tag_list == null,daikon.inv.unary.scalar.OneOfScalar,(return.tag_list),/groups/{id}/projects/{project_id}&/groups/{id}/projects/{project_id}&post&201():::EXIT,1.0
post+groups_{id}_projects_{project_id},visibility,"return.visibility one of { ""internal"", ""private"", ""public"" }",daikon.inv.unary.string.OneOfString,(return.visibility),/groups/{id}/projects/{project_id}&/groups/{id}/projects/{project_id}&post&201():::EXIT,1.0
post+groups_{id}_projects_{project_id},web_url,return.path is a substring of return.web_url,daikon.inv.binary.twoString.StdString$SubString,"(return.path, return.web_url)",/groups/{id}/projects/{project_id}&/groups/{id}/projects/{project_id}&post&201():::EXIT,1.0
post+groups_{id}_share,created_at,"LENGTH(return.created_at)==24
return.created_at is Timestamp. Format: YYYY-MM-DDTHH:MM:SS.mmZ (Miliseconds are optional)","daikon.inv.unary.string.FixedLengthString
daikon.inv.unary.string.dates.IsTimestampYYYYMMHHThhmmssmm","(return.created_at)
(return.created_at)","/groups/{id}/share&/groups/{id}/share&post&201():::EXIT
/groups/{id}/share&/groups/{id}/share&post&201():::EXIT",1.0
post+groups_{id}_share,full_path,"return.path is a substring of return.full_path
return.full_path is a substring of return.web_url","daikon.inv.binary.twoString.StdString$SubString
daikon.inv.binary.twoString.StdString$SubString","(return.full_path, return.path)
(return.full_path, return.web_url)","/groups/{id}/share&/groups/{id}/share&post&201():::EXIT
/groups/{id}/share&/groups/{id}/share&post&201():::EXIT",1.0
post+groups_{id}_share,id,input.id == return.id,daikon.inv.binary.twoScalar.IntEqual,"(input.id, return.id)",/groups/{id}/share&/groups/{id}/share&post&201():::EXIT,1.0
post+groups_{id}_share,name,return.name is a substring of return.full_name,daikon.inv.binary.twoString.StdString$SubString,"(return.full_name, return.name)",/groups/{id}/share&/groups/{id}/share&post&201():::EXIT,1.0
post+groups_{id}_share,projects,size(return.projects[]) >= size(return.shared_projects[]),daikon.inv.binary.twoScalar.IntGreaterEqual,"(size(return.projects[..]), size(return.shared_projects[..]))",/groups/{id}/share&/groups/{id}/share&post&201():::EXIT,1.0
post+groups_{id}_share,projects._links.self,"return._links.self is a substring of return._links.issues
return._links.self is a substring of return._links.merge_requests
return._links.self is a substring of return._links.repo_branches
return._links.self is a substring of return._links.labels
return._links.self is a substring of return._links.events
return._links.self is a substring of return._links.members","daikon.inv.binary.twoString.StdString$SubString
daikon.inv.binary.twoString.StdString$SubString
daikon.inv.binary.twoString.StdString$SubString
daikon.inv.binary.twoString.StdString$SubString
daikon.inv.binary.twoString.StdString$SubString
daikon.inv.binary.twoString.StdString$SubString","(return._links.self, return._links.issues)
(return._links.self, return._links.merge_requests)
(return._links.self, return._links.repo_branches)
(return._links.self, return._links.labels)
(return._links.self, return._links.events)
(return._links.self, return._links.members)","/groups/{id}/share&/groups/{id}/share&post&201&projects():::EXIT
/groups/{id}/share&/groups/{id}/share&post&201&projects():::EXIT
/groups/{id}/share&/groups/{id}/share&post&201&projects():::EXIT
/groups/{id}/share&/groups/{id}/share&post&201&projects():::EXIT
/groups/{id}/share&/groups/{id}/share&post&201&projects():::EXIT
/groups/{id}/share&/groups/{id}/share&post&201&projects():::EXIT",1.0
post+groups_{id}_share,projects.created_at,"LENGTH(return.created_at)==24
return.created_at is Timestamp. Format: YYYY-MM-DDTHH:MM:SS.mmZ (Miliseconds are optional)","daikon.inv.unary.string.FixedLengthString
daikon.inv.unary.string.dates.IsTimestampYYYYMMHHThhmmssmm","(return.created_at)
(return.created_at)","/groups/{id}/share&/groups/{id}/share&post&201&projects():::EXIT
/groups/{id}/share&/groups/{id}/share&post&201&projects():::EXIT",1.0
post+groups_{id}_share,projects.creator_id,"return.creator_id >= 1
return.creator_id >= size(return.shared_with_groups[])","daikon.inv.unary.scalar.LowerBound
daikon.inv.binary.twoScalar.IntGreaterEqual","(return.creator_id)
(return.creator_id, size(return.shared_with_groups[..]))","/groups/{id}/share&/groups/{id}/share&post&201&projects():::EXIT
/groups/{id}/share&/groups/{id}/share&post&201&projects():::EXIT",1.0
post+groups_{id}_share,projects.default_branch,return.default_branch is a substring of return.readme_url,daikon.inv.binary.twoString.StdString$SubString,"(return.default_branch, return.readme_url)",/groups/{id}/share&/groups/{id}/share&post&201&projects():::EXIT,1.0
post+groups_{id}_share,projects.forks_count,return.forks_count >= 0,daikon.inv.unary.scalar.LowerBound,(return.forks_count),/groups/{id}/share&/groups/{id}/share&post&201&projects():::EXIT,1.0
post+groups_{id}_share,projects.import_status,"return.import_status one of { ""finished"", ""none"" }",daikon.inv.unary.string.OneOfString,(return.import_status),/groups/{id}/share&/groups/{id}/share&post&201&projects():::EXIT,1.0
post+groups_{id}_share,projects.last_activity_at,"LENGTH(return.last_activity_at)==24
return.last_activity_at is Timestamp. Format: YYYY-MM-DDTHH:MM:SS.mmZ (Miliseconds are optional)","daikon.inv.unary.string.FixedLengthString
daikon.inv.unary.string.dates.IsTimestampYYYYMMHHThhmmssmm","(return.last_activity_at)
(return.last_activity_at)","/groups/{id}/share&/groups/{id}/share&post&201&projects():::EXIT
/groups/{id}/share&/groups/{id}/share&post&201&projects():::EXIT",1.0
post+groups_{id}_share,projects.merge_method,"return.merge_method one of { ""ff"", ""merge"", ""rebase_merge"" }",daikon.inv.unary.string.OneOfString,(return.merge_method),/groups/{id}/share&/groups/{id}/share&post&201&projects():::EXIT,1.0
post+groups_{id}_share,projects.name_with_namespace,"return.name is a substring of return.name_with_namespace
return.namespace.name is a substring of return.name_with_namespace","daikon.inv.binary.twoString.StdString$SubString
daikon.inv.binary.twoString.StdString$SubString","(return.name, return.name_with_namespace)
(return.name_with_namespace, return.namespace.name)","/groups/{id}/share&/groups/{id}/share&post&201&projects():::EXIT
/groups/{id}/share&/groups/{id}/share&post&201&projects():::EXIT",1.0
post+groups_{id}_share,projects.namespace.id,input.id == return.namespace.id,daikon.inv.binary.twoScalar.IntEqual,"(input.id, return.namespace.id)",/groups/{id}/share&/groups/{id}/share&post&201&projects():::EXIT,1.0
post+groups_{id}_share,projects.namespace.kind,"return.namespace.kind == ""group""
LENGTH(return.namespace.kind)==5","daikon.inv.unary.string.OneOfString
daikon.inv.unary.string.FixedLengthString","(return.namespace.kind)
(return.namespace.kind)","/groups/{id}/share&/groups/{id}/share&post&201&projects():::EXIT
/groups/{id}/share&/groups/{id}/share&post&201&projects():::EXIT",1.0
post+groups_{id}_share,projects.namespace.path,return.namespace.path is a substring of return.namespace.full_path,daikon.inv.binary.twoString.StdString$SubString,"(return.namespace.path, return.namespace.full_path)",/groups/{id}/share&/groups/{id}/share&post&201&projects():::EXIT,1.0
post+groups_{id}_share,projects.open_issues_count,"return.open_issues_count == 0
return.open_issues_count <= return.forks_count
return.open_issues_count <= return.star_count
return.open_issues_count <= size(return.shared_with_groups[])","daikon.inv.unary.scalar.OneOfScalar
daikon.inv.binary.twoScalar.IntLessEqual
daikon.inv.binary.twoScalar.IntLessEqual
daikon.inv.binary.twoScalar.IntLessEqual","(return.open_issues_count)
(return.open_issues_count, return.forks_count)
(return.open_issues_count, return.star_count)
(return.open_issues_count, size(return.shared_with_groups[..]))","/groups/{id}/share&/groups/{id}/share&post&201&projects():::EXIT
/groups/{id}/share&/groups/{id}/share&post&201&projects():::EXIT
/groups/{id}/share&/groups/{id}/share&post&201&projects():::EXIT
/groups/{id}/share&/groups/{id}/share&post&201&projects():::EXIT",1.0
post+groups_{id}_share,projects.path_with_namespace,"return.path_with_namespace is a substring of return.ssh_url_to_repo
return.path_with_namespace is a substring of return.web_url
return.path is a substring of return.path_with_namespace
return.namespace.full_path is a substring of return.path_with_namespace","daikon.inv.binary.twoString.StdString$SubString
daikon.inv.binary.twoString.StdString$SubString
daikon.inv.binary.twoString.StdString$SubString
daikon.inv.binary.twoString.StdString$SubString","(return.ssh_url_to_repo, return.path_with_namespace)
(return.web_url, return.path_with_namespace)
(return.path, return.path_with_namespace)
(return.path_with_namespace, return.namespace.full_path)","/groups/{id}/share&/groups/{id}/share&post&201&projects():::EXIT
/groups/{id}/share&/groups/{id}/share&post&201&projects():::EXIT
/groups/{id}/share&/groups/{id}/share&post&201&projects():::EXIT
/groups/{id}/share&/groups/{id}/share&post&201&projects():::EXIT",1.0
post+groups_{id}_share,projects.shared_with_groups,"size(return.shared_with_groups[]) one of { 0, 1 }",daikon.inv.unary.scalar.OneOfScalar,(size(return.shared_with_groups[..])),/groups/{id}/share&/groups/{id}/share&post&201&projects():::EXIT,1.0
post+groups_{id}_share,projects.shared_with_groups.group_access_level,"return.group_access_level one of { 10, 20, 30 }",daikon.inv.unary.scalar.OneOfScalar,(return.group_access_level),/groups/{id}/share&/groups/{id}/share&post&201&projects&shared_with_groups():::EXIT,1.0
post+groups_{id}_share,projects.star_count,return.star_count >= 0,daikon.inv.unary.scalar.LowerBound,(return.star_count),/groups/{id}/share&/groups/{id}/share&post&201&projects():::EXIT,1.0
post+groups_{id}_share,projects.web_url,"return.web_url is a substring of return.http_url_to_repo
return.web_url is a substring of return.readme_url","daikon.inv.binary.twoString.StdString$SubString
daikon.inv.binary.twoString.StdString$SubString","(return.http_url_to_repo, return.web_url)
(return.web_url, return.readme_url)","/groups/{id}/share&/groups/{id}/share&post&201&projects():::EXIT
/groups/{id}/share&/groups/{id}/share&post&201&projects():::EXIT",1.0
post+groups_{id}_share,shared_with_groups.expires_at,"input.expires_at == return.expires_at
return.expires_at is a Date. Format: YYYY/MM/DD","daikon.inv.binary.twoString.StringEqual
daikon.inv.unary.string.dates.IsDateYYYYMMDD","(input.expires_at, return.expires_at)
(return.expires_at)","/groups/{id}/share&/groups/{id}/share&post&201&shared_with_groups():::EXIT
/groups/{id}/share&/groups/{id}/share&post&201&shared_with_groups():::EXIT",1.0
post+groups_{id}_share,shared_with_groups.group_id,input.group_id >= return.group_id,daikon.inv.binary.twoScalar.IntGreaterEqual,"(input.group_id, return.group_id)",/groups/{id}/share&/groups/{id}/share&post&201&shared_with_groups():::EXIT,1.0
post+groups_{id}_share,visibility,"return.visibility one of { ""internal"", ""private"", ""public"" }",daikon.inv.unary.string.OneOfString,(return.visibility),/groups/{id}/share&/groups/{id}/share&post&201():::EXIT,1.0
put+groups_{id},created_at,"LENGTH(return.created_at)==24
return.created_at is Timestamp. Format: YYYY-MM-DDTHH:MM:SS.mmZ (Miliseconds are optional)","daikon.inv.unary.string.FixedLengthString
daikon.inv.unary.string.dates.IsTimestampYYYYMMHHThhmmssmm","(return.created_at)
(return.created_at)","/groups/{id}&/groups/{id}&put&200():::EXIT
/groups/{id}&/groups/{id}&put&200():::EXIT",1.0
put+groups_{id},description,input.description == return.description,daikon.inv.binary.twoString.StringEqual,"(input.description, return.description)",/groups/{id}&/groups/{id}&put&200():::EXIT,1.0
put+groups_{id},full_path,"input.path == return.full_path
return.full_path == return.path
return.full_path is a substring of return.web_url","daikon.inv.binary.twoString.StringEqual
daikon.inv.binary.twoString.StringEqual
daikon.inv.binary.twoString.StdString$SubString","(input.path, return.full_path)
(return.full_path, return.path)
(return.full_path, return.web_url)","/groups/{id}&/groups/{id}&put&200():::EXIT
/groups/{id}&/groups/{id}&put&200():::EXIT
/groups/{id}&/groups/{id}&put&200():::EXIT",1.0
put+groups_{id},id,input.id == return.id,daikon.inv.binary.twoScalar.IntEqual,"(input.id, return.id)",/groups/{id}&/groups/{id}&put&200():::EXIT,1.0
put+groups_{id},name,return.full_name == return.name,daikon.inv.binary.twoString.StringEqual,"(return.full_name, return.name)",/groups/{id}&/groups/{id}&put&200():::EXIT,1.0
put+groups_{id},projects._links.self,"return._links.self is a substring of return._links.issues
return._links.self is a substring of return._links.merge_requests
return._links.self is a substring of return._links.repo_branches
return._links.self is a substring of return._links.labels
return._links.self is a substring of return._links.events
return._links.self is a substring of return._links.members","daikon.inv.binary.twoString.StdString$SubString
daikon.inv.binary.twoString.StdString$SubString
daikon.inv.binary.twoString.StdString$SubString
daikon.inv.binary.twoString.StdString$SubString
daikon.inv.binary.twoString.StdString$SubString
daikon.inv.binary.twoString.StdString$SubString","(return._links.self, return._links.issues)
(return._links.self, return._links.merge_requests)
(return._links.self, return._links.repo_branches)
(return._links.self, return._links.labels)
(return._links.self, return._links.events)
(return._links.self, return._links.members)","/groups/{id}&/groups/{id}&put&200&projects():::EXIT
/groups/{id}&/groups/{id}&put&200&projects():::EXIT
/groups/{id}&/groups/{id}&put&200&projects():::EXIT
/groups/{id}&/groups/{id}&put&200&projects():::EXIT
/groups/{id}&/groups/{id}&put&200&projects():::EXIT
/groups/{id}&/groups/{id}&put&200&projects():::EXIT",1.0
put+groups_{id},projects.allow_merge_on_skipped_pipeline,"input.require_two_factor_authentication == return.allow_merge_on_skipped_pipeline
input.mentions_disabled == return.allow_merge_on_skipped_pipeline
return.allow_merge_on_skipped_pipeline == true","daikon.inv.binary.twoScalar.IntEqual
daikon.inv.binary.twoScalar.IntEqual
daikon.inv.unary.scalar.OneOfScalar","(input.require_two_factor_authentication, return.allow_merge_on_skipped_pipeline)
(input.mentions_disabled, return.allow_merge_on_skipped_pipeline)
(return.allow_merge_on_skipped_pipeline)","/groups/{id}&/groups/{id}&put&200&projects():::EXIT
/groups/{id}&/groups/{id}&put&200&projects():::EXIT
/groups/{id}&/groups/{id}&put&200&projects():::EXIT",1.0
put+groups_{id},projects.autoclose_referenced_issues,input.mentions_disabled == return.autoclose_referenced_issues,daikon.inv.binary.twoScalar.IntEqual,"(input.mentions_disabled, return.autoclose_referenced_issues)",/groups/{id}&/groups/{id}&put&200&projects():::EXIT,1.0
put+groups_{id},projects.created_at,"LENGTH(return.created_at)==24
return.created_at is Timestamp. Format: YYYY-MM-DDTHH:MM:SS.mmZ (Miliseconds are optional)","daikon.inv.unary.string.FixedLengthString
daikon.inv.unary.string.dates.IsTimestampYYYYMMHHThhmmssmm","(return.created_at)
(return.created_at)","/groups/{id}&/groups/{id}&put&200&projects():::EXIT
/groups/{id}&/groups/{id}&put&200&projects():::EXIT",1.0
put+groups_{id},projects.default_branch,"return.default_branch one of { ""main"", ""master"" }
return.default_branch is a substring of return.readme_url","daikon.inv.unary.string.OneOfString
daikon.inv.binary.twoString.StdString$SubString","(return.default_branch)
(return.default_branch, return.readme_url)","/groups/{id}&/groups/{id}&put&200&projects():::EXIT
/groups/{id}&/groups/{id}&put&200&projects():::EXIT",1.0
put+groups_{id},projects.import_status,"return.import_status one of { ""finished"", ""none"" }",daikon.inv.unary.string.OneOfString,(return.import_status),/groups/{id}&/groups/{id}&put&200&projects():::EXIT,1.0
put+groups_{id},projects.issues_enabled,input.mentions_disabled == return.issues_enabled,daikon.inv.binary.twoScalar.IntEqual,"(input.mentions_disabled, return.issues_enabled)",/groups/{id}&/groups/{id}&put&200&projects():::EXIT,1.0
put+groups_{id},projects.jobs_enabled,return.jobs_enabled == return.allow_merge_on_skipped_pipeline,daikon.inv.binary.twoScalar.IntEqual,"(return.jobs_enabled, return.allow_merge_on_skipped_pipeline)",/groups/{id}&/groups/{id}&put&200&projects():::EXIT,1.0
put+groups_{id},projects.last_activity_at,"LENGTH(return.last_activity_at)==24
return.last_activity_at is Timestamp. Format: YYYY-MM-DDTHH:MM:SS.mmZ (Miliseconds are optional)","daikon.inv.unary.string.FixedLengthString
daikon.inv.unary.string.dates.IsTimestampYYYYMMHHThhmmssmm","(return.last_activity_at)
(return.last_activity_at)","/groups/{id}&/groups/{id}&put&200&projects():::EXIT
/groups/{id}&/groups/{id}&put&200&projects():::EXIT",1.0
put+groups_{id},projects.merge_method,"return.merge_method one of { ""ff"", ""merge"" }",daikon.inv.unary.string.OneOfString,(return.merge_method),/groups/{id}&/groups/{id}&put&200&projects():::EXIT,1.0
put+groups_{id},projects.merge_requests_enabled,input.mentions_disabled == return.merge_requests_enabled,daikon.inv.binary.twoScalar.IntEqual,"(input.mentions_disabled, return.merge_requests_enabled)",/groups/{id}&/groups/{id}&put&200&projects():::EXIT,1.0
put+groups_{id},projects.name_with_namespace,"input.name is a substring of return.name_with_namespace
return.name is a substring of return.name_with_namespace
return.namespace.name is a substring of return.name_with_namespace","daikon.inv.binary.twoString.StdString$SubString
daikon.inv.binary.twoString.StdString$SubString
daikon.inv.binary.twoString.StdString$SubString","(input.name, return.name_with_namespace)
(return.name, return.name_with_namespace)
(return.name_with_namespace, return.namespace.name)","/groups/{id}&/groups/{id}&put&200&projects():::EXIT
/groups/{id}&/groups/{id}&put&200&projects():::EXIT
/groups/{id}&/groups/{id}&put&200&projects():::EXIT",1.0
put+groups_{id},projects.namespace.id,input.id == return.namespace.id,daikon.inv.binary.twoScalar.IntEqual,"(input.id, return.namespace.id)",/groups/{id}&/groups/{id}&put&200&projects():::EXIT,1.0
put+groups_{id},projects.namespace.kind,"return.namespace.kind == ""group""
LENGTH(return.namespace.kind)==5","daikon.inv.unary.string.OneOfString
daikon.inv.unary.string.FixedLengthString","(return.namespace.kind)
(return.namespace.kind)","/groups/{id}&/groups/{id}&put&200&projects():::EXIT
/groups/{id}&/groups/{id}&put&200&projects():::EXIT",1.0
put+groups_{id},projects.path_with_namespace,"input.path is a substring of return.path_with_namespace
return.path_with_namespace is a substring of return.ssh_url_to_repo
return.path_with_namespace is a substring of return.web_url
return.path is a substring of return.path_with_namespace
return.namespace.path is a substring of return.path_with_namespace","daikon.inv.binary.twoString.StdString$SubString
daikon.inv.binary.twoString.StdString$SubString
daikon.inv.binary.twoString.StdString$SubString
daikon.inv.binary.twoString.StdString$SubString
daikon.inv.binary.twoString.StdString$SubString","(input.path, return.path_with_namespace)
(return.ssh_url_to_repo, return.path_with_namespace)
(return.web_url, return.path_with_namespace)
(return.path, return.path_with_namespace)
(return.path_with_namespace, return.namespace.path)","/groups/{id}&/groups/{id}&put&200&projects():::EXIT
/groups/{id}&/groups/{id}&put&200&projects():::EXIT
/groups/{id}&/groups/{id}&put&200&projects():::EXIT
/groups/{id}&/groups/{id}&put&200&projects():::EXIT
/groups/{id}&/groups/{id}&put&200&projects():::EXIT",1.0
put+groups_{id},projects.public_jobs,input.mentions_disabled == return.public_jobs,daikon.inv.binary.twoScalar.IntEqual,"(input.mentions_disabled, return.public_jobs)",/groups/{id}&/groups/{id}&put&200&projects():::EXIT,1.0
put+groups_{id},projects.shared_runners_enabled,return.shared_runners_enabled == return.allow_merge_on_skipped_pipeline,daikon.inv.binary.twoScalar.IntEqual,"(return.shared_runners_enabled, return.allow_merge_on_skipped_pipeline)",/groups/{id}&/groups/{id}&put&200&projects():::EXIT,1.0
put+groups_{id},projects.star_count,"return.star_count one of { 0, 1, 2 }",daikon.inv.unary.scalar.OneOfScalar,(return.star_count),/groups/{id}&/groups/{id}&put&200&projects():::EXIT,1.0
put+groups_{id},projects.visibility,"return.visibility == ""private""
LENGTH(return.visibility)==7","daikon.inv.unary.string.OneOfString
daikon.inv.unary.string.FixedLengthString","(return.visibility)
(return.visibility)","/groups/{id}&/groups/{id}&put&200&projects():::EXIT
/groups/{id}&/groups/{id}&put&200&projects():::EXIT",1.0
put+groups_{id},projects.web_url,"return.web_url is a substring of return.http_url_to_repo
return.web_url is a substring of return.readme_url","daikon.inv.binary.twoString.StdString$SubString
daikon.inv.binary.twoString.StdString$SubString","(return.http_url_to_repo, return.web_url)
(return.web_url, return.readme_url)","/groups/{id}&/groups/{id}&put&200&projects():::EXIT
/groups/{id}&/groups/{id}&put&200&projects():::EXIT",1.0
put+groups_{id},request_access_enabled,input.request_access_enabled == return.request_access_enabled,daikon.inv.binary.twoScalar.IntEqual,"(input.request_access_enabled, return.request_access_enabled)",/groups/{id}&/groups/{id}&put&200():::EXIT,1.0
put+groups_{id},shared_with_groups,return.shared_with_groups[] == [],daikon.inv.unary.sequence.OneOfSequence,(return.shared_with_groups[..]),/groups/{id}&/groups/{id}&put&200():::EXIT,1.0
put+groups_{id},visibility,"input.visibility == return.visibility
return.visibility one of { ""internal"", ""private"", ""public"" }","daikon.inv.binary.twoString.StringEqual
daikon.inv.unary.string.OneOfString","(input.visibility, return.visibility)
(return.visibility)","/groups/{id}&/groups/{id}&put&200():::EXIT
/groups/{id}&/groups/{id}&put&200():::EXIT",1.0
put+groups_{id},web_url,input.path is a substring of return.web_url,daikon.inv.binary.twoString.StdString$SubString,"(input.path, return.web_url)",/groups/{id}&/groups/{id}&put&200():::EXIT,1.0
put+groups_{id}_hooks_{hook_id},confidential_issues_events,input.confidential_issues_events == return.confidential_issues_events,daikon.inv.binary.twoScalar.IntEqual,"(input.confidential_issues_events, return.confidential_issues_events)",/groups/{id}/hooks/{hook_id}&/groups/{id}/hooks/{hook_id}&put&200():::EXIT,1.0
put+groups_{id}_hooks_{hook_id},confidential_note_events,input.confidential_note_events == return.confidential_note_events,daikon.inv.binary.twoScalar.IntEqual,"(input.confidential_note_events, return.confidential_note_events)",/groups/{id}/hooks/{hook_id}&/groups/{id}/hooks/{hook_id}&put&200():::EXIT,1.0
put+groups_{id}_hooks_{hook_id},created_at,"LENGTH(return.created_at)==24
return.created_at is Timestamp. Format: YYYY-MM-DDTHH:MM:SS.mmZ (Miliseconds are optional)","daikon.inv.unary.string.FixedLengthString
daikon.inv.unary.string.dates.IsTimestampYYYYMMHHThhmmssmm","(return.created_at)
(return.created_at)","/groups/{id}/hooks/{hook_id}&/groups/{id}/hooks/{hook_id}&put&200():::EXIT
/groups/{id}/hooks/{hook_id}&/groups/{id}/hooks/{hook_id}&put&200():::EXIT",1.0
put+groups_{id}_hooks_{hook_id},deployment_events,input.deployment_events == return.deployment_events,daikon.inv.binary.twoScalar.IntEqual,"(input.deployment_events, return.deployment_events)",/groups/{id}/hooks/{hook_id}&/groups/{id}/hooks/{hook_id}&put&200():::EXIT,1.0
put+groups_{id}_hooks_{hook_id},enable_ssl_verification,input.enable_ssl_verification == return.enable_ssl_verification,daikon.inv.binary.twoScalar.IntEqual,"(input.enable_ssl_verification, return.enable_ssl_verification)",/groups/{id}/hooks/{hook_id}&/groups/{id}/hooks/{hook_id}&put&200():::EXIT,1.0
put+groups_{id}_hooks_{hook_id},group_id,input.id == return.group_id,daikon.inv.binary.twoScalar.IntEqual,"(input.id, return.group_id)",/groups/{id}/hooks/{hook_id}&/groups/{id}/hooks/{hook_id}&put&200():::EXIT,1.0
put+groups_{id}_hooks_{hook_id},id,input.hook_id == return.id,daikon.inv.binary.twoScalar.IntEqual,"(input.hook_id, return.id)",/groups/{id}/hooks/{hook_id}&/groups/{id}/hooks/{hook_id}&put&200():::EXIT,1.0
put+groups_{id}_hooks_{hook_id},issues_events,input.issues_events == return.issues_events,daikon.inv.binary.twoScalar.IntEqual,"(input.issues_events, return.issues_events)",/groups/{id}/hooks/{hook_id}&/groups/{id}/hooks/{hook_id}&put&200():::EXIT,1.0
put+groups_{id}_hooks_{hook_id},job_events,input.job_events == return.job_events,daikon.inv.binary.twoScalar.IntEqual,"(input.job_events, return.job_events)",/groups/{id}/hooks/{hook_id}&/groups/{id}/hooks/{hook_id}&put&200():::EXIT,1.0
put+groups_{id}_hooks_{hook_id},merge_requests_events,input.merge_requests_events == return.merge_requests_events,daikon.inv.binary.twoScalar.IntEqual,"(input.merge_requests_events, return.merge_requests_events)",/groups/{id}/hooks/{hook_id}&/groups/{id}/hooks/{hook_id}&put&200():::EXIT,1.0
put+groups_{id}_hooks_{hook_id},note_events,input.note_events == return.note_events,daikon.inv.binary.twoScalar.IntEqual,"(input.note_events, return.note_events)",/groups/{id}/hooks/{hook_id}&/groups/{id}/hooks/{hook_id}&put&200():::EXIT,1.0
put+groups_{id}_hooks_{hook_id},pipeline_events,input.pipeline_events == return.pipeline_events,daikon.inv.binary.twoScalar.IntEqual,"(input.pipeline_events, return.pipeline_events)",/groups/{id}/hooks/{hook_id}&/groups/{id}/hooks/{hook_id}&put&200():::EXIT,1.0
put+groups_{id}_hooks_{hook_id},push_events,input.push_events == return.push_events,daikon.inv.binary.twoScalar.IntEqual,"(input.push_events, return.push_events)",/groups/{id}/hooks/{hook_id}&/groups/{id}/hooks/{hook_id}&put&200():::EXIT,1.0
put+groups_{id}_hooks_{hook_id},releases_events,input.releases_events == return.releases_events,daikon.inv.binary.twoScalar.IntEqual,"(input.releases_events, return.releases_events)",/groups/{id}/hooks/{hook_id}&/groups/{id}/hooks/{hook_id}&put&200():::EXIT,1.0
put+groups_{id}_hooks_{hook_id},tag_push_events,input.tag_push_events == return.tag_push_events,daikon.inv.binary.twoScalar.IntEqual,"(input.tag_push_events, return.tag_push_events)",/groups/{id}/hooks/{hook_id}&/groups/{id}/hooks/{hook_id}&put&200():::EXIT,1.0
put+groups_{id}_hooks_{hook_id},url,input.url == return.url,daikon.inv.binary.twoString.StringEqual,"(input.url, return.url)",/groups/{id}/hooks/{hook_id}&/groups/{id}/hooks/{hook_id}&put&200():::EXIT,1.0
