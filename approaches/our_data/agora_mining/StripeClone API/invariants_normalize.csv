pptname,invariant,invariantType,variables,postmanAssertion,endpoint,tp,fp,enter,bug,invariantDescription,group,api
/v1/apple_pay/domains&GetApplePayDomains&200&data():::EXIT,LENGTH(return.id)==29,daikon.inv.unary.string.FixedLengthString,(return.id),pm.expect(return_id).to.have.length(29),get+v1_apple_pay_domains,1.0,,,,Indicates that the value of a string variable always has a fixed length n. Represented as LENGTH(x)==n.,data.id,StripeClone API
/v1/apple_pay/domains&GetApplePayDomains&200&data():::EXIT,return.livemode == false,daikon.inv.unary.scalar.OneOfScalar,(return.livemode),pm.expect(return_livemode).to.eql(false),get+v1_apple_pay_domains,,1.0,,,"Represents long variables that take on only a few distinct values. Prints as either x == c (when there is only one value) or as x one of {c1, c2, c3} (when there are multiple values).",data.livemode,StripeClone API
/v1/apple_pay/domains&GetApplePayDomains&200&data():::EXIT,"return.object == ""apple_pay_domain""",daikon.inv.unary.string.OneOfString,(return.object),"pm.expect([""apple_pay_domain""].includes(return_object)).to.be.true",get+v1_apple_pay_domains,1.0,,,,"Represents String variables that take on only a few distinct values. Prints as either x == c (when there is only one value) or as x one of {c1, c2, c3} (when there are multiple values).",data.object,StripeClone API
/v1/apple_pay/domains&GetApplePayDomains&200&data():::EXIT,LENGTH(return.object)==16,daikon.inv.unary.string.FixedLengthString,(return.object),pm.expect(return_object).to.have.length(16),get+v1_apple_pay_domains,1.0,,,,Indicates that the value of a string variable always has a fixed length n. Represented as LENGTH(x)==n.,data.object,StripeClone API
/v1/apple_pay/domains&GetApplePayDomains&200():::EXIT,"return.object == ""list""",daikon.inv.unary.string.OneOfString,(return.object),"pm.expect([""list""].includes(return_object)).to.be.true",get+v1_apple_pay_domains,1.0,,,,"Represents String variables that take on only a few distinct values. Prints as either x == c (when there is only one value) or as x one of {c1, c2, c3} (when there are multiple values).",object,StripeClone API
/v1/apple_pay/domains&GetApplePayDomains&200():::EXIT,LENGTH(return.object)==4,daikon.inv.unary.string.FixedLengthString,(return.object),pm.expect(return_object).to.have.length(4),get+v1_apple_pay_domains,1.0,,,,Indicates that the value of a string variable always has a fixed length n. Represented as LENGTH(x)==n.,object,StripeClone API
/v1/apple_pay/domains&GetApplePayDomains&200():::EXIT,"return.url == ""/v1/apple_pay/domains""",daikon.inv.unary.string.OneOfString,(return.url),"pm.expect([""/v1/apple_pay/domains""].includes(return_url)).to.be.true",get+v1_apple_pay_domains,1.0,,,,"Represents String variables that take on only a few distinct values. Prints as either x == c (when there is only one value) or as x one of {c1, c2, c3} (when there are multiple values).",url,StripeClone API
/v1/apple_pay/domains&GetApplePayDomains&200():::EXIT,LENGTH(return.url)==21,daikon.inv.unary.string.FixedLengthString,(return.url),pm.expect(return_url).to.have.length(21),get+v1_apple_pay_domains,,1.0,,,Indicates that the value of a string variable always has a fixed length n. Represented as LENGTH(x)==n.,url,StripeClone API
/v1/apple_pay/domains&GetApplePayDomains&200():::EXIT,input.limit >= size(return.data[]),daikon.inv.binary.twoScalar.IntGreaterEqual,"(input.limit, size(return.data[..]))",pm.expect(input_limit).to.be.at.least(return_data_size_array),get+v1_apple_pay_domains,1.0,,,,Represents an invariant of >= between two long scalars. Prints as x >= y.,data,StripeClone API
/v1/radar/value_list_items&GetRadarValueListItems&200&data():::EXIT,input.value_list == return.value_list,daikon.inv.binary.twoString.StringEqual,"(input.value_list, return.value_list)",pm.expect(input_value_list).to.eql(return_value_list),get+v1_radar_value_list_items,1.0,,,,Represents an invariant of == between two String scalars. Prints as x == y.,data.value_list,StripeClone API
/v1/radar/value_list_items&GetRadarValueListItems&200&data():::EXIT,"return.created_by == ""API""",daikon.inv.unary.string.OneOfString,(return.created_by),"pm.expect([""API""].includes(return_created_by)).to.be.true",get+v1_radar_value_list_items,1.0,,,,"Represents String variables that take on only a few distinct values. Prints as either x == c (when there is only one value) or as x one of {c1, c2, c3} (when there are multiple values).",data.created_by,StripeClone API
/v1/radar/value_list_items&GetRadarValueListItems&200&data():::EXIT,LENGTH(return.created_by)==3,daikon.inv.unary.string.FixedLengthString,(return.created_by),pm.expect(return_created_by).to.have.length(3),get+v1_radar_value_list_items,1.0,,,,Indicates that the value of a string variable always has a fixed length n. Represented as LENGTH(x)==n.,data.created_by,StripeClone API
/v1/radar/value_list_items&GetRadarValueListItems&200&data():::EXIT,LENGTH(return.id)==29,daikon.inv.unary.string.FixedLengthString,(return.id),pm.expect(return_id).to.have.length(29),get+v1_radar_value_list_items,1.0,,,,Indicates that the value of a string variable always has a fixed length n. Represented as LENGTH(x)==n.,data.id,StripeClone API
/v1/radar/value_list_items&GetRadarValueListItems&200&data():::EXIT,return.livemode == false,daikon.inv.unary.scalar.OneOfScalar,(return.livemode),pm.expect(return_livemode).to.eql(false),get+v1_radar_value_list_items,,1.0,,,"Represents long variables that take on only a few distinct values. Prints as either x == c (when there is only one value) or as x one of {c1, c2, c3} (when there are multiple values).",data.livemode,StripeClone API
/v1/radar/value_list_items&GetRadarValueListItems&200&data():::EXIT,"return.object == ""radar.value_list_item""",daikon.inv.unary.string.OneOfString,(return.object),"pm.expect([""radar.value_list_item""].includes(return_object)).to.be.true",get+v1_radar_value_list_items,1.0,,,,"Represents String variables that take on only a few distinct values. Prints as either x == c (when there is only one value) or as x one of {c1, c2, c3} (when there are multiple values).",data.object,StripeClone API
/v1/radar/value_list_items&GetRadarValueListItems&200&data():::EXIT,LENGTH(return.object)==21,daikon.inv.unary.string.FixedLengthString,(return.object),pm.expect(return_object).to.have.length(21),get+v1_radar_value_list_items,1.0,,,,Indicates that the value of a string variable always has a fixed length n. Represented as LENGTH(x)==n.,data.object,StripeClone API
/v1/radar/value_list_items&GetRadarValueListItems&200():::EXIT,"return.object == ""list""",daikon.inv.unary.string.OneOfString,(return.object),"pm.expect([""list""].includes(return_object)).to.be.true",get+v1_radar_value_list_items,1.0,,,,"Represents String variables that take on only a few distinct values. Prints as either x == c (when there is only one value) or as x one of {c1, c2, c3} (when there are multiple values).",object,StripeClone API
/v1/radar/value_list_items&GetRadarValueListItems&200():::EXIT,LENGTH(return.object)==4,daikon.inv.unary.string.FixedLengthString,(return.object),pm.expect(return_object).to.have.length(4),get+v1_radar_value_list_items,1.0,,,,Indicates that the value of a string variable always has a fixed length n. Represented as LENGTH(x)==n.,object,StripeClone API
/v1/radar/value_list_items&GetRadarValueListItems&200():::EXIT,"return.url == ""/v1/radar/value_list_items""",daikon.inv.unary.string.OneOfString,(return.url),"pm.expect([""/v1/radar/value_list_items""].includes(return_url)).to.be.true",get+v1_radar_value_list_items,1.0,,,,"Represents String variables that take on only a few distinct values. Prints as either x == c (when there is only one value) or as x one of {c1, c2, c3} (when there are multiple values).",url,StripeClone API
/v1/radar/value_list_items&GetRadarValueListItems&200():::EXIT,LENGTH(return.url)==26,daikon.inv.unary.string.FixedLengthString,(return.url),pm.expect(return_url).to.have.length(26),get+v1_radar_value_list_items,1.0,,,,Indicates that the value of a string variable always has a fixed length n. Represented as LENGTH(x)==n.,url,StripeClone API
/v1/radar/value_list_items&GetRadarValueListItems&200():::EXIT,input.limit > size(return.data[]),daikon.inv.binary.twoScalar.IntGreaterThan,"(input.limit, size(return.data[..]))",pm.expect(input_limit).to.be.greaterThan(return_data_size_array),get+v1_radar_value_list_items,1.0,,,,Represents an invariant of > between two long scalars. Prints as x > y.,data,StripeClone API
/v1/radar/value_list_items&GetRadarValueListItems&200():::EXIT,return.object is a substring of return.url,daikon.inv.binary.twoString.StdString$SubString,"(return.object, return.url)",pm.expect(return_url.includes(return_object)).to.be.true,get+v1_radar_value_list_items,,1.0,,,Represents the substring invariant between two String scalars. Prints as x is a substring of y.,object,StripeClone API
/v1/radar/value_list_items&PostRadarValueListItems&200():::EXIT,"return.object == ""list""",daikon.inv.unary.string.OneOfString,(return.object),"pm.expect([""list""].includes(return_object)).to.be.true",get+v1_radar_value_list_items,1.0,,,,"Represents String variables that take on only a few distinct values. Prints as either x == c (when there is only one value) or as x one of {c1, c2, c3} (when there are multiple values).",object,StripeClone API
/v1/radar/value_list_items&PostRadarValueListItems&200():::EXIT,LENGTH(return.object)==4,daikon.inv.unary.string.FixedLengthString,(return.object),pm.expect(return_object).to.have.length(4),get+v1_radar_value_list_items,1.0,,,,Indicates that the value of a string variable always has a fixed length n. Represented as LENGTH(x)==n.,object,StripeClone API
/v1/tax_rates&GetTaxRates&200&data():::EXIT,input.active == return.active,daikon.inv.binary.twoScalar.IntEqual,"(input.active, return.active)",pm.expect(input_active).to.eql(return_active),get+v1_tax_rates,1.0,,,,Represents an invariant of == between two long scalars. Prints as x == y.,data.active,StripeClone API
/v1/tax_rates&GetTaxRates&200&data():::EXIT,input.inclusive == return.inclusive,daikon.inv.binary.twoScalar.IntEqual,"(input.inclusive, return.inclusive)",pm.expect(input_inclusive).to.eql(return_inclusive),get+v1_tax_rates,1.0,,,,Represents an invariant of == between two long scalars. Prints as x == y.,data.inclusive,StripeClone API
/v1/tax_rates&GetTaxRates&200&data():::EXIT,return.effective_percentage == return.percentage,daikon.inv.binary.twoScalar.FloatEqual,"(return.effective_percentage, return.percentage)",pm.expect(return_effective_percentage).to.eql(return_percentage),get+v1_tax_rates,,1.0,,,,data.effective_percentage,StripeClone API
/v1/tax_rates&GetTaxRates&200&data():::EXIT,LENGTH(return.country)==2,daikon.inv.unary.string.FixedLengthString,(return.country),pm.expect(return_country).to.have.length(2),get+v1_tax_rates,1.0,,,,Indicates that the value of a string variable always has a fixed length n. Represented as LENGTH(x)==n.,data.country,StripeClone API
/v1/tax_rates&GetTaxRates&200&data():::EXIT,return.effective_percentage >= 1.0,daikon.inv.unary.scalar.LowerBoundFloat,(return.effective_percentage),pm.expect(return_effective_percentage).to.be.at.least(1.0),get+v1_tax_rates,,1.0,,,"Represents the invariant x >= c, where c is a constant and x is a double scalar.",data.effective_percentage,StripeClone API
/v1/tax_rates&GetTaxRates&200&data():::EXIT,LENGTH(return.id)==28,daikon.inv.unary.string.FixedLengthString,(return.id),pm.expect(return_id).to.have.length(28),get+v1_tax_rates,1.0,,,,Indicates that the value of a string variable always has a fixed length n. Represented as LENGTH(x)==n.,data.id,StripeClone API
/v1/tax_rates&GetTaxRates&200&data():::EXIT,return.livemode == false,daikon.inv.unary.scalar.OneOfScalar,(return.livemode),pm.expect(return_livemode).to.eql(false),get+v1_tax_rates,,1.0,,,"Represents long variables that take on only a few distinct values. Prints as either x == c (when there is only one value) or as x one of {c1, c2, c3} (when there are multiple values).",data.livemode,StripeClone API
/v1/tax_rates&GetTaxRates&200&data():::EXIT,"return.object == ""tax_rate""",daikon.inv.unary.string.OneOfString,(return.object),"pm.expect([""tax_rate""].includes(return_object)).to.be.true",get+v1_tax_rates,1.0,,,,"Represents String variables that take on only a few distinct values. Prints as either x == c (when there is only one value) or as x one of {c1, c2, c3} (when there are multiple values).",data.object,StripeClone API
/v1/tax_rates&GetTaxRates&200&data():::EXIT,LENGTH(return.object)==8,daikon.inv.unary.string.FixedLengthString,(return.object),pm.expect(return_object).to.have.length(8),get+v1_tax_rates,1.0,,,,Indicates that the value of a string variable always has a fixed length n. Represented as LENGTH(x)==n.,data.object,StripeClone API
/v1/tax_rates&GetTaxRates&200&data():::EXIT,"return.state one of { ""CA"", ""GU"", ""TA"" }",daikon.inv.unary.string.OneOfString,(return.state),"pm.expect([""CA"", ""GU"", ""TA""].includes(return_state)).to.be.true",get+v1_tax_rates,,1.0,,,"Represents String variables that take on only a few distinct values. Prints as either x == c (when there is only one value) or as x one of {c1, c2, c3} (when there are multiple values).",data.state,StripeClone API
/v1/tax_rates&GetTaxRates&200&data():::EXIT,LENGTH(return.state)==2,daikon.inv.unary.string.FixedLengthString,(return.state),pm.expect(return_state).to.have.length(2),get+v1_tax_rates,1.0,,,,Indicates that the value of a string variable always has a fixed length n. Represented as LENGTH(x)==n.,data.state,StripeClone API
/v1/tax_rates&GetTaxRates&200():::EXIT,"return.object == ""list""",daikon.inv.unary.string.OneOfString,(return.object),"pm.expect([""list""].includes(return_object)).to.be.true",get+v1_tax_rates,1.0,,,,"Represents String variables that take on only a few distinct values. Prints as either x == c (when there is only one value) or as x one of {c1, c2, c3} (when there are multiple values).",object,StripeClone API
/v1/tax_rates&GetTaxRates&200():::EXIT,LENGTH(return.object)==4,daikon.inv.unary.string.FixedLengthString,(return.object),pm.expect(return_object).to.have.length(4),get+v1_tax_rates,1.0,,,,Indicates that the value of a string variable always has a fixed length n. Represented as LENGTH(x)==n.,object,StripeClone API
/v1/tax_rates&GetTaxRates&200():::EXIT,"return.url == ""/v1/tax_rates""",daikon.inv.unary.string.OneOfString,(return.url),"pm.expect([""/v1/tax_rates""].includes(return_url)).to.be.true",get+v1_tax_rates,1.0,,,,"Represents String variables that take on only a few distinct values. Prints as either x == c (when there is only one value) or as x one of {c1, c2, c3} (when there are multiple values).",url,StripeClone API
/v1/tax_rates&GetTaxRates&200():::EXIT,LENGTH(return.url)==13,daikon.inv.unary.string.FixedLengthString,(return.url),pm.expect(return_url).to.have.length(13),get+v1_tax_rates,1.0,,,,Indicates that the value of a string variable always has a fixed length n. Represented as LENGTH(x)==n.,url,StripeClone API
/v1/tax_rates&GetTaxRates&200():::EXIT,input.limit >= size(return.data[]),daikon.inv.binary.twoScalar.IntGreaterEqual,"(input.limit, size(return.data[..]))",pm.expect(input_limit).to.be.at.least(return_data_size_array),get+v1_tax_rates,1.0,,,,Represents an invariant of >= between two long scalars. Prints as x >= y.,data,StripeClone API
/v1/test_helpers/test_clocks&GetTestHelpersTestClocks&200&data():::EXIT,LENGTH(return.id)==30,daikon.inv.unary.string.FixedLengthString,(return.id),pm.expect(return_id).to.have.length(30),get+v1_test_helpers_test_clocks,1.0,,,,Indicates that the value of a string variable always has a fixed length n. Represented as LENGTH(x)==n.,data.id,StripeClone API
/v1/test_helpers/test_clocks&GetTestHelpersTestClocks&200&data():::EXIT,return.livemode == false,daikon.inv.unary.scalar.OneOfScalar,(return.livemode),pm.expect(return_livemode).to.eql(false),get+v1_test_helpers_test_clocks,,1.0,,,"Represents long variables that take on only a few distinct values. Prints as either x == c (when there is only one value) or as x one of {c1, c2, c3} (when there are multiple values).",data.livemode,StripeClone API
/v1/test_helpers/test_clocks&GetTestHelpersTestClocks&200&data():::EXIT,"return.object == ""test_helpers.test_clock""",daikon.inv.unary.string.OneOfString,(return.object),"pm.expect([""test_helpers.test_clock""].includes(return_object)).to.be.true",get+v1_test_helpers_test_clocks,1.0,,,,"Represents String variables that take on only a few distinct values. Prints as either x == c (when there is only one value) or as x one of {c1, c2, c3} (when there are multiple values).",data.object,StripeClone API
/v1/test_helpers/test_clocks&GetTestHelpersTestClocks&200&data():::EXIT,LENGTH(return.object)==23,daikon.inv.unary.string.FixedLengthString,(return.object),pm.expect(return_object).to.have.length(23),get+v1_test_helpers_test_clocks,1.0,,,,Indicates that the value of a string variable always has a fixed length n. Represented as LENGTH(x)==n.,data.object,StripeClone API
/v1/test_helpers/test_clocks&GetTestHelpersTestClocks&200&data():::EXIT,"return.status == ""ready""",daikon.inv.unary.string.OneOfString,(return.status),"pm.expect([""ready""].includes(return_status)).to.be.true",get+v1_test_helpers_test_clocks,1.0,,,,"Represents String variables that take on only a few distinct values. Prints as either x == c (when there is only one value) or as x one of {c1, c2, c3} (when there are multiple values).",data.status,StripeClone API
/v1/test_helpers/test_clocks&GetTestHelpersTestClocks&200&data():::EXIT,LENGTH(return.status)==5,daikon.inv.unary.string.FixedLengthString,(return.status),pm.expect(return_status).to.have.length(5),get+v1_test_helpers_test_clocks,1.0,,,,Indicates that the value of a string variable always has a fixed length n. Represented as LENGTH(x)==n.,data.status,StripeClone API
/v1/test_helpers/test_clocks&GetTestHelpersTestClocks&200():::EXIT,input.limit == size(return.data[]),daikon.inv.binary.twoScalar.IntEqual,"(input.limit, size(return.data[..]))",pm.expect(input_limit).to.eql(return_data_size_array),get+v1_test_helpers_test_clocks,,1.0,,,Represents an invariant of == between two long scalars. Prints as x == y.,data,StripeClone API
/v1/test_helpers/test_clocks&GetTestHelpersTestClocks&200():::EXIT,return.has_more == true,daikon.inv.unary.scalar.OneOfScalar,(return.has_more),pm.expect(return_has_more).to.eql(true),get+v1_test_helpers_test_clocks,,1.0,,,"Represents long variables that take on only a few distinct values. Prints as either x == c (when there is only one value) or as x one of {c1, c2, c3} (when there are multiple values).",has_more,StripeClone API
/v1/test_helpers/test_clocks&GetTestHelpersTestClocks&200():::EXIT,"return.object == ""list""",daikon.inv.unary.string.OneOfString,(return.object),"pm.expect([""list""].includes(return_object)).to.be.true",get+v1_test_helpers_test_clocks,1.0,,,,"Represents String variables that take on only a few distinct values. Prints as either x == c (when there is only one value) or as x one of {c1, c2, c3} (when there are multiple values).",object,StripeClone API
/v1/test_helpers/test_clocks&GetTestHelpersTestClocks&200():::EXIT,LENGTH(return.object)==4,daikon.inv.unary.string.FixedLengthString,(return.object),pm.expect(return_object).to.have.length(4),get+v1_test_helpers_test_clocks,1.0,,,,Indicates that the value of a string variable always has a fixed length n. Represented as LENGTH(x)==n.,object,StripeClone API
/v1/test_helpers/test_clocks&GetTestHelpersTestClocks&200():::EXIT,"return.url == ""/v1/test_helpers/test_clocks""",daikon.inv.unary.string.OneOfString,(return.url),"pm.expect([""/v1/test_helpers/test_clocks""].includes(return_url)).to.be.true",get+v1_test_helpers_test_clocks,1.0,,,,"Represents String variables that take on only a few distinct values. Prints as either x == c (when there is only one value) or as x one of {c1, c2, c3} (when there are multiple values).",url,StripeClone API
/v1/test_helpers/test_clocks&GetTestHelpersTestClocks&200():::EXIT,LENGTH(return.url)==28,daikon.inv.unary.string.FixedLengthString,(return.url),pm.expect(return_url).to.have.length(28),get+v1_test_helpers_test_clocks,1.0,,,,Indicates that the value of a string variable always has a fixed length n. Represented as LENGTH(x)==n.,url,StripeClone API
/v1/webhook_endpoints&GetWebhookEndpoints&200&data():::EXIT,"return.api_version one of { ""2013-12-03"", ""2015-07-28"", ""2018-09-24"" }",daikon.inv.unary.string.OneOfString,(return.api_version),"pm.expect([""2013-12-03"", ""2015-07-28"", ""2018-09-24""].includes(return_api_version)).to.be.true",get+v1_webhook_endpoints,1.0,,,,"Represents String variables that take on only a few distinct values. Prints as either x == c (when there is only one value) or as x one of {c1, c2, c3} (when there are multiple values).",data.api_version,StripeClone API
/v1/webhook_endpoints&GetWebhookEndpoints&200&data():::EXIT,return.api_version is a Date. Format: YYYY/MM/DD,daikon.inv.unary.string.dates.IsDateYYYYMMDD,(return.api_version),pm.expect(return_api_version).to.match(/^(?:1\d{3}|20[01234][0-9]|2050|9999)[-/.](?:0[1-9]|1[012])[-/.](?:0[1-9]|[12][0-9]|3[01])$/),get+v1_webhook_endpoints,1.0,,,,"Indicates that the value of a string variable is always a date following the format YYYY/MM/DD or YYYY-MM-DD (the separator can be ""/"" or ""-""). Represented as x is a Date. Format YYYY/MM/DD.",data.api_version,StripeClone API
/v1/webhook_endpoints&GetWebhookEndpoints&200&data():::EXIT,LENGTH(return.id)==27,daikon.inv.unary.string.FixedLengthString,(return.id),pm.expect(return_id).to.have.length(27),get+v1_webhook_endpoints,1.0,,,,Indicates that the value of a string variable always has a fixed length n. Represented as LENGTH(x)==n.,data.id,StripeClone API
/v1/webhook_endpoints&GetWebhookEndpoints&200&data():::EXIT,return.livemode == false,daikon.inv.unary.scalar.OneOfScalar,(return.livemode),pm.expect(return_livemode).to.eql(false),get+v1_webhook_endpoints,,1.0,,,"Represents long variables that take on only a few distinct values. Prints as either x == c (when there is only one value) or as x one of {c1, c2, c3} (when there are multiple values).",data.livemode,StripeClone API
/v1/webhook_endpoints&GetWebhookEndpoints&200&data():::EXIT,"return.object == ""webhook_endpoint""",daikon.inv.unary.string.OneOfString,(return.object),"pm.expect([""webhook_endpoint""].includes(return_object)).to.be.true",get+v1_webhook_endpoints,1.0,,,,"Represents String variables that take on only a few distinct values. Prints as either x == c (when there is only one value) or as x one of {c1, c2, c3} (when there are multiple values).",data.object,StripeClone API
/v1/webhook_endpoints&GetWebhookEndpoints&200&data():::EXIT,LENGTH(return.object)==16,daikon.inv.unary.string.FixedLengthString,(return.object),pm.expect(return_object).to.have.length(16),get+v1_webhook_endpoints,1.0,,,,Indicates that the value of a string variable always has a fixed length n. Represented as LENGTH(x)==n.,data.object,StripeClone API
/v1/webhook_endpoints&GetWebhookEndpoints&200&data():::EXIT,"return.status == ""enabled""",daikon.inv.unary.string.OneOfString,(return.status),"pm.expect([""enabled""].includes(return_status)).to.be.true",get+v1_webhook_endpoints,1.0,,,,"Represents String variables that take on only a few distinct values. Prints as either x == c (when there is only one value) or as x one of {c1, c2, c3} (when there are multiple values).",data.status,StripeClone API
/v1/webhook_endpoints&GetWebhookEndpoints&200&data():::EXIT,LENGTH(return.status)==7,daikon.inv.unary.string.FixedLengthString,(return.status),pm.expect(return_status).to.have.length(7),get+v1_webhook_endpoints,1.0,,,,Indicates that the value of a string variable always has a fixed length n. Represented as LENGTH(x)==n.,data.status,StripeClone API
/v1/webhook_endpoints&GetWebhookEndpoints&200&data():::EXIT,size(return.enabled_events[]) == 1,daikon.inv.unary.scalar.OneOfScalar,(size(return.enabled_events[..])),pm.expect([1].includes(return_enabled_events_size_array)).to.be.true,get+v1_webhook_endpoints,,1.0,,,"Represents long variables that take on only a few distinct values. Prints as either x == c (when there is only one value) or as x one of {c1, c2, c3} (when there are multiple values).",data.enabled_events,StripeClone API
/v1/webhook_endpoints&GetWebhookEndpoints&200():::EXIT,return.has_more == false,daikon.inv.unary.scalar.OneOfScalar,(return.has_more),pm.expect(return_has_more).to.eql(false),get+v1_webhook_endpoints,,1.0,,,"Represents long variables that take on only a few distinct values. Prints as either x == c (when there is only one value) or as x one of {c1, c2, c3} (when there are multiple values).",has_more,StripeClone API
/v1/webhook_endpoints&GetWebhookEndpoints&200():::EXIT,"return.object == ""list""",daikon.inv.unary.string.OneOfString,(return.object),"pm.expect([""list""].includes(return_object)).to.be.true",get+v1_webhook_endpoints,1.0,,,,"Represents String variables that take on only a few distinct values. Prints as either x == c (when there is only one value) or as x one of {c1, c2, c3} (when there are multiple values).",object,StripeClone API
/v1/webhook_endpoints&GetWebhookEndpoints&200():::EXIT,LENGTH(return.object)==4,daikon.inv.unary.string.FixedLengthString,(return.object),pm.expect(return_object).to.have.length(4),get+v1_webhook_endpoints,1.0,,,,Indicates that the value of a string variable always has a fixed length n. Represented as LENGTH(x)==n.,object,StripeClone API
/v1/webhook_endpoints&GetWebhookEndpoints&200():::EXIT,"return.url == ""/v1/webhook_endpoints""",daikon.inv.unary.string.OneOfString,(return.url),"pm.expect([""/v1/webhook_endpoints""].includes(return_url)).to.be.true",get+v1_webhook_endpoints,1.0,,,,"Represents String variables that take on only a few distinct values. Prints as either x == c (when there is only one value) or as x one of {c1, c2, c3} (when there are multiple values).",url,StripeClone API
/v1/webhook_endpoints&GetWebhookEndpoints&200():::EXIT,LENGTH(return.url)==21,daikon.inv.unary.string.FixedLengthString,(return.url),pm.expect(return_url).to.have.length(21),get+v1_webhook_endpoints,1.0,,,,Indicates that the value of a string variable always has a fixed length n. Represented as LENGTH(x)==n.,url,StripeClone API
/v1/webhook_endpoints&GetWebhookEndpoints&200():::EXIT,size(return.data[]) == 16,daikon.inv.unary.scalar.OneOfScalar,(size(return.data[..])),pm.expect([16].includes(return_data_size_array)).to.be.true,get+v1_webhook_endpoints,,1.0,,,"Represents long variables that take on only a few distinct values. Prints as either x == c (when there is only one value) or as x one of {c1, c2, c3} (when there are multiple values).",data,StripeClone API
/v1/webhook_endpoints&GetWebhookEndpoints&200():::EXIT,input.limit >= size(return.data[]),daikon.inv.binary.twoScalar.IntGreaterEqual,"(input.limit, size(return.data[..]))",pm.expect(input_limit).to.be.at.least(return_data_size_array),get+v1_webhook_endpoints,1.0,,,,Represents an invariant of >= between two long scalars. Prints as x >= y.,data,StripeClone API
/v1/account_links&PostAccountLinks&200():::EXIT,"return.object == ""account_link""",daikon.inv.unary.string.OneOfString,(return.object),"pm.expect([""account_link""].includes(return_object)).to.be.true",post+v1_account_links,1.0,,,,"Represents String variables that take on only a few distinct values. Prints as either x == c (when there is only one value) or as x one of {c1, c2, c3} (when there are multiple values).",object,StripeClone API
/v1/account_links&PostAccountLinks&200():::EXIT,LENGTH(return.object)==12,daikon.inv.unary.string.FixedLengthString,(return.object),pm.expect(return_object).to.have.length(12),post+v1_account_links,1.0,,,,Indicates that the value of a string variable always has a fixed length n. Represented as LENGTH(x)==n.,object,StripeClone API
/v1/account_links&PostAccountLinks&200():::EXIT,LENGTH(return.url)==69,daikon.inv.unary.string.FixedLengthString,(return.url),pm.expect(return_url).to.have.length(69),post+v1_account_links,,1.0,,,Indicates that the value of a string variable always has a fixed length n. Represented as LENGTH(x)==n.,url,StripeClone API
/v1/account_links&PostAccountLinks&200():::EXIT,return.url is Url,daikon.inv.unary.string.IsUrl,(return.url),"pm.expect(return_url).to.match(/^(?:(?:https?|ftp):\/\/)(?:\S+(?::\S*)?@)?(?:(?!10(?:\.\d{1,3}){3})(?!127(?:\.\d{1,3}){3})(?!169\.254(?:\.\d{1,3}){2})(?!192\.168(?:\.\d{1,3}){2})(?!172\.(?:1[6-9]|2\d|3[0-1])(?:\.\d{1,3}){2})(?:[1-9]\d?|1\d\d|2[01]\d|22[0-3])(?:\.(?:1?\d{1,2}|2[0-4]\d|25[0-5])){2}(?:\.(?:[1-9]\d?|1\d\d|2[0-4]\d|25[0-4]))|(?:(?:[\w\u00a1-\uffff0-9]+-?)*[\w\u00a1-\uffff0-9]+)(?:\.(?:[\w\u00a1-\uffff0-9]+-)*[\w\u00a1-\uffff0-9]+)*(?:\.(?:[a-zA-Z\u00a1-\uffff]{2,})))(?::\d{2,5})?(?:\/[^\s]*)?$/)",post+v1_account_links,1.0,,,,Indicates that the value of a string variable is always a URL. Represented as x is Url.,url,StripeClone API
/v1/account_links&PostAccountLinks&200():::EXIT,input.account is a substring of return.url,daikon.inv.binary.twoString.StdString$SubString,"(input.account, return.url)",pm.expect(return_url.includes(input_account)).to.be.true,post+v1_account_links,1.0,,,,Represents the substring invariant between two String scalars. Prints as x is a substring of y.,url,StripeClone API
/v1/account_links&PostAccountLinks&200():::EXIT,return.created < return.expires_at,daikon.inv.binary.twoScalar.IntLessThan,"(return.created, return.expires_at)",pm.expect(return_created).to.be.lessThan(return_expires_at),post+v1_account_links,1.0,,,,Represents an invariant of < between two long scalars. Prints as x < y.,created,StripeClone API
/v1/ephemeral_keys&PostEphemeralKeys&200():::EXIT,LENGTH(return.id)==31,daikon.inv.unary.string.FixedLengthString,(return.id),pm.expect(return_id).to.have.length(31),post+v1_ephemeral_keys,1.0,,,,Indicates that the value of a string variable always has a fixed length n. Represented as LENGTH(x)==n.,id,StripeClone API
/v1/ephemeral_keys&PostEphemeralKeys&200():::EXIT,return.livemode == false,daikon.inv.unary.scalar.OneOfScalar,(return.livemode),pm.expect(return_livemode).to.eql(false),post+v1_ephemeral_keys,,1.0,,,"Represents long variables that take on only a few distinct values. Prints as either x == c (when there is only one value) or as x one of {c1, c2, c3} (when there are multiple values).",livemode,StripeClone API
/v1/ephemeral_keys&PostEphemeralKeys&200():::EXIT,"return.object == ""ephemeral_key""",daikon.inv.unary.string.OneOfString,(return.object),"pm.expect([""ephemeral_key""].includes(return_object)).to.be.true",post+v1_ephemeral_keys,1.0,,,,"Represents String variables that take on only a few distinct values. Prints as either x == c (when there is only one value) or as x one of {c1, c2, c3} (when there are multiple values).",object,StripeClone API
/v1/ephemeral_keys&PostEphemeralKeys&200():::EXIT,LENGTH(return.object)==13,daikon.inv.unary.string.FixedLengthString,(return.object),pm.expect(return_object).to.have.length(13),post+v1_ephemeral_keys,1.0,,,,Indicates that the value of a string variable always has a fixed length n. Represented as LENGTH(x)==n.,object,StripeClone API
/v1/ephemeral_keys&PostEphemeralKeys&200():::EXIT,LENGTH(return.secret)==90,daikon.inv.unary.string.FixedLengthString,(return.secret),pm.expect(return_secret).to.have.length(90),post+v1_ephemeral_keys,1.0,,,,Indicates that the value of a string variable always has a fixed length n. Represented as LENGTH(x)==n.,secret,StripeClone API
/v1/apple_pay/domains&PostApplePayDomains&200():::EXIT,LENGTH(return.id)==29,daikon.inv.unary.string.FixedLengthString,(return.id),pm.expect(return_id).to.have.length(29),post+v1_apple_pay_domains,1.0,,,,Indicates that the value of a string variable always has a fixed length n. Represented as LENGTH(x)==n.,id,StripeClone API
/v1/apple_pay/domains&PostApplePayDomains&200():::EXIT,return.livemode == false,daikon.inv.unary.scalar.OneOfScalar,(return.livemode),pm.expect(return_livemode).to.eql(false),post+v1_apple_pay_domains,,1.0,,,"Represents long variables that take on only a few distinct values. Prints as either x == c (when there is only one value) or as x one of {c1, c2, c3} (when there are multiple values).",livemode,StripeClone API
/v1/apple_pay/domains&PostApplePayDomains&200():::EXIT,"return.object == ""apple_pay_domain""",daikon.inv.unary.string.OneOfString,(return.object),"pm.expect([""apple_pay_domain""].includes(return_object)).to.be.true",post+v1_apple_pay_domains,1.0,,,,"Represents String variables that take on only a few distinct values. Prints as either x == c (when there is only one value) or as x one of {c1, c2, c3} (when there are multiple values).",object,StripeClone API
/v1/apple_pay/domains&PostApplePayDomains&200():::EXIT,LENGTH(return.object)==16,daikon.inv.unary.string.FixedLengthString,(return.object),pm.expect(return_object).to.have.length(16),post+v1_apple_pay_domains,1.0,,,,Indicates that the value of a string variable always has a fixed length n. Represented as LENGTH(x)==n.,object,StripeClone API
/v1/apple_pay/domains&PostApplePayDomains&200():::EXIT,return.domain_name is a substring of input.domain_name,daikon.inv.binary.twoString.StdString$SubString,"(input.domain_name, return.domain_name)",pm.expect(input_domain_name.includes(return_domain_name)).to.be.true,post+v1_apple_pay_domains,1.0,,,,Represents the substring invariant between two String scalars. Prints as x is a substring of y.,domain_name,StripeClone API
/v1/radar/value_list_items&PostRadarValueListItems&200():::EXIT,input.value == return.value,daikon.inv.binary.twoString.StringEqual,"(input.value, return.value)",pm.expect(input_value).to.eql(return_value),post+v1_radar_value_list_items,1.0,,,,Represents an invariant of == between two String scalars. Prints as x == y.,value,StripeClone API
/v1/radar/value_list_items&PostRadarValueListItems&200():::EXIT,input.value_list == return.value_list,daikon.inv.binary.twoString.StringEqual,"(input.value_list, return.value_list)",pm.expect(input_value_list).to.eql(return_value_list),post+v1_radar_value_list_items,1.0,,,,Represents an invariant of == between two String scalars. Prints as x == y.,value_list,StripeClone API
/v1/radar/value_list_items&PostRadarValueListItems&200():::EXIT,"return.created_by == ""API""",daikon.inv.unary.string.OneOfString,(return.created_by),"pm.expect([""API""].includes(return_created_by)).to.be.true",post+v1_radar_value_list_items,1.0,,,,"Represents String variables that take on only a few distinct values. Prints as either x == c (when there is only one value) or as x one of {c1, c2, c3} (when there are multiple values).",created_by,StripeClone API
/v1/radar/value_list_items&PostRadarValueListItems&200():::EXIT,LENGTH(return.created_by)==3,daikon.inv.unary.string.FixedLengthString,(return.created_by),pm.expect(return_created_by).to.have.length(3),post+v1_radar_value_list_items,1.0,,,,Indicates that the value of a string variable always has a fixed length n. Represented as LENGTH(x)==n.,created_by,StripeClone API
/v1/radar/value_list_items&PostRadarValueListItems&200():::EXIT,LENGTH(return.id)==29,daikon.inv.unary.string.FixedLengthString,(return.id),pm.expect(return_id).to.have.length(29),post+v1_radar_value_list_items,1.0,,,,Indicates that the value of a string variable always has a fixed length n. Represented as LENGTH(x)==n.,id,StripeClone API
/v1/radar/value_list_items&PostRadarValueListItems&200():::EXIT,return.livemode == false,daikon.inv.unary.scalar.OneOfScalar,(return.livemode),pm.expect(return_livemode).to.eql(false),post+v1_radar_value_list_items,,1.0,,,"Represents long variables that take on only a few distinct values. Prints as either x == c (when there is only one value) or as x one of {c1, c2, c3} (when there are multiple values).",livemode,StripeClone API
/v1/radar/value_list_items&PostRadarValueListItems&200():::EXIT,"return.object == ""radar.value_list_item""",daikon.inv.unary.string.OneOfString,(return.object),"pm.expect([""radar.value_list_item""].includes(return_object)).to.be.true",post+v1_radar_value_list_items,1.0,,,,"Represents String variables that take on only a few distinct values. Prints as either x == c (when there is only one value) or as x one of {c1, c2, c3} (when there are multiple values).",object,StripeClone API
/v1/radar/value_list_items&PostRadarValueListItems&200():::EXIT,LENGTH(return.object)==21,daikon.inv.unary.string.FixedLengthString,(return.object),pm.expect(return_object).to.have.length(21),post+v1_radar_value_list_items,1.0,,,,Indicates that the value of a string variable always has a fixed length n. Represented as LENGTH(x)==n.,object,StripeClone API
/v1/tax_rates&PostTaxRates&200():::EXIT,input.active == return.active,daikon.inv.binary.twoScalar.IntEqual,"(input.active, return.active)",pm.expect(input_active).to.eql(return_active),post+v1_tax_rates,1.0,,,,Represents an invariant of == between two long scalars. Prints as x == y.,active,StripeClone API
/v1/tax_rates&PostTaxRates&200():::EXIT,input.country == return.country,daikon.inv.binary.twoString.StringEqual,"(input.country, return.country)",pm.expect(input_country).to.eql(return_country),post+v1_tax_rates,1.0,,,,Represents an invariant of == between two String scalars. Prints as x == y.,country,StripeClone API
/v1/tax_rates&PostTaxRates&200():::EXIT,input.description == return.description,daikon.inv.binary.twoString.StringEqual,"(input.description, return.description)",pm.expect(input_description).to.eql(return_description),post+v1_tax_rates,1.0,,,,Represents an invariant of == between two String scalars. Prints as x == y.,description,StripeClone API
/v1/tax_rates&PostTaxRates&200():::EXIT,input.display_name == return.display_name,daikon.inv.binary.twoString.StringEqual,"(input.display_name, return.display_name)",pm.expect(input_display_name).to.eql(return_display_name),post+v1_tax_rates,1.0,,,,Represents an invariant of == between two String scalars. Prints as x == y.,display_name,StripeClone API
/v1/tax_rates&PostTaxRates&200():::EXIT,input.inclusive == return.inclusive,daikon.inv.binary.twoScalar.IntEqual,"(input.inclusive, return.inclusive)",pm.expect(input_inclusive).to.eql(return_inclusive),post+v1_tax_rates,1.0,,,,Represents an invariant of == between two long scalars. Prints as x == y.,inclusive,StripeClone API
/v1/tax_rates&PostTaxRates&200():::EXIT,input.jurisdiction == return.jurisdiction,daikon.inv.binary.twoString.StringEqual,"(input.jurisdiction, return.jurisdiction)",pm.expect(input_jurisdiction).to.eql(return_jurisdiction),post+v1_tax_rates,1.0,,,,Represents an invariant of == between two String scalars. Prints as x == y.,jurisdiction,StripeClone API
/v1/tax_rates&PostTaxRates&200():::EXIT,input.percentage == return.effective_percentage,daikon.inv.binary.twoScalar.FloatEqual,"(input.percentage, return.effective_percentage)",pm.expect(input_percentage).to.eql(return_effective_percentage),post+v1_tax_rates,,1.0,,,,effective_percentage,StripeClone API
/v1/tax_rates&PostTaxRates&200():::EXIT,input.percentage == return.percentage,daikon.inv.binary.twoScalar.FloatEqual,"(input.percentage, return.percentage)",pm.expect(input_percentage).to.eql(return_percentage),post+v1_tax_rates,1.0,,,,,percentage,StripeClone API
/v1/tax_rates&PostTaxRates&200():::EXIT,input.tax_type == return.tax_type,daikon.inv.binary.twoString.StringEqual,"(input.tax_type, return.tax_type)",pm.expect(input_tax_type).to.eql(return_tax_type),post+v1_tax_rates,1.0,,,,Represents an invariant of == between two String scalars. Prints as x == y.,tax_type,StripeClone API
/v1/tax_rates&PostTaxRates&200():::EXIT,LENGTH(return.id)==28,daikon.inv.unary.string.FixedLengthString,(return.id),pm.expect(return_id).to.have.length(28),post+v1_tax_rates,1.0,,,,Indicates that the value of a string variable always has a fixed length n. Represented as LENGTH(x)==n.,id,StripeClone API
/v1/tax_rates&PostTaxRates&200():::EXIT,return.livemode == false,daikon.inv.unary.scalar.OneOfScalar,(return.livemode),pm.expect(return_livemode).to.eql(false),post+v1_tax_rates,,1.0,,,"Represents long variables that take on only a few distinct values. Prints as either x == c (when there is only one value) or as x one of {c1, c2, c3} (when there are multiple values).",livemode,StripeClone API
/v1/tax_rates&PostTaxRates&200():::EXIT,"return.object == ""tax_rate""",daikon.inv.unary.string.OneOfString,(return.object),"pm.expect([""tax_rate""].includes(return_object)).to.be.true",post+v1_tax_rates,1.0,,,,"Represents String variables that take on only a few distinct values. Prints as either x == c (when there is only one value) or as x one of {c1, c2, c3} (when there are multiple values).",object,StripeClone API
/v1/tax_rates&PostTaxRates&200():::EXIT,LENGTH(return.object)==8,daikon.inv.unary.string.FixedLengthString,(return.object),pm.expect(return_object).to.have.length(8),post+v1_tax_rates,1.0,,,,Indicates that the value of a string variable always has a fixed length n. Represented as LENGTH(x)==n.,object,StripeClone API
/v1/test_helpers/test_clocks&PostTestHelpersTestClocks&200():::EXIT,input.frozen_time == return.frozen_time,daikon.inv.binary.twoScalar.IntEqual,"(input.frozen_time, return.frozen_time)",pm.expect(input_frozen_time).to.eql(return_frozen_time),post+v1_test_helpers_test_clocks,1.0,,,,Represents an invariant of == between two long scalars. Prints as x == y.,frozen_time,StripeClone API
/v1/test_helpers/test_clocks&PostTestHelpersTestClocks&200():::EXIT,input.name == return.name,daikon.inv.binary.twoString.StringEqual,"(input.name, return.name)",pm.expect(input_name).to.eql(return_name),post+v1_test_helpers_test_clocks,1.0,,,,Represents an invariant of == between two String scalars. Prints as x == y.,name,StripeClone API
/v1/test_helpers/test_clocks&PostTestHelpersTestClocks&200():::EXIT,LENGTH(return.id)==30,daikon.inv.unary.string.FixedLengthString,(return.id),pm.expect(return_id).to.have.length(30),post+v1_test_helpers_test_clocks,1.0,,,,Indicates that the value of a string variable always has a fixed length n. Represented as LENGTH(x)==n.,id,StripeClone API
/v1/test_helpers/test_clocks&PostTestHelpersTestClocks&200():::EXIT,return.livemode == false,daikon.inv.unary.scalar.OneOfScalar,(return.livemode),pm.expect(return_livemode).to.eql(false),post+v1_test_helpers_test_clocks,,1.0,,,"Represents long variables that take on only a few distinct values. Prints as either x == c (when there is only one value) or as x one of {c1, c2, c3} (when there are multiple values).",livemode,StripeClone API
/v1/test_helpers/test_clocks&PostTestHelpersTestClocks&200():::EXIT,"return.object == ""test_helpers.test_clock""",daikon.inv.unary.string.OneOfString,(return.object),"pm.expect([""test_helpers.test_clock""].includes(return_object)).to.be.true",post+v1_test_helpers_test_clocks,1.0,,,,"Represents String variables that take on only a few distinct values. Prints as either x == c (when there is only one value) or as x one of {c1, c2, c3} (when there are multiple values).",object,StripeClone API
/v1/test_helpers/test_clocks&PostTestHelpersTestClocks&200():::EXIT,LENGTH(return.object)==23,daikon.inv.unary.string.FixedLengthString,(return.object),pm.expect(return_object).to.have.length(23),post+v1_test_helpers_test_clocks,1.0,,,,Indicates that the value of a string variable always has a fixed length n. Represented as LENGTH(x)==n.,object,StripeClone API
/v1/test_helpers/test_clocks&PostTestHelpersTestClocks&200():::EXIT,"return.status == ""ready""",daikon.inv.unary.string.OneOfString,(return.status),"pm.expect([""ready""].includes(return_status)).to.be.true",post+v1_test_helpers_test_clocks,1.0,,,,"Represents String variables that take on only a few distinct values. Prints as either x == c (when there is only one value) or as x one of {c1, c2, c3} (when there are multiple values).",status,StripeClone API
/v1/test_helpers/test_clocks&PostTestHelpersTestClocks&200():::EXIT,LENGTH(return.status)==5,daikon.inv.unary.string.FixedLengthString,(return.status),pm.expect(return_status).to.have.length(5),post+v1_test_helpers_test_clocks,1.0,,,,Indicates that the value of a string variable always has a fixed length n. Represented as LENGTH(x)==n.,status,StripeClone API
/v1/webhook_endpoints&PostWebhookEndpoints&200():::EXIT,input.api_version == return.api_version,daikon.inv.binary.twoString.StringEqual,"(input.api_version, return.api_version)",pm.expect(input_api_version).to.eql(return_api_version),post+v1_webhook_endpoints,1.0,,,,Represents an invariant of == between two String scalars. Prints as x == y.,api_version,StripeClone API
/v1/webhook_endpoints&PostWebhookEndpoints&200():::EXIT,input.url == return.url,daikon.inv.binary.twoString.StringEqual,"(input.url, return.url)",pm.expect(input_url).to.eql(return_url),post+v1_webhook_endpoints,1.0,,,,Represents an invariant of == between two String scalars. Prints as x == y.,url,StripeClone API
/v1/webhook_endpoints&PostWebhookEndpoints&200():::EXIT,LENGTH(return.id)==27,daikon.inv.unary.string.FixedLengthString,(return.id),pm.expect(return_id).to.have.length(27),post+v1_webhook_endpoints,1.0,,,,Indicates that the value of a string variable always has a fixed length n. Represented as LENGTH(x)==n.,id,StripeClone API
/v1/webhook_endpoints&PostWebhookEndpoints&200():::EXIT,return.livemode == false,daikon.inv.unary.scalar.OneOfScalar,(return.livemode),pm.expect(return_livemode).to.eql(false),post+v1_webhook_endpoints,,1.0,,,"Represents long variables that take on only a few distinct values. Prints as either x == c (when there is only one value) or as x one of {c1, c2, c3} (when there are multiple values).",livemode,StripeClone API
/v1/webhook_endpoints&PostWebhookEndpoints&200():::EXIT,"return.object == ""webhook_endpoint""",daikon.inv.unary.string.OneOfString,(return.object),"pm.expect([""webhook_endpoint""].includes(return_object)).to.be.true",post+v1_webhook_endpoints,1.0,,,,"Represents String variables that take on only a few distinct values. Prints as either x == c (when there is only one value) or as x one of {c1, c2, c3} (when there are multiple values).",object,StripeClone API
/v1/webhook_endpoints&PostWebhookEndpoints&200():::EXIT,LENGTH(return.object)==16,daikon.inv.unary.string.FixedLengthString,(return.object),pm.expect(return_object).to.have.length(16),post+v1_webhook_endpoints,1.0,,,,Indicates that the value of a string variable always has a fixed length n. Represented as LENGTH(x)==n.,object,StripeClone API
/v1/webhook_endpoints&PostWebhookEndpoints&200():::EXIT,LENGTH(return.secret)==38,daikon.inv.unary.string.FixedLengthString,(return.secret),pm.expect(return_secret).to.have.length(38),post+v1_webhook_endpoints,1.0,,,,Indicates that the value of a string variable always has a fixed length n. Represented as LENGTH(x)==n.,secret,StripeClone API
/v1/webhook_endpoints&PostWebhookEndpoints&200():::EXIT,"return.status == ""enabled""",daikon.inv.unary.string.OneOfString,(return.status),"pm.expect([""enabled""].includes(return_status)).to.be.true",post+v1_webhook_endpoints,,1.0,,,"Represents String variables that take on only a few distinct values. Prints as either x == c (when there is only one value) or as x one of {c1, c2, c3} (when there are multiple values).",status,StripeClone API
/v1/webhook_endpoints&PostWebhookEndpoints&200():::EXIT,LENGTH(return.status)==7,daikon.inv.unary.string.FixedLengthString,(return.status),pm.expect(return_status).to.have.length(7),post+v1_webhook_endpoints,,1.0,,,Indicates that the value of a string variable always has a fixed length n. Represented as LENGTH(x)==n.,status,StripeClone API
/v1/webhook_endpoints&PostWebhookEndpoints&200():::EXIT,size(return.enabled_events[]) == 1,daikon.inv.unary.scalar.OneOfScalar,(size(return.enabled_events[..])),pm.expect([1].includes(return_enabled_events_size_array)).to.be.true,post+v1_webhook_endpoints,,1.0,,,"Represents long variables that take on only a few distinct values. Prints as either x == c (when there is only one value) or as x one of {c1, c2, c3} (when there are multiple values).",enabled_events,StripeClone API
